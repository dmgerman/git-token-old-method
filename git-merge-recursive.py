begin_unit
comment|'#!/usr/bin/python'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright (C) 2005 Fredrik Kuivinen'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'sys'
op|'.'
name|'path'
op|'.'
name|'append'
op|'('
string|"'''@@GIT_PYTHON_PATH@@'''"
op|')'
newline|'\n'
nl|'\n'
name|'import'
name|'math'
op|','
name|'random'
op|','
name|'os'
op|','
name|'re'
op|','
name|'signal'
op|','
name|'tempfile'
op|','
name|'stat'
op|','
name|'errno'
op|','
name|'traceback'
newline|'\n'
name|'from'
name|'heapq'
name|'import'
name|'heappush'
op|','
name|'heappop'
newline|'\n'
name|'from'
name|'sets'
name|'import'
name|'Set'
newline|'\n'
nl|'\n'
name|'from'
name|'gitMergeCommon'
name|'import'
op|'*'
newline|'\n'
nl|'\n'
DECL|variable|outputIndent
name|'outputIndent'
op|'='
number|'0'
newline|'\n'
DECL|function|output
name|'def'
name|'output'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'write'
op|'('
string|"'  '"
op|'*'
name|'outputIndent'
op|')'
newline|'\n'
name|'printList'
op|'('
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|originalIndexFile
dedent|''
name|'originalIndexFile'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'GIT_INDEX_FILE'"
op|','
nl|'\n'
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'GIT_DIR'"
op|','
string|"'.git'"
op|')'
op|'+'
string|"'/index'"
op|')'
newline|'\n'
name|'temporaryIndexFile'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'GIT_DIR'"
op|','
string|"'.git'"
op|')'
op|'+'
DECL|variable|temporaryIndexFile
string|"'/merge-recursive-tmp-index'"
newline|'\n'
DECL|function|setupIndex
name|'def'
name|'setupIndex'
op|'('
name|'temporary'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'temporaryIndexFile'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
name|'if'
name|'temporary'
op|':'
newline|'\n'
indent|'        '
name|'newIndex'
op|'='
name|'temporaryIndexFile'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'newIndex'
op|'='
name|'originalIndexFile'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'environ'
op|'['
string|"'GIT_INDEX_FILE'"
op|']'
op|'='
name|'newIndex'
newline|'\n'
nl|'\n'
comment|'# This is a global variable which is used in a number of places but'
nl|'\n'
comment|"# only written to in the 'merge' function."
nl|'\n'
nl|'\n'
comment|"# cacheOnly == True  => Don't leave any non-stage 0 entries in the cache and"
nl|'\n'
comment|"#                       don't update the working directory."
nl|'\n'
comment|'#              False => Leave unmerged entries in the cache and update'
nl|'\n'
comment|'#                       the working directory.'
nl|'\n'
nl|'\n'
DECL|variable|cacheOnly
dedent|''
name|'cacheOnly'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# The entry point to the merge code'
nl|'\n'
comment|'# ---------------------------------'
nl|'\n'
nl|'\n'
DECL|function|merge
name|'def'
name|'merge'
op|'('
name|'h1'
op|','
name|'h2'
op|','
name|'branch1Name'
op|','
name|'branch2Name'
op|','
name|'graph'
op|','
name|'callDepth'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'    '
string|"'''Merge the commits h1 and h2, return the resulting virtual\n    commit object and a flag indicating the cleaness of the merge.'''"
newline|'\n'
name|'assert'
op|'('
name|'isinstance'
op|'('
name|'h1'
op|','
name|'Commit'
op|')'
name|'and'
name|'isinstance'
op|'('
name|'h2'
op|','
name|'Commit'
op|')'
op|')'
newline|'\n'
name|'assert'
op|'('
name|'isinstance'
op|'('
name|'graph'
op|','
name|'Graph'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'outputIndent'
newline|'\n'
nl|'\n'
name|'output'
op|'('
string|"'Merging:'"
op|')'
newline|'\n'
name|'output'
op|'('
name|'h1'
op|')'
newline|'\n'
name|'output'
op|'('
name|'h2'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'ca'
op|'='
name|'getCommonAncestors'
op|'('
name|'graph'
op|','
name|'h1'
op|','
name|'h2'
op|')'
newline|'\n'
name|'output'
op|'('
string|"'found'"
op|','
name|'len'
op|'('
name|'ca'
op|')'
op|','
string|"'common ancestor(s):'"
op|')'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'ca'
op|':'
newline|'\n'
indent|'        '
name|'output'
op|'('
name|'x'
op|')'
newline|'\n'
dedent|''
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mergedCA'
op|'='
name|'ca'
op|'['
number|'0'
op|']'
newline|'\n'
name|'for'
name|'h'
name|'in'
name|'ca'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'        '
name|'outputIndent'
op|'='
name|'callDepth'
op|'+'
number|'1'
newline|'\n'
op|'['
name|'mergedCA'
op|','
name|'dummy'
op|']'
op|'='
name|'merge'
op|'('
name|'mergedCA'
op|','
name|'h'
op|','
nl|'\n'
string|"'Temporary merge branch 1'"
op|','
nl|'\n'
string|"'Temporary merge branch 2'"
op|','
nl|'\n'
name|'graph'
op|','
name|'callDepth'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'outputIndent'
op|'='
name|'callDepth'
newline|'\n'
name|'assert'
op|'('
name|'isinstance'
op|'('
name|'mergedCA'
op|','
name|'Commit'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'global'
name|'cacheOnly'
newline|'\n'
name|'if'
name|'callDepth'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'setupIndex'
op|'('
name|'False'
op|')'
newline|'\n'
name|'cacheOnly'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'setupIndex'
op|'('
name|'True'
op|')'
newline|'\n'
name|'runProgram'
op|'('
op|'['
string|"'git-read-tree'"
op|','
name|'h1'
op|'.'
name|'tree'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
name|'cacheOnly'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
op|'['
name|'shaRes'
op|','
name|'clean'
op|']'
op|'='
name|'mergeTrees'
op|'('
name|'h1'
op|'.'
name|'tree'
op|'('
op|')'
op|','
name|'h2'
op|'.'
name|'tree'
op|'('
op|')'
op|','
name|'mergedCA'
op|'.'
name|'tree'
op|'('
op|')'
op|','
nl|'\n'
name|'branch1Name'
op|','
name|'branch2Name'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'clean'
name|'or'
name|'cacheOnly'
op|':'
newline|'\n'
indent|'        '
name|'res'
op|'='
name|'Commit'
op|'('
name|'None'
op|','
op|'['
name|'h1'
op|','
name|'h2'
op|']'
op|','
name|'tree'
op|'='
name|'shaRes'
op|')'
newline|'\n'
name|'graph'
op|'.'
name|'addNode'
op|'('
name|'res'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'res'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'['
name|'res'
op|','
name|'clean'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|getFilesRE
dedent|''
name|'getFilesRE'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'^([0-7]+) (\\S+) ([0-9a-f]{40})\\t(.*)$'"
op|','
name|'re'
op|'.'
name|'S'
op|')'
newline|'\n'
DECL|function|getFilesAndDirs
name|'def'
name|'getFilesAndDirs'
op|'('
name|'tree'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'files'
op|'='
name|'Set'
op|'('
op|')'
newline|'\n'
name|'dirs'
op|'='
name|'Set'
op|'('
op|')'
newline|'\n'
name|'out'
op|'='
name|'runProgram'
op|'('
op|'['
string|"'git-ls-tree'"
op|','
string|"'-r'"
op|','
string|"'-z'"
op|','
name|'tree'
op|']'
op|')'
newline|'\n'
name|'for'
name|'l'
name|'in'
name|'out'
op|'.'
name|'split'
op|'('
string|"'\\0'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'getFilesRE'
op|'.'
name|'match'
op|'('
name|'l'
op|')'
newline|'\n'
name|'if'
name|'m'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'m'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
op|'=='
string|"'tree'"
op|':'
newline|'\n'
indent|'                '
name|'dirs'
op|'.'
name|'add'
op|'('
name|'m'
op|'.'
name|'group'
op|'('
number|'4'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'m'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
op|'=='
string|"'blob'"
op|':'
newline|'\n'
indent|'                '
name|'files'
op|'.'
name|'add'
op|'('
name|'m'
op|'.'
name|'group'
op|'('
number|'4'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
op|'['
name|'files'
op|','
name|'dirs'
op|']'
newline|'\n'
nl|'\n'
comment|'# Those two global variables are used in a number of places but only'
nl|'\n'
comment|"# written to in 'mergeTrees' and 'uniquePath'. They keep track of"
nl|'\n'
comment|'# every file and directory in the two branches that are about to be'
nl|'\n'
comment|'# merged.'
nl|'\n'
DECL|variable|currentFileSet
dedent|''
name|'currentFileSet'
op|'='
name|'None'
newline|'\n'
DECL|variable|currentDirectorySet
name|'currentDirectorySet'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|mergeTrees
name|'def'
name|'mergeTrees'
op|'('
name|'head'
op|','
name|'merge'
op|','
name|'common'
op|','
name|'branch1Name'
op|','
name|'branch2Name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|"'''Merge the trees 'head' and 'merge' with the common ancestor\n    'common'. The name of the head branch is 'branch1Name' and the name of\n    the merge branch is 'branch2Name'. Return a tuple (tree, cleanMerge)\n    where tree is the resulting tree and cleanMerge is True iff the\n    merge was clean.'''"
newline|'\n'
nl|'\n'
name|'assert'
op|'('
name|'isSha'
op|'('
name|'head'
op|')'
name|'and'
name|'isSha'
op|'('
name|'merge'
op|')'
name|'and'
name|'isSha'
op|'('
name|'common'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'common'
op|'=='
name|'merge'
op|':'
newline|'\n'
indent|'        '
name|'output'
op|'('
string|"'Already uptodate!'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'head'
op|','
name|'True'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'cacheOnly'
op|':'
newline|'\n'
indent|'        '
name|'updateArg'
op|'='
string|"'-i'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'updateArg'
op|'='
string|"'-u'"
newline|'\n'
nl|'\n'
dedent|''
op|'['
name|'out'
op|','
name|'code'
op|']'
op|'='
name|'runProgram'
op|'('
op|'['
string|"'git-read-tree'"
op|','
name|'updateArg'
op|','
string|"'-m'"
op|','
nl|'\n'
name|'common'
op|','
name|'head'
op|','
name|'merge'
op|']'
op|','
name|'returnCode'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'code'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|"'git-read-tree:'"
op|','
name|'out'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'['
name|'tree'
op|','
name|'code'
op|']'
op|'='
name|'runProgram'
op|'('
string|"'git-write-tree'"
op|','
name|'returnCode'
op|'='
name|'True'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'tree'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'code'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'global'
name|'currentFileSet'
op|','
name|'currentDirectorySet'
newline|'\n'
op|'['
name|'currentFileSet'
op|','
name|'currentDirectorySet'
op|']'
op|'='
name|'getFilesAndDirs'
op|'('
name|'head'
op|')'
newline|'\n'
op|'['
name|'filesM'
op|','
name|'dirsM'
op|']'
op|'='
name|'getFilesAndDirs'
op|'('
name|'merge'
op|')'
newline|'\n'
name|'currentFileSet'
op|'.'
name|'union_update'
op|'('
name|'filesM'
op|')'
newline|'\n'
name|'currentDirectorySet'
op|'.'
name|'union_update'
op|'('
name|'dirsM'
op|')'
newline|'\n'
nl|'\n'
name|'entries'
op|'='
name|'unmergedCacheEntries'
op|'('
op|')'
newline|'\n'
name|'renamesHead'
op|'='
name|'getRenames'
op|'('
name|'head'
op|','
name|'common'
op|','
name|'head'
op|','
name|'merge'
op|','
name|'entries'
op|')'
newline|'\n'
name|'renamesMerge'
op|'='
name|'getRenames'
op|'('
name|'merge'
op|','
name|'common'
op|','
name|'head'
op|','
name|'merge'
op|','
name|'entries'
op|')'
newline|'\n'
nl|'\n'
name|'cleanMerge'
op|'='
name|'processRenames'
op|'('
name|'renamesHead'
op|','
name|'renamesMerge'
op|','
nl|'\n'
name|'branch1Name'
op|','
name|'branch2Name'
op|')'
newline|'\n'
name|'for'
name|'entry'
name|'in'
name|'entries'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'entry'
op|'.'
name|'processed'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'processEntry'
op|'('
name|'entry'
op|','
name|'branch1Name'
op|','
name|'branch2Name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'cleanMerge'
name|'or'
name|'cacheOnly'
op|':'
newline|'\n'
indent|'            '
name|'tree'
op|'='
name|'runProgram'
op|'('
string|"'git-write-tree'"
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'tree'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'cleanMerge'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'['
name|'tree'
op|','
name|'cleanMerge'
op|']'
newline|'\n'
nl|'\n'
comment|'# Low level file merging, update and removal'
nl|'\n'
comment|'# ------------------------------------------'
nl|'\n'
nl|'\n'
DECL|function|mergeFile
dedent|''
name|'def'
name|'mergeFile'
op|'('
name|'oPath'
op|','
name|'oSha'
op|','
name|'oMode'
op|','
name|'aPath'
op|','
name|'aSha'
op|','
name|'aMode'
op|','
name|'bPath'
op|','
name|'bSha'
op|','
name|'bMode'
op|','
nl|'\n'
name|'branch1Name'
op|','
name|'branch2Name'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'merge'
op|'='
name|'False'
newline|'\n'
name|'clean'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'if'
name|'stat'
op|'.'
name|'S_IFMT'
op|'('
name|'aMode'
op|')'
op|'!='
name|'stat'
op|'.'
name|'S_IFMT'
op|'('
name|'bMode'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'clean'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'stat'
op|'.'
name|'S_ISREG'
op|'('
name|'aMode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mode'
op|'='
name|'aMode'
newline|'\n'
name|'sha'
op|'='
name|'aSha'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mode'
op|'='
name|'bMode'
newline|'\n'
name|'sha'
op|'='
name|'bSha'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'aSha'
op|'!='
name|'oSha'
name|'and'
name|'bSha'
op|'!='
name|'oSha'
op|':'
newline|'\n'
indent|'            '
name|'merge'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'aMode'
op|'=='
name|'oMode'
op|':'
newline|'\n'
indent|'            '
name|'mode'
op|'='
name|'bMode'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mode'
op|'='
name|'aMode'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'aSha'
op|'=='
name|'oSha'
op|':'
newline|'\n'
indent|'            '
name|'sha'
op|'='
name|'bSha'
newline|'\n'
dedent|''
name|'elif'
name|'bSha'
op|'=='
name|'oSha'
op|':'
newline|'\n'
indent|'            '
name|'sha'
op|'='
name|'aSha'
newline|'\n'
dedent|''
name|'elif'
name|'stat'
op|'.'
name|'S_ISREG'
op|'('
name|'aMode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'assert'
op|'('
name|'stat'
op|'.'
name|'S_ISREG'
op|'('
name|'bMode'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'orig'
op|'='
name|'runProgram'
op|'('
op|'['
string|"'git-unpack-file'"
op|','
name|'oSha'
op|']'
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'src1'
op|'='
name|'runProgram'
op|'('
op|'['
string|"'git-unpack-file'"
op|','
name|'aSha'
op|']'
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'src2'
op|'='
name|'runProgram'
op|'('
op|'['
string|"'git-unpack-file'"
op|','
name|'bSha'
op|']'
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
op|'['
name|'out'
op|','
name|'code'
op|']'
op|'='
name|'runProgram'
op|'('
op|'['
string|"'merge'"
op|','
nl|'\n'
string|"'-L'"
op|','
name|'branch1Name'
op|'+'
string|"'/'"
op|'+'
name|'aPath'
op|','
nl|'\n'
string|"'-L'"
op|','
string|"'orig/'"
op|'+'
name|'oPath'
op|','
nl|'\n'
string|"'-L'"
op|','
name|'branch2Name'
op|'+'
string|"'/'"
op|'+'
name|'bPath'
op|','
nl|'\n'
name|'src1'
op|','
name|'orig'
op|','
name|'src2'
op|']'
op|','
name|'returnCode'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'sha'
op|'='
name|'runProgram'
op|'('
op|'['
string|"'git-hash-object'"
op|','
string|"'-t'"
op|','
string|"'blob'"
op|','
string|"'-w'"
op|','
nl|'\n'
name|'src1'
op|']'
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'os'
op|'.'
name|'unlink'
op|'('
name|'orig'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'unlink'
op|'('
name|'src1'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'unlink'
op|'('
name|'src2'
op|')'
newline|'\n'
nl|'\n'
name|'clean'
op|'='
op|'('
name|'code'
op|'=='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'assert'
op|'('
name|'stat'
op|'.'
name|'S_ISLNK'
op|'('
name|'aMode'
op|')'
name|'and'
name|'stat'
op|'.'
name|'S_ISLNK'
op|'('
name|'bMode'
op|')'
op|')'
newline|'\n'
name|'sha'
op|'='
name|'aSha'
newline|'\n'
nl|'\n'
name|'if'
name|'aSha'
op|'!='
name|'bSha'
op|':'
newline|'\n'
indent|'                '
name|'clean'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
op|'['
name|'sha'
op|','
name|'mode'
op|','
name|'clean'
op|','
name|'merge'
op|']'
newline|'\n'
nl|'\n'
DECL|function|updateFile
dedent|''
name|'def'
name|'updateFile'
op|'('
name|'clean'
op|','
name|'sha'
op|','
name|'mode'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'updateCache'
op|'='
name|'cacheOnly'
name|'or'
name|'clean'
newline|'\n'
name|'updateWd'
op|'='
name|'not'
name|'cacheOnly'
newline|'\n'
nl|'\n'
name|'return'
name|'updateFileExt'
op|'('
name|'sha'
op|','
name|'mode'
op|','
name|'path'
op|','
name|'updateCache'
op|','
name|'updateWd'
op|')'
newline|'\n'
nl|'\n'
DECL|function|updateFileExt
dedent|''
name|'def'
name|'updateFileExt'
op|'('
name|'sha'
op|','
name|'mode'
op|','
name|'path'
op|','
name|'updateCache'
op|','
name|'updateWd'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'cacheOnly'
op|':'
newline|'\n'
indent|'        '
name|'updateWd'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'updateWd'
op|':'
newline|'\n'
indent|'        '
name|'pathComponents'
op|'='
name|'path'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'pathComponents'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
string|"'/'"
op|'.'
name|'join'
op|'('
name|'pathComponents'
op|'['
number|'0'
op|':'
name|'x'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'createDir'
op|'='
name|'not'
name|'stat'
op|'.'
name|'S_ISDIR'
op|'('
name|'os'
op|'.'
name|'lstat'
op|'('
name|'p'
op|')'
op|'.'
name|'st_mode'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'                '
name|'createDir'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'createDir'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'p'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                    '
name|'die'
op|'('
string|'"Couldn\'t create directory"'
op|','
name|'p'
op|','
name|'e'
op|'.'
name|'strerror'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'prog'
op|'='
op|'['
string|"'git-cat-file'"
op|','
string|"'blob'"
op|','
name|'sha'
op|']'
newline|'\n'
name|'if'
name|'stat'
op|'.'
name|'S_ISREG'
op|'('
name|'mode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'if'
name|'mode'
op|'&'
number|'0100'
op|':'
newline|'\n'
indent|'                '
name|'mode'
op|'='
number|'0777'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'mode'
op|'='
number|'0666'
newline|'\n'
dedent|''
name|'fd'
op|'='
name|'os'
op|'.'
name|'open'
op|'('
name|'path'
op|','
name|'os'
op|'.'
name|'O_WRONLY'
op|'|'
name|'os'
op|'.'
name|'O_TRUNC'
op|'|'
name|'os'
op|'.'
name|'O_CREAT'
op|','
name|'mode'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'prog'
op|','
name|'stdout'
op|'='
name|'fd'
op|')'
newline|'\n'
name|'proc'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'os'
op|'.'
name|'close'
op|'('
name|'fd'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'stat'
op|'.'
name|'S_ISLNK'
op|'('
name|'mode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'linkTarget'
op|'='
name|'runProgram'
op|'('
name|'prog'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'symlink'
op|'('
name|'linkTarget'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'assert'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'updateWd'
name|'and'
name|'updateCache'
op|':'
newline|'\n'
indent|'        '
name|'runProgram'
op|'('
op|'['
string|"'git-update-index'"
op|','
string|"'--add'"
op|','
string|"'--'"
op|','
name|'path'
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'updateCache'
op|':'
newline|'\n'
indent|'        '
name|'runProgram'
op|'('
op|'['
string|"'git-update-index'"
op|','
string|"'--add'"
op|','
string|"'--cacheinfo'"
op|','
nl|'\n'
string|"'0%o'"
op|'%'
name|'mode'
op|','
name|'sha'
op|','
name|'path'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|removeFile
dedent|''
dedent|''
name|'def'
name|'removeFile'
op|'('
name|'clean'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'updateCache'
op|'='
name|'cacheOnly'
name|'or'
name|'clean'
newline|'\n'
name|'updateWd'
op|'='
name|'not'
name|'cacheOnly'
newline|'\n'
nl|'\n'
name|'if'
name|'updateCache'
op|':'
newline|'\n'
indent|'        '
name|'runProgram'
op|'('
op|'['
string|"'git-update-index'"
op|','
string|"'--force-remove'"
op|','
string|"'--'"
op|','
name|'path'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'updateWd'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'e'
op|'.'
name|'errno'
op|'!='
name|'errno'
op|'.'
name|'ENOENT'
name|'and'
name|'e'
op|'.'
name|'errno'
op|'!='
name|'errno'
op|'.'
name|'EISDIR'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'removedirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|uniquePath
dedent|''
dedent|''
dedent|''
name|'def'
name|'uniquePath'
op|'('
name|'path'
op|','
name|'branch'
op|')'
op|':'
newline|'\n'
DECL|function|fileExists
indent|'    '
name|'def'
name|'fileExists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'lstat'
op|'('
name|'path'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'e'
op|'.'
name|'errno'
op|'=='
name|'errno'
op|'.'
name|'ENOENT'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'branch'
op|'='
name|'branch'
op|'.'
name|'replace'
op|'('
string|"'/'"
op|','
string|"'_'"
op|')'
newline|'\n'
name|'newPath'
op|'='
name|'path'
op|'+'
string|"'~'"
op|'+'
name|'branch'
newline|'\n'
name|'suffix'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'newPath'
name|'in'
name|'currentFileSet'
name|'or'
name|'newPath'
name|'in'
name|'currentDirectorySet'
name|'or'
name|'fileExists'
op|'('
name|'newPath'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'suffix'
op|'+='
number|'1'
newline|'\n'
name|'newPath'
op|'='
name|'path'
op|'+'
string|"'~'"
op|'+'
name|'branch'
op|'+'
string|"'_'"
op|'+'
name|'str'
op|'('
name|'suffix'
op|')'
newline|'\n'
dedent|''
name|'currentFileSet'
op|'.'
name|'add'
op|'('
name|'newPath'
op|')'
newline|'\n'
name|'return'
name|'newPath'
newline|'\n'
nl|'\n'
comment|'# Cache entry management'
nl|'\n'
comment|'# ----------------------'
nl|'\n'
nl|'\n'
DECL|class|CacheEntry
dedent|''
name|'class'
name|'CacheEntry'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
DECL|class|Stage
indent|'        '
name|'class'
name|'Stage'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sha1'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'mode'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# Used for debugging only'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'mode'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'m'
op|'='
string|"'0%o'"
op|'%'
name|'self'
op|'.'
name|'mode'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'m'
op|'='
string|"'None'"
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'sha1'
op|':'
newline|'\n'
indent|'                    '
name|'sha1'
op|'='
name|'self'
op|'.'
name|'sha1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'sha1'
op|'='
string|"'None'"
newline|'\n'
dedent|''
name|'return'
string|"'sha1: '"
op|'+'
name|'sha1'
op|'+'
string|"' mode: '"
op|'+'
name|'m'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stages'
op|'='
op|'['
name|'Stage'
op|'('
op|')'
op|','
name|'Stage'
op|'('
op|')'
op|','
name|'Stage'
op|'('
op|')'
op|','
name|'Stage'
op|'('
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'='
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'processed'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'path: '"
op|'+'
name|'self'
op|'.'
name|'path'
op|'+'
string|"' stages: '"
op|'+'
name|'repr'
op|'('
op|'['
name|'str'
op|'('
name|'x'
op|')'
name|'for'
name|'x'
name|'in'
name|'self'
op|'.'
name|'stages'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|class|CacheEntryContainer
dedent|''
dedent|''
name|'class'
name|'CacheEntryContainer'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'entries'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|add
dedent|''
name|'def'
name|'add'
op|'('
name|'self'
op|','
name|'entry'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'entries'
op|'['
name|'entry'
op|'.'
name|'path'
op|']'
op|'='
name|'entry'
newline|'\n'
nl|'\n'
DECL|member|get
dedent|''
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'entries'
op|'.'
name|'get'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'entries'
op|'.'
name|'itervalues'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|variable|unmergedRE
dedent|''
dedent|''
name|'unmergedRE'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'^([0-7]+) ([0-9a-f]{40}) ([1-3])\\t(.*)$'"
op|','
name|'re'
op|'.'
name|'S'
op|')'
newline|'\n'
DECL|function|unmergedCacheEntries
name|'def'
name|'unmergedCacheEntries'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|"'''Create a dictionary mapping file names to CacheEntry\n    objects. The dictionary contains one entry for every path with a\n    non-zero stage entry.'''"
newline|'\n'
nl|'\n'
name|'lines'
op|'='
name|'runProgram'
op|'('
op|'['
string|"'git-ls-files'"
op|','
string|"'-z'"
op|','
string|"'--unmerged'"
op|']'
op|')'
op|'.'
name|'split'
op|'('
string|"'\\0'"
op|')'
newline|'\n'
name|'lines'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'CacheEntryContainer'
op|'('
op|')'
newline|'\n'
name|'for'
name|'l'
name|'in'
name|'lines'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'unmergedRE'
op|'.'
name|'match'
op|'('
name|'l'
op|')'
newline|'\n'
name|'if'
name|'m'
op|':'
newline|'\n'
indent|'            '
name|'mode'
op|'='
name|'int'
op|'('
name|'m'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'sha1'
op|'='
name|'m'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
newline|'\n'
name|'stage'
op|'='
name|'int'
op|'('
name|'m'
op|'.'
name|'group'
op|'('
number|'3'
op|')'
op|')'
newline|'\n'
name|'path'
op|'='
name|'m'
op|'.'
name|'group'
op|'('
number|'4'
op|')'
newline|'\n'
nl|'\n'
name|'e'
op|'='
name|'res'
op|'.'
name|'get'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'e'
op|'='
name|'CacheEntry'
op|'('
name|'path'
op|')'
newline|'\n'
name|'res'
op|'.'
name|'add'
op|'('
name|'e'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'e'
op|'.'
name|'stages'
op|'['
name|'stage'
op|']'
op|'.'
name|'mode'
op|'='
name|'mode'
newline|'\n'
name|'e'
op|'.'
name|'stages'
op|'['
name|'stage'
op|']'
op|'.'
name|'sha1'
op|'='
name|'sha1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|"'Error: Merge program failed: Unexpected output from'"
op|','
nl|'\n'
string|"'git-ls-files:'"
op|','
name|'l'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'res'
newline|'\n'
nl|'\n'
DECL|variable|lsTreeRE
dedent|''
name|'lsTreeRE'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'^([0-7]+) (\\S+) ([0-9a-f]{40})\\t(.*)\\n$'"
op|','
name|'re'
op|'.'
name|'S'
op|')'
newline|'\n'
DECL|function|getCacheEntry
name|'def'
name|'getCacheEntry'
op|'('
name|'path'
op|','
name|'origTree'
op|','
name|'aTree'
op|','
name|'bTree'
op|')'
op|':'
newline|'\n'
indent|'    '
string|"'''Returns a CacheEntry object which doesn't have to correspond to\n    a real cache entry in Git's index.'''"
newline|'\n'
nl|'\n'
DECL|function|parse
name|'def'
name|'parse'
op|'('
name|'out'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'out'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'lsTreeRE'
op|'.'
name|'match'
op|'('
name|'out'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'m'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|"'Unexpected output from git-ls-tree:'"
op|','
name|'out'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'m'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
op|'=='
string|"'blob'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
name|'m'
op|'.'
name|'group'
op|'('
number|'3'
op|')'
op|','
name|'int'
op|'('
name|'m'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|','
number|'8'
op|')'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'res'
op|'='
name|'CacheEntry'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
op|'['
name|'oSha'
op|','
name|'oMode'
op|']'
op|'='
name|'parse'
op|'('
name|'runProgram'
op|'('
op|'['
string|"'git-ls-tree'"
op|','
name|'origTree'
op|','
string|"'--'"
op|','
name|'path'
op|']'
op|')'
op|')'
newline|'\n'
op|'['
name|'aSha'
op|','
name|'aMode'
op|']'
op|'='
name|'parse'
op|'('
name|'runProgram'
op|'('
op|'['
string|"'git-ls-tree'"
op|','
name|'aTree'
op|','
string|"'--'"
op|','
name|'path'
op|']'
op|')'
op|')'
newline|'\n'
op|'['
name|'bSha'
op|','
name|'bMode'
op|']'
op|'='
name|'parse'
op|'('
name|'runProgram'
op|'('
op|'['
string|"'git-ls-tree'"
op|','
name|'bTree'
op|','
string|"'--'"
op|','
name|'path'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'res'
op|'.'
name|'stages'
op|'['
number|'1'
op|']'
op|'.'
name|'sha1'
op|'='
name|'oSha'
newline|'\n'
name|'res'
op|'.'
name|'stages'
op|'['
number|'1'
op|']'
op|'.'
name|'mode'
op|'='
name|'oMode'
newline|'\n'
name|'res'
op|'.'
name|'stages'
op|'['
number|'2'
op|']'
op|'.'
name|'sha1'
op|'='
name|'aSha'
newline|'\n'
name|'res'
op|'.'
name|'stages'
op|'['
number|'2'
op|']'
op|'.'
name|'mode'
op|'='
name|'aMode'
newline|'\n'
name|'res'
op|'.'
name|'stages'
op|'['
number|'3'
op|']'
op|'.'
name|'sha1'
op|'='
name|'bSha'
newline|'\n'
name|'res'
op|'.'
name|'stages'
op|'['
number|'3'
op|']'
op|'.'
name|'mode'
op|'='
name|'bMode'
newline|'\n'
nl|'\n'
name|'return'
name|'res'
newline|'\n'
nl|'\n'
comment|'# Rename detection and handling'
nl|'\n'
comment|'# -----------------------------'
nl|'\n'
nl|'\n'
DECL|class|RenameEntry
dedent|''
name|'class'
name|'RenameEntry'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
nl|'\n'
name|'src'
op|','
name|'srcSha'
op|','
name|'srcMode'
op|','
name|'srcCacheEntry'
op|','
nl|'\n'
name|'dst'
op|','
name|'dstSha'
op|','
name|'dstMode'
op|','
name|'dstCacheEntry'
op|','
nl|'\n'
name|'score'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'srcName'
op|'='
name|'src'
newline|'\n'
name|'self'
op|'.'
name|'srcSha'
op|'='
name|'srcSha'
newline|'\n'
name|'self'
op|'.'
name|'srcMode'
op|'='
name|'srcMode'
newline|'\n'
name|'self'
op|'.'
name|'srcCacheEntry'
op|'='
name|'srcCacheEntry'
newline|'\n'
name|'self'
op|'.'
name|'dstName'
op|'='
name|'dst'
newline|'\n'
name|'self'
op|'.'
name|'dstSha'
op|'='
name|'dstSha'
newline|'\n'
name|'self'
op|'.'
name|'dstMode'
op|'='
name|'dstMode'
newline|'\n'
name|'self'
op|'.'
name|'dstCacheEntry'
op|'='
name|'dstCacheEntry'
newline|'\n'
name|'self'
op|'.'
name|'score'
op|'='
name|'score'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'processed'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|RenameEntryContainer
dedent|''
dedent|''
name|'class'
name|'RenameEntryContainer'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'entriesSrc'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'entriesDst'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|add
dedent|''
name|'def'
name|'add'
op|'('
name|'self'
op|','
name|'entry'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'entriesSrc'
op|'['
name|'entry'
op|'.'
name|'srcName'
op|']'
op|'='
name|'entry'
newline|'\n'
name|'self'
op|'.'
name|'entriesDst'
op|'['
name|'entry'
op|'.'
name|'dstName'
op|']'
op|'='
name|'entry'
newline|'\n'
nl|'\n'
DECL|member|getSrc
dedent|''
name|'def'
name|'getSrc'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'entriesSrc'
op|'.'
name|'get'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getDst
dedent|''
name|'def'
name|'getDst'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'entriesDst'
op|'.'
name|'get'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'entriesSrc'
op|'.'
name|'itervalues'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|variable|parseDiffRenamesRE
dedent|''
dedent|''
name|'parseDiffRenamesRE'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'^:([0-7]+) ([0-7]+) ([0-9a-f]{40}) ([0-9a-f]{40}) R([0-9]*)$'"
op|')'
newline|'\n'
DECL|function|getRenames
name|'def'
name|'getRenames'
op|'('
name|'tree'
op|','
name|'oTree'
op|','
name|'aTree'
op|','
name|'bTree'
op|','
name|'cacheEntries'
op|')'
op|':'
newline|'\n'
indent|'    '
string|"'''Get information of all renames which occured between 'oTree' and\n    'tree'. We need the three trees in the merge ('oTree', 'aTree' and\n    'bTree') to be able to associate the correct cache entries with\n    the rename information. 'tree' is always equal to either aTree or bTree.'''"
newline|'\n'
nl|'\n'
name|'assert'
op|'('
name|'tree'
op|'=='
name|'aTree'
name|'or'
name|'tree'
op|'=='
name|'bTree'
op|')'
newline|'\n'
name|'inp'
op|'='
name|'runProgram'
op|'('
op|'['
string|"'git-diff-tree'"
op|','
string|"'-M'"
op|','
string|"'--diff-filter=R'"
op|','
string|"'-r'"
op|','
nl|'\n'
string|"'-z'"
op|','
name|'oTree'
op|','
name|'tree'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'ret'
op|'='
name|'RenameEntryContainer'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'recs'
op|'='
name|'inp'
op|'.'
name|'split'
op|'('
string|'"\\0"'
op|')'
newline|'\n'
name|'recs'
op|'.'
name|'pop'
op|'('
op|')'
comment|"# remove last entry (which is '')"
newline|'\n'
name|'it'
op|'='
name|'recs'
op|'.'
name|'__iter__'
op|'('
op|')'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'rec'
op|'='
name|'it'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'m'
op|'='
name|'parseDiffRenamesRE'
op|'.'
name|'match'
op|'('
name|'rec'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'m'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|"'Unexpected output from git-diff-tree:'"
op|','
name|'rec'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'srcMode'
op|'='
name|'int'
op|'('
name|'m'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'dstMode'
op|'='
name|'int'
op|'('
name|'m'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'srcSha'
op|'='
name|'m'
op|'.'
name|'group'
op|'('
number|'3'
op|')'
newline|'\n'
name|'dstSha'
op|'='
name|'m'
op|'.'
name|'group'
op|'('
number|'4'
op|')'
newline|'\n'
name|'score'
op|'='
name|'m'
op|'.'
name|'group'
op|'('
number|'5'
op|')'
newline|'\n'
name|'src'
op|'='
name|'it'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'dst'
op|'='
name|'it'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'srcCacheEntry'
op|'='
name|'cacheEntries'
op|'.'
name|'get'
op|'('
name|'src'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'srcCacheEntry'
op|':'
newline|'\n'
indent|'                '
name|'srcCacheEntry'
op|'='
name|'getCacheEntry'
op|'('
name|'src'
op|','
name|'oTree'
op|','
name|'aTree'
op|','
name|'bTree'
op|')'
newline|'\n'
name|'cacheEntries'
op|'.'
name|'add'
op|'('
name|'srcCacheEntry'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'dstCacheEntry'
op|'='
name|'cacheEntries'
op|'.'
name|'get'
op|'('
name|'dst'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'dstCacheEntry'
op|':'
newline|'\n'
indent|'                '
name|'dstCacheEntry'
op|'='
name|'getCacheEntry'
op|'('
name|'dst'
op|','
name|'oTree'
op|','
name|'aTree'
op|','
name|'bTree'
op|')'
newline|'\n'
name|'cacheEntries'
op|'.'
name|'add'
op|'('
name|'dstCacheEntry'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ret'
op|'.'
name|'add'
op|'('
name|'RenameEntry'
op|'('
name|'src'
op|','
name|'srcSha'
op|','
name|'srcMode'
op|','
name|'srcCacheEntry'
op|','
nl|'\n'
name|'dst'
op|','
name|'dstSha'
op|','
name|'dstMode'
op|','
name|'dstCacheEntry'
op|','
nl|'\n'
name|'score'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
name|'return'
name|'ret'
newline|'\n'
nl|'\n'
DECL|function|fmtRename
dedent|''
name|'def'
name|'fmtRename'
op|'('
name|'src'
op|','
name|'dst'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'srcPath'
op|'='
name|'src'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'dstPath'
op|'='
name|'dst'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'path'
op|'='
op|'['
op|']'
newline|'\n'
name|'endIndex'
op|'='
name|'min'
op|'('
name|'len'
op|'('
name|'srcPath'
op|')'
op|','
name|'len'
op|'('
name|'dstPath'
op|')'
op|')'
op|'-'
number|'1'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'endIndex'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'srcPath'
op|'['
name|'x'
op|']'
op|'=='
name|'dstPath'
op|'['
name|'x'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'.'
name|'append'
op|'('
name|'srcPath'
op|'['
name|'x'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'endIndex'
op|'='
name|'x'
newline|'\n'
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'path'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'/'"
op|'.'
name|'join'
op|'('
name|'path'
op|')'
op|'+'
string|"'/{'"
op|'+'
string|"'/'"
op|'.'
name|'join'
op|'('
name|'srcPath'
op|'['
name|'endIndex'
op|':'
op|']'
op|')'
op|'+'
string|"' => '"
op|'+'
string|"'/'"
op|'.'
name|'join'
op|'('
name|'dstPath'
op|'['
name|'endIndex'
op|':'
op|']'
op|')'
op|'+'
string|"'}'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'src'
op|'+'
string|"' => '"
op|'+'
name|'dst'
newline|'\n'
nl|'\n'
DECL|function|processRenames
dedent|''
dedent|''
name|'def'
name|'processRenames'
op|'('
name|'renamesA'
op|','
name|'renamesB'
op|','
name|'branchNameA'
op|','
name|'branchNameB'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'srcNames'
op|'='
name|'Set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'renamesA'
op|':'
newline|'\n'
indent|'        '
name|'srcNames'
op|'.'
name|'add'
op|'('
name|'x'
op|'.'
name|'srcName'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'x'
name|'in'
name|'renamesB'
op|':'
newline|'\n'
indent|'        '
name|'srcNames'
op|'.'
name|'add'
op|'('
name|'x'
op|'.'
name|'srcName'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cleanMerge'
op|'='
name|'True'
newline|'\n'
name|'for'
name|'path'
name|'in'
name|'srcNames'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'renamesA'
op|'.'
name|'getSrc'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'renames1'
op|'='
name|'renamesA'
newline|'\n'
name|'renames2'
op|'='
name|'renamesB'
newline|'\n'
name|'branchName1'
op|'='
name|'branchNameA'
newline|'\n'
name|'branchName2'
op|'='
name|'branchNameB'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'renames1'
op|'='
name|'renamesB'
newline|'\n'
name|'renames2'
op|'='
name|'renamesA'
newline|'\n'
name|'branchName1'
op|'='
name|'branchNameB'
newline|'\n'
name|'branchName2'
op|'='
name|'branchNameA'
newline|'\n'
nl|'\n'
dedent|''
name|'ren1'
op|'='
name|'renames1'
op|'.'
name|'getSrc'
op|'('
name|'path'
op|')'
newline|'\n'
name|'ren2'
op|'='
name|'renames2'
op|'.'
name|'getSrc'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
name|'ren1'
op|'.'
name|'dstCacheEntry'
op|'.'
name|'processed'
op|'='
name|'True'
newline|'\n'
name|'ren1'
op|'.'
name|'srcCacheEntry'
op|'.'
name|'processed'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'if'
name|'ren1'
op|'.'
name|'processed'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'ren1'
op|'.'
name|'processed'
op|'='
name|'True'
newline|'\n'
name|'removeFile'
op|'('
name|'True'
op|','
name|'ren1'
op|'.'
name|'srcName'
op|')'
newline|'\n'
name|'if'
name|'ren2'
op|':'
newline|'\n'
comment|'# Renamed in 1 and renamed in 2'
nl|'\n'
indent|'            '
name|'assert'
op|'('
name|'ren1'
op|'.'
name|'srcName'
op|'=='
name|'ren2'
op|'.'
name|'srcName'
op|')'
newline|'\n'
name|'ren2'
op|'.'
name|'dstCacheEntry'
op|'.'
name|'processed'
op|'='
name|'True'
newline|'\n'
name|'ren2'
op|'.'
name|'processed'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'if'
name|'ren1'
op|'.'
name|'dstName'
op|'!='
name|'ren2'
op|'.'
name|'dstName'
op|':'
newline|'\n'
indent|'                '
name|'output'
op|'('
string|"'CONFLICT (rename/rename): Rename'"
op|','
nl|'\n'
name|'fmtRename'
op|'('
name|'path'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
op|','
string|"'in branch'"
op|','
name|'branchName1'
op|','
nl|'\n'
string|"'rename'"
op|','
name|'fmtRename'
op|'('
name|'path'
op|','
name|'ren2'
op|'.'
name|'dstName'
op|')'
op|','
string|"'in'"
op|','
nl|'\n'
name|'branchName2'
op|')'
newline|'\n'
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'if'
name|'ren1'
op|'.'
name|'dstName'
name|'in'
name|'currentDirectorySet'
op|':'
newline|'\n'
indent|'                    '
name|'dstName1'
op|'='
name|'uniquePath'
op|'('
name|'ren1'
op|'.'
name|'dstName'
op|','
name|'branchName1'
op|')'
newline|'\n'
name|'output'
op|'('
name|'ren1'
op|'.'
name|'dstName'
op|','
string|"'is a directory in'"
op|','
name|'branchName2'
op|','
nl|'\n'
string|"'adding as'"
op|','
name|'dstName1'
op|','
string|"'instead.'"
op|')'
newline|'\n'
name|'removeFile'
op|'('
name|'False'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'dstName1'
op|'='
name|'ren1'
op|'.'
name|'dstName'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'ren2'
op|'.'
name|'dstName'
name|'in'
name|'currentDirectorySet'
op|':'
newline|'\n'
indent|'                    '
name|'dstName2'
op|'='
name|'uniquePath'
op|'('
name|'ren2'
op|'.'
name|'dstName'
op|','
name|'branchName2'
op|')'
newline|'\n'
name|'output'
op|'('
name|'ren2'
op|'.'
name|'dstName'
op|','
string|"'is a directory in'"
op|','
name|'branchName1'
op|','
nl|'\n'
string|"'adding as'"
op|','
name|'dstName2'
op|','
string|"'instead.'"
op|')'
newline|'\n'
name|'removeFile'
op|'('
name|'False'
op|','
name|'ren2'
op|'.'
name|'dstName'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'dstName2'
op|'='
name|'ren1'
op|'.'
name|'dstName'
newline|'\n'
nl|'\n'
dedent|''
name|'updateFile'
op|'('
name|'False'
op|','
name|'ren1'
op|'.'
name|'dstSha'
op|','
name|'ren1'
op|'.'
name|'dstMode'
op|','
name|'dstName1'
op|')'
newline|'\n'
name|'updateFile'
op|'('
name|'False'
op|','
name|'ren2'
op|'.'
name|'dstSha'
op|','
name|'ren2'
op|'.'
name|'dstMode'
op|','
name|'dstName2'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
op|'['
name|'resSha'
op|','
name|'resMode'
op|','
name|'clean'
op|','
name|'merge'
op|']'
op|'='
name|'mergeFile'
op|'('
name|'ren1'
op|'.'
name|'srcName'
op|','
name|'ren1'
op|'.'
name|'srcSha'
op|','
name|'ren1'
op|'.'
name|'srcMode'
op|','
nl|'\n'
name|'ren1'
op|'.'
name|'dstName'
op|','
name|'ren1'
op|'.'
name|'dstSha'
op|','
name|'ren1'
op|'.'
name|'dstMode'
op|','
nl|'\n'
name|'ren2'
op|'.'
name|'dstName'
op|','
name|'ren2'
op|'.'
name|'dstSha'
op|','
name|'ren2'
op|'.'
name|'dstMode'
op|','
nl|'\n'
name|'branchName1'
op|','
name|'branchName2'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'merge'
name|'or'
name|'not'
name|'clean'
op|':'
newline|'\n'
indent|'                    '
name|'output'
op|'('
string|"'Renaming'"
op|','
name|'fmtRename'
op|'('
name|'path'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'merge'
op|':'
newline|'\n'
indent|'                    '
name|'output'
op|'('
string|"'Auto-merging'"
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'clean'
op|':'
newline|'\n'
indent|'                    '
name|'output'
op|'('
string|"'CONFLICT (content): merge conflict in'"
op|','
nl|'\n'
name|'ren1'
op|'.'
name|'dstName'
op|')'
newline|'\n'
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'cacheOnly'
op|':'
newline|'\n'
indent|'                        '
name|'updateFileExt'
op|'('
name|'ren1'
op|'.'
name|'dstSha'
op|','
name|'ren1'
op|'.'
name|'dstMode'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|','
nl|'\n'
name|'updateCache'
op|'='
name|'True'
op|','
name|'updateWd'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'updateFile'
op|'('
name|'clean'
op|','
name|'resSha'
op|','
name|'resMode'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Renamed in 1, maybe changed in 2'
nl|'\n'
indent|'            '
name|'if'
name|'renamesA'
op|'=='
name|'renames1'
op|':'
newline|'\n'
indent|'                '
name|'stage'
op|'='
number|'3'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'stage'
op|'='
number|'2'
newline|'\n'
nl|'\n'
dedent|''
name|'srcShaOtherBranch'
op|'='
name|'ren1'
op|'.'
name|'srcCacheEntry'
op|'.'
name|'stages'
op|'['
name|'stage'
op|']'
op|'.'
name|'sha1'
newline|'\n'
name|'srcModeOtherBranch'
op|'='
name|'ren1'
op|'.'
name|'srcCacheEntry'
op|'.'
name|'stages'
op|'['
name|'stage'
op|']'
op|'.'
name|'mode'
newline|'\n'
nl|'\n'
name|'dstShaOtherBranch'
op|'='
name|'ren1'
op|'.'
name|'dstCacheEntry'
op|'.'
name|'stages'
op|'['
name|'stage'
op|']'
op|'.'
name|'sha1'
newline|'\n'
name|'dstModeOtherBranch'
op|'='
name|'ren1'
op|'.'
name|'dstCacheEntry'
op|'.'
name|'stages'
op|'['
name|'stage'
op|']'
op|'.'
name|'mode'
newline|'\n'
nl|'\n'
name|'tryMerge'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'if'
name|'ren1'
op|'.'
name|'dstName'
name|'in'
name|'currentDirectorySet'
op|':'
newline|'\n'
indent|'                '
name|'newPath'
op|'='
name|'uniquePath'
op|'('
name|'ren1'
op|'.'
name|'dstName'
op|','
name|'branchName1'
op|')'
newline|'\n'
name|'output'
op|'('
string|"'CONFLICT (rename/directory): Rename'"
op|','
nl|'\n'
name|'fmtRename'
op|'('
name|'ren1'
op|'.'
name|'srcName'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
op|','
string|"'in'"
op|','
name|'branchName1'
op|','
nl|'\n'
string|"'directory'"
op|','
name|'ren1'
op|'.'
name|'dstName'
op|','
string|"'added in'"
op|','
name|'branchName2'
op|')'
newline|'\n'
name|'output'
op|'('
string|"'Renaming'"
op|','
name|'ren1'
op|'.'
name|'srcName'
op|','
string|"'to'"
op|','
name|'newPath'
op|','
string|"'instead'"
op|')'
newline|'\n'
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
name|'removeFile'
op|'('
name|'False'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
newline|'\n'
name|'updateFile'
op|'('
name|'False'
op|','
name|'ren1'
op|'.'
name|'dstSha'
op|','
name|'ren1'
op|'.'
name|'dstMode'
op|','
name|'newPath'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'srcShaOtherBranch'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'output'
op|'('
string|"'CONFLICT (rename/delete): Rename'"
op|','
nl|'\n'
name|'fmtRename'
op|'('
name|'ren1'
op|'.'
name|'srcName'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
op|','
string|"'in'"
op|','
nl|'\n'
name|'branchName1'
op|','
string|"'and deleted in'"
op|','
name|'branchName2'
op|')'
newline|'\n'
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
name|'updateFile'
op|'('
name|'False'
op|','
name|'ren1'
op|'.'
name|'dstSha'
op|','
name|'ren1'
op|'.'
name|'dstMode'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'dstShaOtherBranch'
op|':'
newline|'\n'
indent|'                '
name|'newPath'
op|'='
name|'uniquePath'
op|'('
name|'ren1'
op|'.'
name|'dstName'
op|','
name|'branchName2'
op|')'
newline|'\n'
name|'output'
op|'('
string|"'CONFLICT (rename/add): Rename'"
op|','
nl|'\n'
name|'fmtRename'
op|'('
name|'ren1'
op|'.'
name|'srcName'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
op|','
string|"'in'"
op|','
nl|'\n'
name|'branchName1'
op|'+'
string|"'.'"
op|','
name|'ren1'
op|'.'
name|'dstName'
op|','
string|"'added in'"
op|','
name|'branchName2'
op|')'
newline|'\n'
name|'output'
op|'('
string|"'Adding as'"
op|','
name|'newPath'
op|','
string|"'instead'"
op|')'
newline|'\n'
name|'updateFile'
op|'('
name|'False'
op|','
name|'dstShaOtherBranch'
op|','
name|'dstModeOtherBranch'
op|','
name|'newPath'
op|')'
newline|'\n'
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
name|'tryMerge'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'renames2'
op|'.'
name|'getDst'
op|'('
name|'ren1'
op|'.'
name|'dstName'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'dst2'
op|'='
name|'renames2'
op|'.'
name|'getDst'
op|'('
name|'ren1'
op|'.'
name|'dstName'
op|')'
newline|'\n'
name|'newPath1'
op|'='
name|'uniquePath'
op|'('
name|'ren1'
op|'.'
name|'dstName'
op|','
name|'branchName1'
op|')'
newline|'\n'
name|'newPath2'
op|'='
name|'uniquePath'
op|'('
name|'dst2'
op|'.'
name|'dstName'
op|','
name|'branchName2'
op|')'
newline|'\n'
name|'output'
op|'('
string|"'CONFLICT (rename/rename): Rename'"
op|','
nl|'\n'
name|'fmtRename'
op|'('
name|'ren1'
op|'.'
name|'srcName'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
op|','
string|"'in'"
op|','
nl|'\n'
name|'branchName1'
op|'+'
string|"'. Rename'"
op|','
nl|'\n'
name|'fmtRename'
op|'('
name|'dst2'
op|'.'
name|'srcName'
op|','
name|'dst2'
op|'.'
name|'dstName'
op|')'
op|','
string|"'in'"
op|','
name|'branchName2'
op|')'
newline|'\n'
name|'output'
op|'('
string|"'Renaming'"
op|','
name|'ren1'
op|'.'
name|'srcName'
op|','
string|"'to'"
op|','
name|'newPath1'
op|','
string|"'and'"
op|','
nl|'\n'
name|'dst2'
op|'.'
name|'srcName'
op|','
string|"'to'"
op|','
name|'newPath2'
op|','
string|"'instead'"
op|')'
newline|'\n'
name|'removeFile'
op|'('
name|'False'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
newline|'\n'
name|'updateFile'
op|'('
name|'False'
op|','
name|'ren1'
op|'.'
name|'dstSha'
op|','
name|'ren1'
op|'.'
name|'dstMode'
op|','
name|'newPath1'
op|')'
newline|'\n'
name|'updateFile'
op|'('
name|'False'
op|','
name|'dst2'
op|'.'
name|'dstSha'
op|','
name|'dst2'
op|'.'
name|'dstMode'
op|','
name|'newPath2'
op|')'
newline|'\n'
name|'dst2'
op|'.'
name|'processed'
op|'='
name|'True'
newline|'\n'
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'tryMerge'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'tryMerge'
op|':'
newline|'\n'
indent|'                '
op|'['
name|'resSha'
op|','
name|'resMode'
op|','
name|'clean'
op|','
name|'merge'
op|']'
op|'='
name|'mergeFile'
op|'('
name|'ren1'
op|'.'
name|'srcName'
op|','
name|'ren1'
op|'.'
name|'srcSha'
op|','
name|'ren1'
op|'.'
name|'srcMode'
op|','
nl|'\n'
name|'ren1'
op|'.'
name|'dstName'
op|','
name|'ren1'
op|'.'
name|'dstSha'
op|','
name|'ren1'
op|'.'
name|'dstMode'
op|','
nl|'\n'
name|'ren1'
op|'.'
name|'srcName'
op|','
name|'srcShaOtherBranch'
op|','
name|'srcModeOtherBranch'
op|','
nl|'\n'
name|'branchName1'
op|','
name|'branchName2'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'merge'
name|'or'
name|'not'
name|'clean'
op|':'
newline|'\n'
indent|'                    '
name|'output'
op|'('
string|"'Renaming'"
op|','
name|'fmtRename'
op|'('
name|'ren1'
op|'.'
name|'srcName'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'merge'
op|':'
newline|'\n'
indent|'                    '
name|'output'
op|'('
string|"'Auto-merging'"
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'clean'
op|':'
newline|'\n'
indent|'                    '
name|'output'
op|'('
string|"'CONFLICT (rename/modify): Merge conflict in'"
op|','
nl|'\n'
name|'ren1'
op|'.'
name|'dstName'
op|')'
newline|'\n'
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'cacheOnly'
op|':'
newline|'\n'
indent|'                        '
name|'updateFileExt'
op|'('
name|'ren1'
op|'.'
name|'dstSha'
op|','
name|'ren1'
op|'.'
name|'dstMode'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|','
nl|'\n'
name|'updateCache'
op|'='
name|'True'
op|','
name|'updateWd'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'updateFile'
op|'('
name|'clean'
op|','
name|'resSha'
op|','
name|'resMode'
op|','
name|'ren1'
op|'.'
name|'dstName'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'cleanMerge'
newline|'\n'
nl|'\n'
comment|'# Per entry merge function'
nl|'\n'
comment|'# ------------------------'
nl|'\n'
nl|'\n'
DECL|function|processEntry
dedent|''
name|'def'
name|'processEntry'
op|'('
name|'entry'
op|','
name|'branch1Name'
op|','
name|'branch2Name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|"'''Merge one cache entry.'''"
newline|'\n'
nl|'\n'
name|'debug'
op|'('
string|"'processing'"
op|','
name|'entry'
op|'.'
name|'path'
op|','
string|"'clean cache:'"
op|','
name|'cacheOnly'
op|')'
newline|'\n'
nl|'\n'
name|'cleanMerge'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'entry'
op|'.'
name|'path'
newline|'\n'
name|'oSha'
op|'='
name|'entry'
op|'.'
name|'stages'
op|'['
number|'1'
op|']'
op|'.'
name|'sha1'
newline|'\n'
name|'oMode'
op|'='
name|'entry'
op|'.'
name|'stages'
op|'['
number|'1'
op|']'
op|'.'
name|'mode'
newline|'\n'
name|'aSha'
op|'='
name|'entry'
op|'.'
name|'stages'
op|'['
number|'2'
op|']'
op|'.'
name|'sha1'
newline|'\n'
name|'aMode'
op|'='
name|'entry'
op|'.'
name|'stages'
op|'['
number|'2'
op|']'
op|'.'
name|'mode'
newline|'\n'
name|'bSha'
op|'='
name|'entry'
op|'.'
name|'stages'
op|'['
number|'3'
op|']'
op|'.'
name|'sha1'
newline|'\n'
name|'bMode'
op|'='
name|'entry'
op|'.'
name|'stages'
op|'['
number|'3'
op|']'
op|'.'
name|'mode'
newline|'\n'
nl|'\n'
name|'assert'
op|'('
name|'oSha'
op|'=='
name|'None'
name|'or'
name|'isSha'
op|'('
name|'oSha'
op|')'
op|')'
newline|'\n'
name|'assert'
op|'('
name|'aSha'
op|'=='
name|'None'
name|'or'
name|'isSha'
op|'('
name|'aSha'
op|')'
op|')'
newline|'\n'
name|'assert'
op|'('
name|'bSha'
op|'=='
name|'None'
name|'or'
name|'isSha'
op|'('
name|'bSha'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'assert'
op|'('
name|'oMode'
op|'=='
name|'None'
name|'or'
name|'type'
op|'('
name|'oMode'
op|')'
name|'is'
name|'int'
op|')'
newline|'\n'
name|'assert'
op|'('
name|'aMode'
op|'=='
name|'None'
name|'or'
name|'type'
op|'('
name|'aMode'
op|')'
name|'is'
name|'int'
op|')'
newline|'\n'
name|'assert'
op|'('
name|'bMode'
op|'=='
name|'None'
name|'or'
name|'type'
op|'('
name|'bMode'
op|')'
name|'is'
name|'int'
op|')'
newline|'\n'
nl|'\n'
name|'if'
op|'('
name|'oSha'
name|'and'
op|'('
name|'not'
name|'aSha'
name|'or'
name|'not'
name|'bSha'
op|')'
op|')'
op|':'
newline|'\n'
comment|'#'
nl|'\n'
comment|'# Case A: Deleted in one'
nl|'\n'
comment|'#'
nl|'\n'
indent|'        '
name|'if'
op|'('
name|'not'
name|'aSha'
name|'and'
name|'not'
name|'bSha'
op|')'
name|'or'
op|'('
name|'aSha'
op|'=='
name|'oSha'
name|'and'
name|'not'
name|'bSha'
op|')'
name|'or'
op|'('
name|'not'
name|'aSha'
name|'and'
name|'bSha'
op|'=='
name|'oSha'
op|')'
op|':'
newline|'\n'
comment|'# Deleted in both or deleted in one and unchanged in the other'
nl|'\n'
indent|'            '
name|'if'
name|'aSha'
op|':'
newline|'\n'
indent|'                '
name|'output'
op|'('
string|"'Removing'"
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
name|'removeFile'
op|'('
name|'True'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Deleted in one and changed in the other'
nl|'\n'
indent|'            '
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'not'
name|'aSha'
op|':'
newline|'\n'
indent|'                '
name|'output'
op|'('
string|"'CONFLICT (delete/modify):'"
op|','
name|'path'
op|','
string|"'deleted in'"
op|','
nl|'\n'
name|'branch1Name'
op|','
string|"'and modified in'"
op|','
name|'branch2Name'
op|'+'
string|"'.'"
op|','
nl|'\n'
string|"'Version'"
op|','
name|'branch2Name'
op|','
string|"'of'"
op|','
name|'path'
op|','
string|"'left in tree.'"
op|')'
newline|'\n'
name|'mode'
op|'='
name|'bMode'
newline|'\n'
name|'sha'
op|'='
name|'bSha'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'output'
op|'('
string|"'CONFLICT (modify/delete):'"
op|','
name|'path'
op|','
string|"'deleted in'"
op|','
nl|'\n'
name|'branch2Name'
op|','
string|"'and modified in'"
op|','
name|'branch1Name'
op|'+'
string|"'.'"
op|','
nl|'\n'
string|"'Version'"
op|','
name|'branch1Name'
op|','
string|"'of'"
op|','
name|'path'
op|','
string|"'left in tree.'"
op|')'
newline|'\n'
name|'mode'
op|'='
name|'aMode'
newline|'\n'
name|'sha'
op|'='
name|'aSha'
newline|'\n'
nl|'\n'
dedent|''
name|'updateFile'
op|'('
name|'False'
op|','
name|'sha'
op|','
name|'mode'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'elif'
op|'('
name|'not'
name|'oSha'
name|'and'
name|'aSha'
name|'and'
name|'not'
name|'bSha'
op|')'
name|'or'
op|'('
name|'not'
name|'oSha'
name|'and'
name|'not'
name|'aSha'
name|'and'
name|'bSha'
op|')'
op|':'
newline|'\n'
comment|'#'
nl|'\n'
comment|'# Case B: Added in one.'
nl|'\n'
comment|'#'
nl|'\n'
indent|'        '
name|'if'
name|'aSha'
op|':'
newline|'\n'
indent|'            '
name|'addBranch'
op|'='
name|'branch1Name'
newline|'\n'
name|'otherBranch'
op|'='
name|'branch2Name'
newline|'\n'
name|'mode'
op|'='
name|'aMode'
newline|'\n'
name|'sha'
op|'='
name|'aSha'
newline|'\n'
name|'conf'
op|'='
string|"'file/directory'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'addBranch'
op|'='
name|'branch2Name'
newline|'\n'
name|'otherBranch'
op|'='
name|'branch1Name'
newline|'\n'
name|'mode'
op|'='
name|'bMode'
newline|'\n'
name|'sha'
op|'='
name|'bSha'
newline|'\n'
name|'conf'
op|'='
string|"'directory/file'"
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'path'
name|'in'
name|'currentDirectorySet'
op|':'
newline|'\n'
indent|'            '
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
name|'newPath'
op|'='
name|'uniquePath'
op|'('
name|'path'
op|','
name|'addBranch'
op|')'
newline|'\n'
name|'output'
op|'('
string|"'CONFLICT ('"
op|'+'
name|'conf'
op|'+'
string|"'):'"
op|','
nl|'\n'
string|"'There is a directory with name'"
op|','
name|'path'
op|','
string|"'in'"
op|','
nl|'\n'
name|'otherBranch'
op|'+'
string|"'. Adding'"
op|','
name|'path'
op|','
string|"'as'"
op|','
name|'newPath'
op|')'
newline|'\n'
nl|'\n'
name|'removeFile'
op|'('
name|'False'
op|','
name|'path'
op|')'
newline|'\n'
name|'updateFile'
op|'('
name|'False'
op|','
name|'sha'
op|','
name|'mode'
op|','
name|'newPath'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'output'
op|'('
string|"'Adding'"
op|','
name|'path'
op|')'
newline|'\n'
name|'updateFile'
op|'('
name|'True'
op|','
name|'sha'
op|','
name|'mode'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'elif'
name|'not'
name|'oSha'
name|'and'
name|'aSha'
name|'and'
name|'bSha'
op|':'
newline|'\n'
comment|'#'
nl|'\n'
comment|'# Case C: Added in both (check for same permissions).'
nl|'\n'
comment|'#'
nl|'\n'
indent|'        '
name|'if'
name|'aSha'
op|'=='
name|'bSha'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'aMode'
op|'!='
name|'bMode'
op|':'
newline|'\n'
indent|'                '
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
name|'output'
op|'('
string|"'CONFLICT: File'"
op|','
name|'path'
op|','
nl|'\n'
string|"'added identically in both branches, but permissions'"
op|','
nl|'\n'
string|"'conflict'"
op|','
string|"'0%o'"
op|'%'
name|'aMode'
op|','
string|"'->'"
op|','
string|"'0%o'"
op|'%'
name|'bMode'
op|')'
newline|'\n'
name|'output'
op|'('
string|"'CONFLICT: adding with permission:'"
op|','
string|"'0%o'"
op|'%'
name|'aMode'
op|')'
newline|'\n'
nl|'\n'
name|'updateFile'
op|'('
name|'False'
op|','
name|'aSha'
op|','
name|'aMode'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# This case is handled by git-read-tree'
nl|'\n'
indent|'                '
name|'assert'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
name|'newPath1'
op|'='
name|'uniquePath'
op|'('
name|'path'
op|','
name|'branch1Name'
op|')'
newline|'\n'
name|'newPath2'
op|'='
name|'uniquePath'
op|'('
name|'path'
op|','
name|'branch2Name'
op|')'
newline|'\n'
name|'output'
op|'('
string|"'CONFLICT (add/add): File'"
op|','
name|'path'
op|','
nl|'\n'
string|"'added non-identically in both branches. Adding as'"
op|','
nl|'\n'
name|'newPath1'
op|','
string|"'and'"
op|','
name|'newPath2'
op|','
string|"'instead.'"
op|')'
newline|'\n'
name|'removeFile'
op|'('
name|'False'
op|','
name|'path'
op|')'
newline|'\n'
name|'updateFile'
op|'('
name|'False'
op|','
name|'aSha'
op|','
name|'aMode'
op|','
name|'newPath1'
op|')'
newline|'\n'
name|'updateFile'
op|'('
name|'False'
op|','
name|'bSha'
op|','
name|'bMode'
op|','
name|'newPath2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'elif'
name|'oSha'
name|'and'
name|'aSha'
name|'and'
name|'bSha'
op|':'
newline|'\n'
comment|'#'
nl|'\n'
comment|'# case D: Modified in both, but differently.'
nl|'\n'
comment|'#'
nl|'\n'
indent|'        '
name|'output'
op|'('
string|"'Auto-merging'"
op|','
name|'path'
op|')'
newline|'\n'
op|'['
name|'sha'
op|','
name|'mode'
op|','
name|'clean'
op|','
name|'dummy'
op|']'
op|'='
name|'mergeFile'
op|'('
name|'path'
op|','
name|'oSha'
op|','
name|'oMode'
op|','
nl|'\n'
name|'path'
op|','
name|'aSha'
op|','
name|'aMode'
op|','
nl|'\n'
name|'path'
op|','
name|'bSha'
op|','
name|'bMode'
op|','
nl|'\n'
name|'branch1Name'
op|','
name|'branch2Name'
op|')'
newline|'\n'
name|'if'
name|'clean'
op|':'
newline|'\n'
indent|'            '
name|'updateFile'
op|'('
name|'True'
op|','
name|'sha'
op|','
name|'mode'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'cleanMerge'
op|'='
name|'False'
newline|'\n'
name|'output'
op|'('
string|"'CONFLICT (content): Merge conflict in'"
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'cacheOnly'
op|':'
newline|'\n'
indent|'                '
name|'updateFile'
op|'('
name|'False'
op|','
name|'sha'
op|','
name|'mode'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'updateFileExt'
op|'('
name|'aSha'
op|','
name|'aMode'
op|','
name|'path'
op|','
nl|'\n'
name|'updateCache'
op|'='
name|'True'
op|','
name|'updateWd'
op|'='
name|'False'
op|')'
newline|'\n'
name|'updateFileExt'
op|'('
name|'sha'
op|','
name|'mode'
op|','
name|'path'
op|','
name|'updateCache'
op|'='
name|'False'
op|','
name|'updateWd'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|'"ERROR: Fatal merge failure, shouldn\'t happen."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'cleanMerge'
newline|'\n'
nl|'\n'
DECL|function|usage
dedent|''
name|'def'
name|'usage'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'die'
op|'('
string|"'Usage:'"
op|','
name|'sys'
op|'.'
name|'argv'
op|'['
number|'0'
op|']'
op|','
string|"' <base>... -- <head> <remote>..'"
op|')'
newline|'\n'
nl|'\n'
comment|'# main entry point as merge strategy module'
nl|'\n'
comment|'# The first parameters up to -- are merge bases, and the rest are heads.'
nl|'\n'
comment|'# This strategy module figures out merge bases itself, so we only'
nl|'\n'
comment|'# get heads.'
nl|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'sys'
op|'.'
name|'argv'
op|')'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'    '
name|'usage'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'nextArg'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'sys'
op|'.'
name|'argv'
op|')'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'sys'
op|'.'
name|'argv'
op|'['
name|'nextArg'
op|']'
op|'=='
string|"'--'"
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'sys'
op|'.'
name|'argv'
op|')'
op|'!='
name|'nextArg'
op|'+'
number|'3'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|"'Not handling anything other than two heads merge.'"
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'h1'
op|'='
name|'firstBranch'
op|'='
name|'sys'
op|'.'
name|'argv'
op|'['
name|'nextArg'
op|'+'
number|'1'
op|']'
newline|'\n'
name|'h2'
op|'='
name|'secondBranch'
op|'='
name|'sys'
op|'.'
name|'argv'
op|'['
name|'nextArg'
op|'+'
number|'2'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'IndexError'
op|':'
newline|'\n'
indent|'            '
name|'usage'
op|'('
op|')'
newline|'\n'
dedent|''
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'print'
string|"'Merging'"
op|','
name|'h1'
op|','
string|"'with'"
op|','
name|'h2'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'h1'
op|'='
name|'runProgram'
op|'('
op|'['
string|"'git-rev-parse'"
op|','
string|"'--verify'"
op|','
name|'h1'
op|'+'
string|"'^0'"
op|']'
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'h2'
op|'='
name|'runProgram'
op|'('
op|'['
string|"'git-rev-parse'"
op|','
string|"'--verify'"
op|','
name|'h2'
op|'+'
string|"'^0'"
op|']'
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'graph'
op|'='
name|'buildGraph'
op|'('
op|'['
name|'h1'
op|','
name|'h2'
op|']'
op|')'
newline|'\n'
nl|'\n'
op|'['
name|'dummy'
op|','
name|'clean'
op|']'
op|'='
name|'merge'
op|'('
name|'graph'
op|'.'
name|'shaMap'
op|'['
name|'h1'
op|']'
op|','
name|'graph'
op|'.'
name|'shaMap'
op|'['
name|'h2'
op|']'
op|','
nl|'\n'
name|'firstBranch'
op|','
name|'secondBranch'
op|','
name|'graph'
op|')'
newline|'\n'
nl|'\n'
name|'print'
string|"''"
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'isinstance'
op|'('
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|','
name|'SystemExit'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'traceback'
op|'.'
name|'print_exc'
op|'('
name|'None'
op|','
name|'sys'
op|'.'
name|'stderr'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'clean'
op|':'
newline|'\n'
indent|'    '
name|'sys'
op|'.'
name|'exit'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'    '
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
