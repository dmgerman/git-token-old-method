begin_unit
begin_ifndef
ifndef|#
directive|ifndef
name|SEND_PACK_H
end_ifndef
begin_define
DECL|macro|SEND_PACK_H
define|#
directive|define
name|SEND_PACK_H
end_define
begin_struct
DECL|struct|send_pack_args
struct|struct
name|send_pack_args
block|{
DECL|member|receivepack
specifier|const
name|char
modifier|*
name|receivepack
decl_stmt|;
DECL|member|verbose
name|unsigned
name|verbose
range|:
literal|1
decl_stmt|,
DECL|member|send_all
name|send_all
range|:
literal|1
decl_stmt|,
DECL|member|force_update
name|force_update
range|:
literal|1
decl_stmt|,
DECL|member|use_thin_pack
name|use_thin_pack
range|:
literal|1
decl_stmt|,
DECL|member|dry_run
name|dry_run
range|:
literal|1
decl_stmt|;
block|}
struct|;
end_struct
begin_function_decl
name|int
name|send_pack
parameter_list|(
name|struct
name|send_pack_args
modifier|*
name|args
parameter_list|,
specifier|const
name|char
modifier|*
name|dest
parameter_list|,
name|struct
name|remote
modifier|*
name|remote
parameter_list|,
name|int
name|nr_heads
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|heads
parameter_list|)
function_decl|;
end_function_decl
begin_endif
endif|#
directive|endif
end_endif
end_unit
