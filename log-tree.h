begin_unit
begin_ifndef
ifndef|#
directive|ifndef
name|LOG_TREE_H
end_ifndef
begin_define
DECL|macro|LOG_TREE_H
define|#
directive|define
name|LOG_TREE_H
end_define
begin_struct
DECL|struct|log_tree_opt
struct|struct
name|log_tree_opt
block|{
DECL|member|diffopt
name|struct
name|diff_options
name|diffopt
decl_stmt|;
DECL|member|show_root_diff
name|int
name|show_root_diff
decl_stmt|;
DECL|member|no_commit_id
name|int
name|no_commit_id
decl_stmt|;
DECL|member|verbose_header
name|int
name|verbose_header
decl_stmt|;
DECL|member|ignore_merges
name|int
name|ignore_merges
decl_stmt|;
DECL|member|combine_merges
name|int
name|combine_merges
decl_stmt|;
DECL|member|dense_combined_merges
name|int
name|dense_combined_merges
decl_stmt|;
DECL|member|always_show_header
name|int
name|always_show_header
decl_stmt|;
DECL|member|header_prefix
specifier|const
name|char
modifier|*
name|header_prefix
decl_stmt|;
DECL|member|header
specifier|const
name|char
modifier|*
name|header
decl_stmt|;
DECL|member|commit_format
name|enum
name|cmit_fmt
name|commit_format
decl_stmt|;
block|}
struct|;
end_struct
begin_function_decl
name|void
name|init_log_tree_opt
parameter_list|(
name|struct
name|log_tree_opt
modifier|*
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|int
name|log_tree_diff_flush
parameter_list|(
name|struct
name|log_tree_opt
modifier|*
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|int
name|log_tree_commit
parameter_list|(
name|struct
name|log_tree_opt
modifier|*
parameter_list|,
name|struct
name|commit
modifier|*
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|int
name|log_tree_opt_parse
parameter_list|(
name|struct
name|log_tree_opt
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl
begin_endif
endif|#
directive|endif
end_endif
end_unit
