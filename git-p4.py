begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# git-p4.py -- A tool for bidirectional operation between a Perforce depot and git.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Author: Simon Hausmann <simon@lst.de>'
nl|'\n'
comment|'# Copyright: 2007 Simon Hausmann <simon@lst.de>'
nl|'\n'
comment|'#            2007 Trolltech ASA'
nl|'\n'
comment|'# License: MIT <http://www.opensource.org/licenses/mit-license.php>'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
name|'import'
name|'optparse'
op|','
name|'sys'
op|','
name|'os'
op|','
name|'marshal'
op|','
name|'subprocess'
op|','
name|'shelve'
newline|'\n'
name|'import'
name|'tempfile'
op|','
name|'getopt'
op|','
name|'os'
op|'.'
name|'path'
op|','
name|'time'
op|','
name|'platform'
newline|'\n'
name|'import'
name|'re'
op|','
name|'shutil'
newline|'\n'
nl|'\n'
DECL|variable|verbose
name|'verbose'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# Only labels/tags matching this will be imported/exported'
nl|'\n'
DECL|variable|defaultLabelRegexp
name|'defaultLabelRegexp'
op|'='
string|"r'[a-zA-Z0-9_\\-.]+$'"
newline|'\n'
nl|'\n'
DECL|function|p4_build_cmd
name|'def'
name|'p4_build_cmd'
op|'('
name|'cmd'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Build a suitable p4 command line.\n\n    This consolidates building and returning a p4 command line into one\n    location. It means that hooking into the environment, or other configuration\n    can be done more easily.\n    """'
newline|'\n'
name|'real_cmd'
op|'='
op|'['
string|'"p4"'
op|']'
newline|'\n'
nl|'\n'
name|'user'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.user"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'user'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'real_cmd'
op|'+='
op|'['
string|'"-u"'
op|','
name|'user'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'password'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.password"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'password'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'real_cmd'
op|'+='
op|'['
string|'"-P"'
op|','
name|'password'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'port'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.port"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'port'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'real_cmd'
op|'+='
op|'['
string|'"-p"'
op|','
name|'port'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'host'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.host"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'host'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'real_cmd'
op|'+='
op|'['
string|'"-H"'
op|','
name|'host'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'client'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.client"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'client'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'real_cmd'
op|'+='
op|'['
string|'"-c"'
op|','
name|'client'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'cmd'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'real_cmd'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
name|'real_cmd'
op|')'
op|'+'
string|"' '"
op|'+'
name|'cmd'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'real_cmd'
op|'+='
name|'cmd'
newline|'\n'
dedent|''
name|'return'
name|'real_cmd'
newline|'\n'
nl|'\n'
DECL|function|chdir
dedent|''
name|'def'
name|'chdir'
op|'('
name|'dir'
op|')'
op|':'
newline|'\n'
comment|"# P4 uses the PWD environment variable rather than getcwd(). Since we're"
nl|'\n'
comment|'# not using the shell, we have to set it ourselves.  This path could'
nl|'\n'
comment|'# be relative, so go there first, then figure out where we ended up.'
nl|'\n'
indent|'    '
name|'os'
op|'.'
name|'chdir'
op|'('
name|'dir'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'environ'
op|'['
string|"'PWD'"
op|']'
op|'='
name|'os'
op|'.'
name|'getcwd'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|die
dedent|''
name|'def'
name|'die'
op|'('
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
name|'msg'
op|'+'
string|'"\\n"'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|function|write_pipe
dedent|''
dedent|''
name|'def'
name|'write_pipe'
op|'('
name|'c'
op|','
name|'stdin'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'        '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|"'Writing pipe: %s\\n'"
op|'%'
name|'str'
op|'('
name|'c'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'expand'
op|'='
name|'isinstance'
op|'('
name|'c'
op|','
name|'basestring'
op|')'
newline|'\n'
name|'p'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'c'
op|','
name|'stdin'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
name|'shell'
op|'='
name|'expand'
op|')'
newline|'\n'
name|'pipe'
op|'='
name|'p'
op|'.'
name|'stdin'
newline|'\n'
name|'val'
op|'='
name|'pipe'
op|'.'
name|'write'
op|'('
name|'stdin'
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'if'
name|'p'
op|'.'
name|'wait'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|"'Command failed: %s'"
op|'%'
name|'str'
op|'('
name|'c'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'val'
newline|'\n'
nl|'\n'
DECL|function|p4_write_pipe
dedent|''
name|'def'
name|'p4_write_pipe'
op|'('
name|'c'
op|','
name|'stdin'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'real_cmd'
op|'='
name|'p4_build_cmd'
op|'('
name|'c'
op|')'
newline|'\n'
name|'return'
name|'write_pipe'
op|'('
name|'real_cmd'
op|','
name|'stdin'
op|')'
newline|'\n'
nl|'\n'
DECL|function|read_pipe
dedent|''
name|'def'
name|'read_pipe'
op|'('
name|'c'
op|','
name|'ignore_error'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'        '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|"'Reading pipe: %s\\n'"
op|'%'
name|'str'
op|'('
name|'c'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'expand'
op|'='
name|'isinstance'
op|'('
name|'c'
op|','
name|'basestring'
op|')'
newline|'\n'
name|'p'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'c'
op|','
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
name|'shell'
op|'='
name|'expand'
op|')'
newline|'\n'
name|'pipe'
op|'='
name|'p'
op|'.'
name|'stdout'
newline|'\n'
name|'val'
op|'='
name|'pipe'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'p'
op|'.'
name|'wait'
op|'('
op|')'
name|'and'
name|'not'
name|'ignore_error'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|"'Command failed: %s'"
op|'%'
name|'str'
op|'('
name|'c'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'val'
newline|'\n'
nl|'\n'
DECL|function|p4_read_pipe
dedent|''
name|'def'
name|'p4_read_pipe'
op|'('
name|'c'
op|','
name|'ignore_error'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'real_cmd'
op|'='
name|'p4_build_cmd'
op|'('
name|'c'
op|')'
newline|'\n'
name|'return'
name|'read_pipe'
op|'('
name|'real_cmd'
op|','
name|'ignore_error'
op|')'
newline|'\n'
nl|'\n'
DECL|function|read_pipe_lines
dedent|''
name|'def'
name|'read_pipe_lines'
op|'('
name|'c'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'        '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|"'Reading pipe: %s\\n'"
op|'%'
name|'str'
op|'('
name|'c'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'expand'
op|'='
name|'isinstance'
op|'('
name|'c'
op|','
name|'basestring'
op|')'
newline|'\n'
name|'p'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'c'
op|','
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
name|'shell'
op|'='
name|'expand'
op|')'
newline|'\n'
name|'pipe'
op|'='
name|'p'
op|'.'
name|'stdout'
newline|'\n'
name|'val'
op|'='
name|'pipe'
op|'.'
name|'readlines'
op|'('
op|')'
newline|'\n'
name|'if'
name|'pipe'
op|'.'
name|'close'
op|'('
op|')'
name|'or'
name|'p'
op|'.'
name|'wait'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|"'Command failed: %s'"
op|'%'
name|'str'
op|'('
name|'c'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'val'
newline|'\n'
nl|'\n'
DECL|function|p4_read_pipe_lines
dedent|''
name|'def'
name|'p4_read_pipe_lines'
op|'('
name|'c'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Specifically invoke p4 on the command supplied. """'
newline|'\n'
name|'real_cmd'
op|'='
name|'p4_build_cmd'
op|'('
name|'c'
op|')'
newline|'\n'
name|'return'
name|'read_pipe_lines'
op|'('
name|'real_cmd'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4_has_command
dedent|''
name|'def'
name|'p4_has_command'
op|'('
name|'cmd'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Ask p4 for help on this command.  If it returns an error, the\n       command does not exist in this version of p4."""'
newline|'\n'
name|'real_cmd'
op|'='
name|'p4_build_cmd'
op|'('
op|'['
string|'"help"'
op|','
name|'cmd'
op|']'
op|')'
newline|'\n'
name|'p'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'real_cmd'
op|','
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
nl|'\n'
name|'stderr'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'communicate'
op|'('
op|')'
newline|'\n'
name|'return'
name|'p'
op|'.'
name|'returncode'
op|'=='
number|'0'
newline|'\n'
nl|'\n'
DECL|function|system
dedent|''
name|'def'
name|'system'
op|'('
name|'cmd'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'expand'
op|'='
name|'isinstance'
op|'('
name|'cmd'
op|','
name|'basestring'
op|')'
newline|'\n'
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'        '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"executing %s\\n"'
op|'%'
name|'str'
op|'('
name|'cmd'
op|')'
op|')'
newline|'\n'
dedent|''
name|'subprocess'
op|'.'
name|'check_call'
op|'('
name|'cmd'
op|','
name|'shell'
op|'='
name|'expand'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4_system
dedent|''
name|'def'
name|'p4_system'
op|'('
name|'cmd'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Specifically invoke p4 as the system command. """'
newline|'\n'
name|'real_cmd'
op|'='
name|'p4_build_cmd'
op|'('
name|'cmd'
op|')'
newline|'\n'
name|'expand'
op|'='
name|'isinstance'
op|'('
name|'real_cmd'
op|','
name|'basestring'
op|')'
newline|'\n'
name|'subprocess'
op|'.'
name|'check_call'
op|'('
name|'real_cmd'
op|','
name|'shell'
op|'='
name|'expand'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4_integrate
dedent|''
name|'def'
name|'p4_integrate'
op|'('
name|'src'
op|','
name|'dest'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'p4_system'
op|'('
op|'['
string|'"integrate"'
op|','
string|'"-Dt"'
op|','
name|'wildcard_encode'
op|'('
name|'src'
op|')'
op|','
name|'wildcard_encode'
op|'('
name|'dest'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4_sync
dedent|''
name|'def'
name|'p4_sync'
op|'('
name|'f'
op|','
op|'*'
name|'options'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'p4_system'
op|'('
op|'['
string|'"sync"'
op|']'
op|'+'
name|'list'
op|'('
name|'options'
op|')'
op|'+'
op|'['
name|'wildcard_encode'
op|'('
name|'f'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4_add
dedent|''
name|'def'
name|'p4_add'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
comment|'# forcibly add file names with wildcards'
nl|'\n'
indent|'    '
name|'if'
name|'wildcard_present'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p4_system'
op|'('
op|'['
string|'"add"'
op|','
string|'"-f"'
op|','
name|'f'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'p4_system'
op|'('
op|'['
string|'"add"'
op|','
name|'f'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4_delete
dedent|''
dedent|''
name|'def'
name|'p4_delete'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'p4_system'
op|'('
op|'['
string|'"delete"'
op|','
name|'wildcard_encode'
op|'('
name|'f'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4_edit
dedent|''
name|'def'
name|'p4_edit'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'p4_system'
op|'('
op|'['
string|'"edit"'
op|','
name|'wildcard_encode'
op|'('
name|'f'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4_revert
dedent|''
name|'def'
name|'p4_revert'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'p4_system'
op|'('
op|'['
string|'"revert"'
op|','
name|'wildcard_encode'
op|'('
name|'f'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4_reopen
dedent|''
name|'def'
name|'p4_reopen'
op|'('
name|'type'
op|','
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'p4_system'
op|'('
op|'['
string|'"reopen"'
op|','
string|'"-t"'
op|','
name|'type'
op|','
name|'wildcard_encode'
op|'('
name|'f'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4_move
dedent|''
name|'def'
name|'p4_move'
op|'('
name|'src'
op|','
name|'dest'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'p4_system'
op|'('
op|'['
string|'"move"'
op|','
string|'"-k"'
op|','
name|'wildcard_encode'
op|'('
name|'src'
op|')'
op|','
name|'wildcard_encode'
op|'('
name|'dest'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Canonicalize the p4 type and return a tuple of the'
nl|'\n'
comment|'# base type, plus any modifiers.  See "p4 help filetypes"'
nl|'\n'
comment|'# for a list and explanation.'
nl|'\n'
comment|'#'
nl|'\n'
DECL|function|split_p4_type
dedent|''
name|'def'
name|'split_p4_type'
op|'('
name|'p4type'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'p4_filetypes_historical'
op|'='
op|'{'
nl|'\n'
string|'"ctempobj"'
op|':'
string|'"binary+Sw"'
op|','
nl|'\n'
string|'"ctext"'
op|':'
string|'"text+C"'
op|','
nl|'\n'
string|'"cxtext"'
op|':'
string|'"text+Cx"'
op|','
nl|'\n'
string|'"ktext"'
op|':'
string|'"text+k"'
op|','
nl|'\n'
string|'"kxtext"'
op|':'
string|'"text+kx"'
op|','
nl|'\n'
string|'"ltext"'
op|':'
string|'"text+F"'
op|','
nl|'\n'
string|'"tempobj"'
op|':'
string|'"binary+FSw"'
op|','
nl|'\n'
string|'"ubinary"'
op|':'
string|'"binary+F"'
op|','
nl|'\n'
string|'"uresource"'
op|':'
string|'"resource+F"'
op|','
nl|'\n'
string|'"uxbinary"'
op|':'
string|'"binary+Fx"'
op|','
nl|'\n'
string|'"xbinary"'
op|':'
string|'"binary+x"'
op|','
nl|'\n'
string|'"xltext"'
op|':'
string|'"text+Fx"'
op|','
nl|'\n'
string|'"xtempobj"'
op|':'
string|'"binary+Swx"'
op|','
nl|'\n'
string|'"xtext"'
op|':'
string|'"text+x"'
op|','
nl|'\n'
string|'"xunicode"'
op|':'
string|'"unicode+x"'
op|','
nl|'\n'
string|'"xutf16"'
op|':'
string|'"utf16+x"'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'p4type'
name|'in'
name|'p4_filetypes_historical'
op|':'
newline|'\n'
indent|'        '
name|'p4type'
op|'='
name|'p4_filetypes_historical'
op|'['
name|'p4type'
op|']'
newline|'\n'
dedent|''
name|'mods'
op|'='
string|'""'
newline|'\n'
name|'s'
op|'='
name|'p4type'
op|'.'
name|'split'
op|'('
string|'"+"'
op|')'
newline|'\n'
name|'base'
op|'='
name|'s'
op|'['
number|'0'
op|']'
newline|'\n'
name|'mods'
op|'='
string|'""'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'s'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'mods'
op|'='
name|'s'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'return'
op|'('
name|'base'
op|','
name|'mods'
op|')'
newline|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# return the raw p4 type of a file (text, text+ko, etc)'
nl|'\n'
comment|'#'
nl|'\n'
DECL|function|p4_type
dedent|''
name|'def'
name|'p4_type'
op|'('
name|'file'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'results'
op|'='
name|'p4CmdList'
op|'('
op|'['
string|'"fstat"'
op|','
string|'"-T"'
op|','
string|'"headType"'
op|','
name|'file'
op|']'
op|')'
newline|'\n'
name|'return'
name|'results'
op|'['
number|'0'
op|']'
op|'['
string|"'headType'"
op|']'
newline|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Given a type base and modifier, return a regexp matching'
nl|'\n'
comment|'# the keywords that can be expanded in the file'
nl|'\n'
comment|'#'
nl|'\n'
DECL|function|p4_keywords_regexp_for_type
dedent|''
name|'def'
name|'p4_keywords_regexp_for_type'
op|'('
name|'base'
op|','
name|'type_mods'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'base'
name|'in'
op|'('
string|'"text"'
op|','
string|'"unicode"'
op|','
string|'"binary"'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwords'
op|'='
name|'None'
newline|'\n'
name|'if'
string|'"ko"'
name|'in'
name|'type_mods'
op|':'
newline|'\n'
indent|'            '
name|'kwords'
op|'='
string|"'Id|Header'"
newline|'\n'
dedent|''
name|'elif'
string|'"k"'
name|'in'
name|'type_mods'
op|':'
newline|'\n'
indent|'            '
name|'kwords'
op|'='
string|"'Id|Header|Author|Date|DateTime|Change|File|Revision'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'pattern'
op|'='
string|'r"""\n            \\$              # Starts with a dollar, followed by...\n            (%s)            # one of the keywords, followed by...\n            (:[^$]+)?       # possibly an old expansion, followed by...\n            \\$              # another dollar\n            """'
op|'%'
name|'kwords'
newline|'\n'
name|'return'
name|'pattern'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Given a file, return a regexp matching the possible'
nl|'\n'
comment|'# RCS keywords that will be expanded, or None for files'
nl|'\n'
comment|'# with kw expansion turned off.'
nl|'\n'
comment|'#'
nl|'\n'
DECL|function|p4_keywords_regexp_for_file
dedent|''
dedent|''
name|'def'
name|'p4_keywords_regexp_for_file'
op|'('
name|'file'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'file'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'type_base'
op|','
name|'type_mods'
op|')'
op|'='
name|'split_p4_type'
op|'('
name|'p4_type'
op|'('
name|'file'
op|')'
op|')'
newline|'\n'
name|'return'
name|'p4_keywords_regexp_for_type'
op|'('
name|'type_base'
op|','
name|'type_mods'
op|')'
newline|'\n'
nl|'\n'
DECL|function|setP4ExecBit
dedent|''
dedent|''
name|'def'
name|'setP4ExecBit'
op|'('
name|'file'
op|','
name|'mode'
op|')'
op|':'
newline|'\n'
comment|'# Reopens an already open file and changes the execute bit to match'
nl|'\n'
comment|'# the execute bit setting in the passed in mode.'
nl|'\n'
nl|'\n'
indent|'    '
name|'p4Type'
op|'='
string|'"+x"'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'isModeExec'
op|'('
name|'mode'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p4Type'
op|'='
name|'getP4OpenedType'
op|'('
name|'file'
op|')'
newline|'\n'
name|'p4Type'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|"'^([cku]?)x(.*)'"
op|','
string|"'\\\\1\\\\2'"
op|','
name|'p4Type'
op|')'
newline|'\n'
name|'p4Type'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|"'(.*?\\+.*?)x(.*?)'"
op|','
string|"'\\\\1\\\\2'"
op|','
name|'p4Type'
op|')'
newline|'\n'
name|'if'
name|'p4Type'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|'"+"'
op|':'
newline|'\n'
indent|'            '
name|'p4Type'
op|'='
name|'p4Type'
op|'['
number|'0'
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'p4_reopen'
op|'('
name|'p4Type'
op|','
name|'file'
op|')'
newline|'\n'
nl|'\n'
DECL|function|getP4OpenedType
dedent|''
name|'def'
name|'getP4OpenedType'
op|'('
name|'file'
op|')'
op|':'
newline|'\n'
comment|'# Returns the perforce file type for the given file.'
nl|'\n'
nl|'\n'
indent|'    '
name|'result'
op|'='
name|'p4_read_pipe'
op|'('
op|'['
string|'"opened"'
op|','
name|'wildcard_encode'
op|'('
name|'file'
op|')'
op|']'
op|')'
newline|'\n'
name|'match'
op|'='
name|'re'
op|'.'
name|'match'
op|'('
string|'".*\\((.+)\\)\\r?$"'
op|','
name|'result'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|'"Could not determine file type for %s (result: \'%s\')"'
op|'%'
op|'('
name|'file'
op|','
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Return the set of all p4 labels'
nl|'\n'
DECL|function|getP4Labels
dedent|''
dedent|''
name|'def'
name|'getP4Labels'
op|'('
name|'depotPaths'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'labels'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'depotPaths'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'depotPaths'
op|'='
op|'['
name|'depotPaths'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'l'
name|'in'
name|'p4CmdList'
op|'('
op|'['
string|'"labels"'
op|']'
op|'+'
op|'['
string|'"%s..."'
op|'%'
name|'p'
name|'for'
name|'p'
name|'in'
name|'depotPaths'
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'label'
op|'='
name|'l'
op|'['
string|"'label'"
op|']'
newline|'\n'
name|'labels'
op|'.'
name|'add'
op|'('
name|'label'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'labels'
newline|'\n'
nl|'\n'
comment|'# Return the set of all git tags'
nl|'\n'
DECL|function|getGitTags
dedent|''
name|'def'
name|'getGitTags'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'gitTags'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'read_pipe_lines'
op|'('
op|'['
string|'"git"'
op|','
string|'"tag"'
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tag'
op|'='
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'gitTags'
op|'.'
name|'add'
op|'('
name|'tag'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'gitTags'
newline|'\n'
nl|'\n'
DECL|function|diffTreePattern
dedent|''
name|'def'
name|'diffTreePattern'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# This is a simple generator for the diff tree regex pattern. This could be'
nl|'\n'
comment|'# a class variable if this and parseDiffTreeEntry were a part of a class.'
nl|'\n'
indent|'    '
name|'pattern'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"':(\\d+) (\\d+) (\\w+) (\\w+) ([A-Z])(\\d+)?\\t(.*?)((\\t(.*))|$)'"
op|')'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'pattern'
newline|'\n'
nl|'\n'
DECL|function|parseDiffTreeEntry
dedent|''
dedent|''
name|'def'
name|'parseDiffTreeEntry'
op|'('
name|'entry'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Parses a single diff tree entry into its component elements.\n\n    See git-diff-tree(1) manpage for details about the format of the diff\n    output. This method returns a dictionary with the following elements:\n\n    src_mode - The mode of the source file\n    dst_mode - The mode of the destination file\n    src_sha1 - The sha1 for the source file\n    dst_sha1 - The sha1 fr the destination file\n    status - The one letter status of the diff (i.e. \'A\', \'M\', \'D\', etc)\n    status_score - The score for the status (applicable for \'C\' and \'R\'\n                   statuses). This is None if there is no score.\n    src - The path for the source file.\n    dst - The path for the destination file. This is only present for\n          copy or renames. If it is not present, this is None.\n\n    If the pattern is not matched, None is returned."""'
newline|'\n'
nl|'\n'
name|'match'
op|'='
name|'diffTreePattern'
op|'('
op|')'
op|'.'
name|'next'
op|'('
op|')'
op|'.'
name|'match'
op|'('
name|'entry'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'src_mode'"
op|':'
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|','
nl|'\n'
string|"'dst_mode'"
op|':'
name|'match'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
op|','
nl|'\n'
string|"'src_sha1'"
op|':'
name|'match'
op|'.'
name|'group'
op|'('
number|'3'
op|')'
op|','
nl|'\n'
string|"'dst_sha1'"
op|':'
name|'match'
op|'.'
name|'group'
op|'('
number|'4'
op|')'
op|','
nl|'\n'
string|"'status'"
op|':'
name|'match'
op|'.'
name|'group'
op|'('
number|'5'
op|')'
op|','
nl|'\n'
string|"'status_score'"
op|':'
name|'match'
op|'.'
name|'group'
op|'('
number|'6'
op|')'
op|','
nl|'\n'
string|"'src'"
op|':'
name|'match'
op|'.'
name|'group'
op|'('
number|'7'
op|')'
op|','
nl|'\n'
string|"'dst'"
op|':'
name|'match'
op|'.'
name|'group'
op|'('
number|'10'
op|')'
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|function|isModeExec
dedent|''
name|'def'
name|'isModeExec'
op|'('
name|'mode'
op|')'
op|':'
newline|'\n'
comment|'# Returns True if the given git mode represents an executable file,'
nl|'\n'
comment|'# otherwise False.'
nl|'\n'
indent|'    '
name|'return'
name|'mode'
op|'['
op|'-'
number|'3'
op|':'
op|']'
op|'=='
string|'"755"'
newline|'\n'
nl|'\n'
DECL|function|isModeExecChanged
dedent|''
name|'def'
name|'isModeExecChanged'
op|'('
name|'src_mode'
op|','
name|'dst_mode'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'isModeExec'
op|'('
name|'src_mode'
op|')'
op|'!='
name|'isModeExec'
op|'('
name|'dst_mode'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4CmdList
dedent|''
name|'def'
name|'p4CmdList'
op|'('
name|'cmd'
op|','
name|'stdin'
op|'='
name|'None'
op|','
name|'stdin_mode'
op|'='
string|"'w+b'"
op|','
name|'cb'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'if'
name|'isinstance'
op|'('
name|'cmd'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cmd'
op|'='
string|'"-G "'
op|'+'
name|'cmd'
newline|'\n'
name|'expand'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'cmd'
op|'='
op|'['
string|'"-G"'
op|']'
op|'+'
name|'cmd'
newline|'\n'
name|'expand'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'cmd'
op|'='
name|'p4_build_cmd'
op|'('
name|'cmd'
op|')'
newline|'\n'
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'        '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"Opening pipe: %s\\n"'
op|'%'
name|'str'
op|'('
name|'cmd'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Use a temporary file to avoid deadlocks without'
nl|'\n'
comment|'# subprocess.communicate(), which would put another copy'
nl|'\n'
comment|'# of stdout into memory.'
nl|'\n'
dedent|''
name|'stdin_file'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'stdin'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'stdin_file'
op|'='
name|'tempfile'
op|'.'
name|'TemporaryFile'
op|'('
name|'prefix'
op|'='
string|"'p4-stdin'"
op|','
name|'mode'
op|'='
name|'stdin_mode'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'stdin'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'stdin_file'
op|'.'
name|'write'
op|'('
name|'stdin'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'i'
name|'in'
name|'stdin'
op|':'
newline|'\n'
indent|'                '
name|'stdin_file'
op|'.'
name|'write'
op|'('
name|'i'
op|'+'
string|"'\\n'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'stdin_file'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'stdin_file'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'p4'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'cmd'
op|','
nl|'\n'
name|'shell'
op|'='
name|'expand'
op|','
nl|'\n'
name|'stdin'
op|'='
name|'stdin_file'
op|','
nl|'\n'
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'['
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'entry'
op|'='
name|'marshal'
op|'.'
name|'load'
op|'('
name|'p4'
op|'.'
name|'stdout'
op|')'
newline|'\n'
name|'if'
name|'cb'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'cb'
op|'('
name|'entry'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'.'
name|'append'
op|'('
name|'entry'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'EOFError'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
name|'exitCode'
op|'='
name|'p4'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'if'
name|'exitCode'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'entry'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'entry'
op|'['
string|'"p4ExitCode"'
op|']'
op|'='
name|'exitCode'
newline|'\n'
name|'result'
op|'.'
name|'append'
op|'('
name|'entry'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|function|p4Cmd
dedent|''
name|'def'
name|'p4Cmd'
op|'('
name|'cmd'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'list'
op|'='
name|'p4CmdList'
op|'('
name|'cmd'
op|')'
newline|'\n'
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'entry'
name|'in'
name|'list'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'.'
name|'update'
op|'('
name|'entry'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
op|';'
newline|'\n'
nl|'\n'
DECL|function|p4Where
dedent|''
name|'def'
name|'p4Where'
op|'('
name|'depotPath'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'depotPath'
op|'.'
name|'endswith'
op|'('
string|'"/"'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'depotPath'
op|'+='
string|'"/"'
newline|'\n'
dedent|''
name|'depotPath'
op|'='
name|'depotPath'
op|'+'
string|'"..."'
newline|'\n'
name|'outputList'
op|'='
name|'p4CmdList'
op|'('
op|'['
string|'"where"'
op|','
name|'depotPath'
op|']'
op|')'
newline|'\n'
name|'output'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'entry'
name|'in'
name|'outputList'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|'"depotFile"'
name|'in'
name|'entry'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'entry'
op|'['
string|'"depotFile"'
op|']'
op|'=='
name|'depotPath'
op|':'
newline|'\n'
indent|'                '
name|'output'
op|'='
name|'entry'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'elif'
string|'"data"'
name|'in'
name|'entry'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
name|'entry'
op|'.'
name|'get'
op|'('
string|'"data"'
op|')'
newline|'\n'
name|'space'
op|'='
name|'data'
op|'.'
name|'find'
op|'('
string|'" "'
op|')'
newline|'\n'
name|'if'
name|'data'
op|'['
op|':'
name|'space'
op|']'
op|'=='
name|'depotPath'
op|':'
newline|'\n'
indent|'                '
name|'output'
op|'='
name|'entry'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'output'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'""'
newline|'\n'
dedent|''
name|'if'
name|'output'
op|'['
string|'"code"'
op|']'
op|'=='
string|'"error"'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'""'
newline|'\n'
dedent|''
name|'clientPath'
op|'='
string|'""'
newline|'\n'
name|'if'
string|'"path"'
name|'in'
name|'output'
op|':'
newline|'\n'
indent|'        '
name|'clientPath'
op|'='
name|'output'
op|'.'
name|'get'
op|'('
string|'"path"'
op|')'
newline|'\n'
dedent|''
name|'elif'
string|'"data"'
name|'in'
name|'output'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'output'
op|'.'
name|'get'
op|'('
string|'"data"'
op|')'
newline|'\n'
name|'lastSpace'
op|'='
name|'data'
op|'.'
name|'rfind'
op|'('
string|'" "'
op|')'
newline|'\n'
name|'clientPath'
op|'='
name|'data'
op|'['
name|'lastSpace'
op|'+'
number|'1'
op|':'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'clientPath'
op|'.'
name|'endswith'
op|'('
string|'"..."'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'clientPath'
op|'='
name|'clientPath'
op|'['
op|':'
op|'-'
number|'3'
op|']'
newline|'\n'
dedent|''
name|'return'
name|'clientPath'
newline|'\n'
nl|'\n'
DECL|function|currentGitBranch
dedent|''
name|'def'
name|'currentGitBranch'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'read_pipe'
op|'('
string|'"git name-rev HEAD"'
op|')'
op|'.'
name|'split'
op|'('
string|'" "'
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|isValidGitDir
dedent|''
name|'def'
name|'isValidGitDir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'path'
op|'+'
string|'"/HEAD"'
op|')'
nl|'\n'
name|'and'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'path'
op|'+'
string|'"/refs"'
op|')'
name|'and'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'path'
op|'+'
string|'"/objects"'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
op|';'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|function|parseRevision
dedent|''
name|'def'
name|'parseRevision'
op|'('
name|'ref'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'read_pipe'
op|'('
string|'"git rev-parse %s"'
op|'%'
name|'ref'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|branchExists
dedent|''
name|'def'
name|'branchExists'
op|'('
name|'ref'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rev'
op|'='
name|'read_pipe'
op|'('
op|'['
string|'"git"'
op|','
string|'"rev-parse"'
op|','
string|'"-q"'
op|','
string|'"--verify"'
op|','
name|'ref'
op|']'
op|','
nl|'\n'
name|'ignore_error'
op|'='
name|'True'
op|')'
newline|'\n'
name|'return'
name|'len'
op|'('
name|'rev'
op|')'
op|'>'
number|'0'
newline|'\n'
nl|'\n'
DECL|function|extractLogMessageFromGitCommit
dedent|''
name|'def'
name|'extractLogMessageFromGitCommit'
op|'('
name|'commit'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'logMessage'
op|'='
string|'""'
newline|'\n'
nl|'\n'
comment|'## fixme: title is first line of commit, not 1st paragraph.'
nl|'\n'
name|'foundTitle'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'log'
name|'in'
name|'read_pipe_lines'
op|'('
string|'"git cat-file commit %s"'
op|'%'
name|'commit'
op|')'
op|':'
newline|'\n'
indent|'       '
name|'if'
name|'not'
name|'foundTitle'
op|':'
newline|'\n'
indent|'           '
name|'if'
name|'len'
op|'('
name|'log'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'               '
name|'foundTitle'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'logMessage'
op|'+='
name|'log'
newline|'\n'
dedent|''
name|'return'
name|'logMessage'
newline|'\n'
nl|'\n'
DECL|function|extractSettingsGitLog
dedent|''
name|'def'
name|'extractSettingsGitLog'
op|'('
name|'log'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'values'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'log'
op|'.'
name|'split'
op|'('
string|'"\\n"'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'line'
op|'='
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'m'
op|'='
name|'re'
op|'.'
name|'search'
op|'('
string|'r"^ *\\[git-p4: (.*)\\]$"'
op|','
name|'line'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'m'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'assignments'
op|'='
name|'m'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
newline|'\n'
name|'for'
name|'a'
name|'in'
name|'assignments'
op|':'
newline|'\n'
indent|'            '
name|'vals'
op|'='
name|'a'
op|'.'
name|'split'
op|'('
string|"'='"
op|')'
newline|'\n'
name|'key'
op|'='
name|'vals'
op|'['
number|'0'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'val'
op|'='
op|'('
string|"'='"
op|'.'
name|'join'
op|'('
name|'vals'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'val'
op|'.'
name|'endswith'
op|'('
string|'\'\\"\''
op|')'
name|'and'
name|'val'
op|'.'
name|'startswith'
op|'('
string|'\'"\''
op|')'
op|':'
newline|'\n'
indent|'                '
name|'val'
op|'='
name|'val'
op|'['
number|'1'
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'values'
op|'['
name|'key'
op|']'
op|'='
name|'val'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'paths'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|'"depot-paths"'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'paths'
op|':'
newline|'\n'
indent|'        '
name|'paths'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|'"depot-path"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'paths'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'['
string|"'depot-paths'"
op|']'
op|'='
name|'paths'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'values'
newline|'\n'
nl|'\n'
DECL|function|gitBranchExists
dedent|''
name|'def'
name|'gitBranchExists'
op|'('
name|'branch'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'proc'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
op|'['
string|'"git"'
op|','
string|'"rev-parse"'
op|','
name|'branch'
op|']'
op|','
nl|'\n'
name|'stderr'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|')'
op|';'
newline|'\n'
name|'return'
name|'proc'
op|'.'
name|'wait'
op|'('
op|')'
op|'=='
number|'0'
op|';'
newline|'\n'
nl|'\n'
DECL|variable|_gitConfig
dedent|''
name|'_gitConfig'
op|'='
op|'{'
op|'}'
newline|'\n'
DECL|function|gitConfig
name|'def'
name|'gitConfig'
op|'('
name|'key'
op|','
name|'args'
op|'='
name|'None'
op|')'
op|':'
comment|'# set args to "--bool", for instance'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'_gitConfig'
op|'.'
name|'has_key'
op|'('
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'argsFilter'
op|'='
string|'""'
newline|'\n'
name|'if'
name|'args'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'argsFilter'
op|'='
string|'"%s "'
op|'%'
name|'args'
newline|'\n'
dedent|''
name|'cmd'
op|'='
string|'"git config %s%s"'
op|'%'
op|'('
name|'argsFilter'
op|','
name|'key'
op|')'
newline|'\n'
name|'_gitConfig'
op|'['
name|'key'
op|']'
op|'='
name|'read_pipe'
op|'('
name|'cmd'
op|','
name|'ignore_error'
op|'='
name|'True'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_gitConfig'
op|'['
name|'key'
op|']'
newline|'\n'
nl|'\n'
DECL|function|gitConfigList
dedent|''
name|'def'
name|'gitConfigList'
op|'('
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'_gitConfig'
op|'.'
name|'has_key'
op|'('
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_gitConfig'
op|'['
name|'key'
op|']'
op|'='
name|'read_pipe'
op|'('
string|'"git config --get-all %s"'
op|'%'
name|'key'
op|','
name|'ignore_error'
op|'='
name|'True'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'split'
op|'('
name|'os'
op|'.'
name|'linesep'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_gitConfig'
op|'['
name|'key'
op|']'
newline|'\n'
nl|'\n'
DECL|function|p4BranchesInGit
dedent|''
name|'def'
name|'p4BranchesInGit'
op|'('
name|'branchesAreInRemotes'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'branches'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'cmdline'
op|'='
string|'"git rev-parse --symbolic "'
newline|'\n'
name|'if'
name|'branchesAreInRemotes'
op|':'
newline|'\n'
indent|'        '
name|'cmdline'
op|'+='
string|'" --remotes"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'cmdline'
op|'+='
string|'" --branches"'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'line'
name|'in'
name|'read_pipe_lines'
op|'('
name|'cmdline'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'line'
op|'='
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'## only import to p4/'
nl|'\n'
name|'if'
name|'not'
name|'line'
op|'.'
name|'startswith'
op|'('
string|"'p4/'"
op|')'
name|'or'
name|'line'
op|'=='
string|'"p4/HEAD"'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'branch'
op|'='
name|'line'
newline|'\n'
nl|'\n'
comment|'# strip off p4'
nl|'\n'
name|'branch'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|'"^p4/"'
op|','
string|'""'
op|','
name|'line'
op|')'
newline|'\n'
nl|'\n'
name|'branches'
op|'['
name|'branch'
op|']'
op|'='
name|'parseRevision'
op|'('
name|'line'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'branches'
newline|'\n'
nl|'\n'
DECL|function|findUpstreamBranchPoint
dedent|''
name|'def'
name|'findUpstreamBranchPoint'
op|'('
name|'head'
op|'='
string|'"HEAD"'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'branches'
op|'='
name|'p4BranchesInGit'
op|'('
op|')'
newline|'\n'
comment|'# map from depot-path to branch name'
nl|'\n'
name|'branchByDepotPath'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'branch'
name|'in'
name|'branches'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tip'
op|'='
name|'branches'
op|'['
name|'branch'
op|']'
newline|'\n'
name|'log'
op|'='
name|'extractLogMessageFromGitCommit'
op|'('
name|'tip'
op|')'
newline|'\n'
name|'settings'
op|'='
name|'extractSettingsGitLog'
op|'('
name|'log'
op|')'
newline|'\n'
name|'if'
name|'settings'
op|'.'
name|'has_key'
op|'('
string|'"depot-paths"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'paths'
op|'='
string|'","'
op|'.'
name|'join'
op|'('
name|'settings'
op|'['
string|'"depot-paths"'
op|']'
op|')'
newline|'\n'
name|'branchByDepotPath'
op|'['
name|'paths'
op|']'
op|'='
string|'"remotes/p4/"'
op|'+'
name|'branch'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'settings'
op|'='
name|'None'
newline|'\n'
name|'parent'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'parent'
op|'<'
number|'65535'
op|':'
newline|'\n'
indent|'        '
name|'commit'
op|'='
name|'head'
op|'+'
string|'"~%s"'
op|'%'
name|'parent'
newline|'\n'
name|'log'
op|'='
name|'extractLogMessageFromGitCommit'
op|'('
name|'commit'
op|')'
newline|'\n'
name|'settings'
op|'='
name|'extractSettingsGitLog'
op|'('
name|'log'
op|')'
newline|'\n'
name|'if'
name|'settings'
op|'.'
name|'has_key'
op|'('
string|'"depot-paths"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'paths'
op|'='
string|'","'
op|'.'
name|'join'
op|'('
name|'settings'
op|'['
string|'"depot-paths"'
op|']'
op|')'
newline|'\n'
name|'if'
name|'branchByDepotPath'
op|'.'
name|'has_key'
op|'('
name|'paths'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
name|'branchByDepotPath'
op|'['
name|'paths'
op|']'
op|','
name|'settings'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'parent'
op|'='
name|'parent'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'['
string|'""'
op|','
name|'settings'
op|']'
newline|'\n'
nl|'\n'
DECL|function|createOrUpdateBranchesFromOrigin
dedent|''
name|'def'
name|'createOrUpdateBranchesFromOrigin'
op|'('
name|'localRefPrefix'
op|'='
string|'"refs/remotes/p4/"'
op|','
name|'silent'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'silent'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
string|'"Creating/updating branch(es) in %s based on origin branch(es)"'
nl|'\n'
op|'%'
name|'localRefPrefix'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'originPrefix'
op|'='
string|'"origin/p4/"'
newline|'\n'
nl|'\n'
name|'for'
name|'line'
name|'in'
name|'read_pipe_lines'
op|'('
string|'"git rev-parse --symbolic --remotes"'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'line'
op|'='
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
op|'('
name|'not'
name|'line'
op|'.'
name|'startswith'
op|'('
name|'originPrefix'
op|')'
op|')'
name|'or'
name|'line'
op|'.'
name|'endswith'
op|'('
string|'"HEAD"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'headName'
op|'='
name|'line'
op|'['
name|'len'
op|'('
name|'originPrefix'
op|')'
op|':'
op|']'
newline|'\n'
name|'remoteHead'
op|'='
name|'localRefPrefix'
op|'+'
name|'headName'
newline|'\n'
name|'originHead'
op|'='
name|'line'
newline|'\n'
nl|'\n'
name|'original'
op|'='
name|'extractSettingsGitLog'
op|'('
name|'extractLogMessageFromGitCommit'
op|'('
name|'originHead'
op|')'
op|')'
newline|'\n'
name|'if'
op|'('
name|'not'
name|'original'
op|'.'
name|'has_key'
op|'('
string|"'depot-paths'"
op|')'
nl|'\n'
name|'or'
name|'not'
name|'original'
op|'.'
name|'has_key'
op|'('
string|"'change'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'update'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'not'
name|'gitBranchExists'
op|'('
name|'remoteHead'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"creating %s"'
op|'%'
name|'remoteHead'
newline|'\n'
dedent|''
name|'update'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'settings'
op|'='
name|'extractSettingsGitLog'
op|'('
name|'extractLogMessageFromGitCommit'
op|'('
name|'remoteHead'
op|')'
op|')'
newline|'\n'
name|'if'
name|'settings'
op|'.'
name|'has_key'
op|'('
string|"'change'"
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'settings'
op|'['
string|"'depot-paths'"
op|']'
op|'=='
name|'original'
op|'['
string|"'depot-paths'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'originP4Change'
op|'='
name|'int'
op|'('
name|'original'
op|'['
string|"'change'"
op|']'
op|')'
newline|'\n'
name|'p4Change'
op|'='
name|'int'
op|'('
name|'settings'
op|'['
string|"'change'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'originP4Change'
op|'>'
name|'p4Change'
op|':'
newline|'\n'
indent|'                        '
name|'print'
op|'('
string|'"%s (%s) is newer than %s (%s). "'
nl|'\n'
string|'"Updating p4 branch from origin."'
nl|'\n'
op|'%'
op|'('
name|'originHead'
op|','
name|'originP4Change'
op|','
nl|'\n'
name|'remoteHead'
op|','
name|'p4Change'
op|')'
op|')'
newline|'\n'
name|'update'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'print'
op|'('
string|'"Ignoring: %s was imported from %s while "'
nl|'\n'
string|'"%s was imported from %s"'
nl|'\n'
op|'%'
op|'('
name|'originHead'
op|','
string|"','"
op|'.'
name|'join'
op|'('
name|'original'
op|'['
string|"'depot-paths'"
op|']'
op|')'
op|','
nl|'\n'
name|'remoteHead'
op|','
string|"','"
op|'.'
name|'join'
op|'('
name|'settings'
op|'['
string|"'depot-paths'"
op|']'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'update'
op|':'
newline|'\n'
indent|'            '
name|'system'
op|'('
string|'"git update-ref %s %s"'
op|'%'
op|'('
name|'remoteHead'
op|','
name|'originHead'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|originP4BranchesExist
dedent|''
dedent|''
dedent|''
name|'def'
name|'originP4BranchesExist'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'gitBranchExists'
op|'('
string|'"origin"'
op|')'
name|'or'
name|'gitBranchExists'
op|'('
string|'"origin/p4"'
op|')'
name|'or'
name|'gitBranchExists'
op|'('
string|'"origin/p4/master"'
op|')'
newline|'\n'
nl|'\n'
DECL|function|p4ChangesForPaths
dedent|''
name|'def'
name|'p4ChangesForPaths'
op|'('
name|'depotPaths'
op|','
name|'changeRange'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'assert'
name|'depotPaths'
newline|'\n'
name|'cmd'
op|'='
op|'['
string|"'changes'"
op|']'
newline|'\n'
name|'for'
name|'p'
name|'in'
name|'depotPaths'
op|':'
newline|'\n'
indent|'        '
name|'cmd'
op|'+='
op|'['
string|'"%s...%s"'
op|'%'
op|'('
name|'p'
op|','
name|'changeRange'
op|')'
op|']'
newline|'\n'
dedent|''
name|'output'
op|'='
name|'p4_read_pipe_lines'
op|'('
name|'cmd'
op|')'
newline|'\n'
nl|'\n'
name|'changes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'output'
op|':'
newline|'\n'
indent|'        '
name|'changeNum'
op|'='
name|'int'
op|'('
name|'line'
op|'.'
name|'split'
op|'('
string|'" "'
op|')'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'changes'
op|'['
name|'changeNum'
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'changelist'
op|'='
name|'changes'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'changelist'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'return'
name|'changelist'
newline|'\n'
nl|'\n'
DECL|function|p4PathStartsWith
dedent|''
name|'def'
name|'p4PathStartsWith'
op|'('
name|'path'
op|','
name|'prefix'
op|')'
op|':'
newline|'\n'
comment|'# This method tries to remedy a potential mixed-case issue:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# If UserA adds  //depot/DirA/file1'
nl|'\n'
comment|'# and UserB adds //depot/dira/file2'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# we may or may not have a problem. If you have core.ignorecase=true,'
nl|'\n'
comment|'# we treat DirA and dira as the same directory'
nl|'\n'
indent|'    '
name|'ignorecase'
op|'='
name|'gitConfig'
op|'('
string|'"core.ignorecase"'
op|','
string|'"--bool"'
op|')'
op|'=='
string|'"true"'
newline|'\n'
name|'if'
name|'ignorecase'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'path'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
name|'prefix'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'path'
op|'.'
name|'startswith'
op|'('
name|'prefix'
op|')'
newline|'\n'
nl|'\n'
DECL|function|getClientSpec
dedent|''
name|'def'
name|'getClientSpec'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Look at the p4 client spec, create a View() object that contains\n       all the mappings, and return it."""'
newline|'\n'
nl|'\n'
name|'specList'
op|'='
name|'p4CmdList'
op|'('
string|'"client -o"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'specList'
op|')'
op|'!='
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|'\'Output from "client -o" is %d lines, expecting 1\''
op|'%'
nl|'\n'
name|'len'
op|'('
name|'specList'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# dictionary of all client parameters'
nl|'\n'
dedent|''
name|'entry'
op|'='
name|'specList'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
comment|'# just the keys that start with "View"'
nl|'\n'
name|'view_keys'
op|'='
op|'['
name|'k'
name|'for'
name|'k'
name|'in'
name|'entry'
op|'.'
name|'keys'
op|'('
op|')'
name|'if'
name|'k'
op|'.'
name|'startswith'
op|'('
string|'"View"'
op|')'
op|']'
newline|'\n'
nl|'\n'
comment|'# hold this new View'
nl|'\n'
name|'view'
op|'='
name|'View'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# append the lines, in order, to the view'
nl|'\n'
name|'for'
name|'view_num'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'view_keys'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'k'
op|'='
string|'"View%d"'
op|'%'
name|'view_num'
newline|'\n'
name|'if'
name|'k'
name|'not'
name|'in'
name|'view_keys'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"Expected view key %s missing"'
op|'%'
name|'k'
op|')'
newline|'\n'
dedent|''
name|'view'
op|'.'
name|'append'
op|'('
name|'entry'
op|'['
name|'k'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'view'
newline|'\n'
nl|'\n'
DECL|function|getClientRoot
dedent|''
name|'def'
name|'getClientRoot'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Grab the client directory."""'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'p4CmdList'
op|'('
string|'"client -o"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'output'
op|')'
op|'!='
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|'\'Output from "client -o" is %d lines, expecting 1\''
op|'%'
name|'len'
op|'('
name|'output'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'entry'
op|'='
name|'output'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
string|'"Root"'
name|'not'
name|'in'
name|'entry'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|'\'Client has no "Root"\''
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'entry'
op|'['
string|'"Root"'
op|']'
newline|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# P4 wildcards are not allowed in filenames.  P4 complains'
nl|'\n'
comment|'# if you simply add them, but you can force it with "-f", in'
nl|'\n'
comment|'# which case it translates them into %xx encoding internally.'
nl|'\n'
comment|'#'
nl|'\n'
DECL|function|wildcard_decode
dedent|''
name|'def'
name|'wildcard_decode'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
comment|'# Search for and fix just these four characters.  Do % last so'
nl|'\n'
comment|'# that fixing it does not inadvertently create new %-escapes.'
nl|'\n'
comment|'# Cannot have * in a filename in windows; untested as to'
nl|'\n'
comment|'# what p4 would do in such a case.'
nl|'\n'
indent|'    '
name|'if'
name|'not'
name|'platform'
op|'.'
name|'system'
op|'('
op|')'
op|'=='
string|'"Windows"'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
name|'path'
op|'.'
name|'replace'
op|'('
string|'"%2A"'
op|','
string|'"*"'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'path'
op|'.'
name|'replace'
op|'('
string|'"%23"'
op|','
string|'"#"'
op|')'
op|'.'
name|'replace'
op|'('
string|'"%40"'
op|','
string|'"@"'
op|')'
op|'.'
name|'replace'
op|'('
string|'"%25"'
op|','
string|'"%"'
op|')'
newline|'\n'
name|'return'
name|'path'
newline|'\n'
nl|'\n'
DECL|function|wildcard_encode
dedent|''
name|'def'
name|'wildcard_encode'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
comment|'# do % first to avoid double-encoding the %s introduced here'
nl|'\n'
indent|'    '
name|'path'
op|'='
name|'path'
op|'.'
name|'replace'
op|'('
string|'"%"'
op|','
string|'"%25"'
op|')'
op|'.'
name|'replace'
op|'('
string|'"*"'
op|','
string|'"%2A"'
op|')'
op|'.'
name|'replace'
op|'('
string|'"#"'
op|','
string|'"%23"'
op|')'
op|'.'
name|'replace'
op|'('
string|'"@"'
op|','
string|'"%40"'
op|')'
newline|'\n'
name|'return'
name|'path'
newline|'\n'
nl|'\n'
DECL|function|wildcard_present
dedent|''
name|'def'
name|'wildcard_present'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'path'
op|'.'
name|'translate'
op|'('
name|'None'
op|','
string|'"*#@%"'
op|')'
op|'!='
name|'path'
newline|'\n'
nl|'\n'
DECL|class|Command
dedent|''
name|'class'
name|'Command'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'usage'
op|'='
string|'"usage: %prog [options]"'
newline|'\n'
name|'self'
op|'.'
name|'needsGit'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'verbose'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|P4UserMap
dedent|''
dedent|''
name|'class'
name|'P4UserMap'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'userMapFromPerforceServer'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'myP4UserId'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|p4UserId
dedent|''
name|'def'
name|'p4UserId'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'myP4UserId'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'myP4UserId'
newline|'\n'
nl|'\n'
dedent|''
name|'results'
op|'='
name|'p4CmdList'
op|'('
string|'"user -o"'
op|')'
newline|'\n'
name|'for'
name|'r'
name|'in'
name|'results'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'r'
op|'.'
name|'has_key'
op|'('
string|"'User'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'myP4UserId'
op|'='
name|'r'
op|'['
string|"'User'"
op|']'
newline|'\n'
name|'return'
name|'r'
op|'['
string|"'User'"
op|']'
newline|'\n'
dedent|''
dedent|''
name|'die'
op|'('
string|'"Could not find your p4 user id"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|p4UserIsMe
dedent|''
name|'def'
name|'p4UserIsMe'
op|'('
name|'self'
op|','
name|'p4User'
op|')'
op|':'
newline|'\n'
comment|'# return True if the given p4 user is actually me'
nl|'\n'
indent|'        '
name|'me'
op|'='
name|'self'
op|'.'
name|'p4UserId'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'p4User'
name|'or'
name|'p4User'
op|'!='
name|'me'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|getUserCacheFilename
dedent|''
dedent|''
name|'def'
name|'getUserCacheFilename'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'home'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|'"HOME"'
op|','
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|'"USERPROFILE"'
op|')'
op|')'
newline|'\n'
name|'return'
name|'home'
op|'+'
string|'"/.gitp4-usercache.txt"'
newline|'\n'
nl|'\n'
DECL|member|getUserMapFromPerforceServer
dedent|''
name|'def'
name|'getUserMapFromPerforceServer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'userMapFromPerforceServer'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'users'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'emails'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'output'
name|'in'
name|'p4CmdList'
op|'('
string|'"users"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'output'
op|'.'
name|'has_key'
op|'('
string|'"User"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'users'
op|'['
name|'output'
op|'['
string|'"User"'
op|']'
op|']'
op|'='
name|'output'
op|'['
string|'"FullName"'
op|']'
op|'+'
string|'" <"'
op|'+'
name|'output'
op|'['
string|'"Email"'
op|']'
op|'+'
string|'">"'
newline|'\n'
name|'self'
op|'.'
name|'emails'
op|'['
name|'output'
op|'['
string|'"Email"'
op|']'
op|']'
op|'='
name|'output'
op|'['
string|'"User"'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'s'
op|'='
string|"''"
newline|'\n'
name|'for'
op|'('
name|'key'
op|','
name|'val'
op|')'
name|'in'
name|'self'
op|'.'
name|'users'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'s'
op|'+='
string|'"%s\\t%s\\n"'
op|'%'
op|'('
name|'key'
op|'.'
name|'expandtabs'
op|'('
number|'1'
op|')'
op|','
name|'val'
op|'.'
name|'expandtabs'
op|'('
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'open'
op|'('
name|'self'
op|'.'
name|'getUserCacheFilename'
op|'('
op|')'
op|','
string|'"wb"'
op|')'
op|'.'
name|'write'
op|'('
name|'s'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'userMapFromPerforceServer'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|loadUserMapFromCache
dedent|''
name|'def'
name|'loadUserMapFromCache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'users'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'userMapFromPerforceServer'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'cache'
op|'='
name|'open'
op|'('
name|'self'
op|'.'
name|'getUserCacheFilename'
op|'('
op|')'
op|','
string|'"rb"'
op|')'
newline|'\n'
name|'lines'
op|'='
name|'cache'
op|'.'
name|'readlines'
op|'('
op|')'
newline|'\n'
name|'cache'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'lines'
op|':'
newline|'\n'
indent|'                '
name|'entry'
op|'='
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'split'
op|'('
string|'"\\t"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'users'
op|'['
name|'entry'
op|'['
number|'0'
op|']'
op|']'
op|'='
name|'entry'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'getUserMapFromPerforceServer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|P4Debug
dedent|''
dedent|''
dedent|''
name|'class'
name|'P4Debug'
op|'('
name|'Command'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Command'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'options'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
string|'"A tool to debug the output of p4 -G."'
newline|'\n'
name|'self'
op|'.'
name|'needsGit'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'j'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'output'
name|'in'
name|'p4CmdList'
op|'('
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Element: %d'"
op|'%'
name|'j'
newline|'\n'
name|'j'
op|'+='
number|'1'
newline|'\n'
name|'print'
name|'output'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|class|P4RollBack
dedent|''
dedent|''
name|'class'
name|'P4RollBack'
op|'('
name|'Command'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Command'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'options'
op|'='
op|'['
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--local"'
op|','
name|'dest'
op|'='
string|'"rollbackLocalBranches"'
op|','
name|'action'
op|'='
string|'"store_true"'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
string|'"A tool to debug the multi-branch import. Don\'t use :)"'
newline|'\n'
name|'self'
op|'.'
name|'rollbackLocalBranches'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'!='
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'maxChange'
op|'='
name|'int'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|'"p4ExitCode"'
name|'in'
name|'p4Cmd'
op|'('
string|'"changes -m 1"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"Problems executing p4"'
op|')'
op|';'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'rollbackLocalBranches'
op|':'
newline|'\n'
indent|'            '
name|'refPrefix'
op|'='
string|'"refs/heads/"'
newline|'\n'
name|'lines'
op|'='
name|'read_pipe_lines'
op|'('
string|'"git rev-parse --symbolic --branches"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'refPrefix'
op|'='
string|'"refs/remotes/"'
newline|'\n'
name|'lines'
op|'='
name|'read_pipe_lines'
op|'('
string|'"git rev-parse --symbolic --remotes"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'line'
name|'in'
name|'lines'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'rollbackLocalBranches'
name|'or'
op|'('
name|'line'
op|'.'
name|'startswith'
op|'('
string|'"p4/"'
op|')'
name|'and'
name|'line'
op|'!='
string|'"p4/HEAD\\n"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'ref'
op|'='
name|'refPrefix'
op|'+'
name|'line'
newline|'\n'
name|'log'
op|'='
name|'extractLogMessageFromGitCommit'
op|'('
name|'ref'
op|')'
newline|'\n'
name|'settings'
op|'='
name|'extractSettingsGitLog'
op|'('
name|'log'
op|')'
newline|'\n'
nl|'\n'
name|'depotPaths'
op|'='
name|'settings'
op|'['
string|"'depot-paths'"
op|']'
newline|'\n'
name|'change'
op|'='
name|'settings'
op|'['
string|"'change'"
op|']'
newline|'\n'
nl|'\n'
name|'changed'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'p4Cmd'
op|'('
string|'"changes -m 1 "'
op|'+'
string|"' '"
op|'.'
name|'join'
op|'('
op|'['
string|"'%s...@%s'"
op|'%'
op|'('
name|'p'
op|','
name|'maxChange'
op|')'
nl|'\n'
name|'for'
name|'p'
name|'in'
name|'depotPaths'
op|']'
op|')'
op|')'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"Branch %s did not exist at change %s, deleting."'
op|'%'
op|'('
name|'ref'
op|','
name|'maxChange'
op|')'
newline|'\n'
name|'system'
op|'('
string|'"git update-ref -d %s `git rev-parse %s`"'
op|'%'
op|'('
name|'ref'
op|','
name|'ref'
op|')'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'while'
name|'change'
name|'and'
name|'int'
op|'('
name|'change'
op|')'
op|'>'
name|'maxChange'
op|':'
newline|'\n'
indent|'                    '
name|'changed'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                        '
name|'print'
string|'"%s is at %s ; rewinding towards %s"'
op|'%'
op|'('
name|'ref'
op|','
name|'change'
op|','
name|'maxChange'
op|')'
newline|'\n'
dedent|''
name|'system'
op|'('
string|'"git update-ref %s \\"%s^\\""'
op|'%'
op|'('
name|'ref'
op|','
name|'ref'
op|')'
op|')'
newline|'\n'
name|'log'
op|'='
name|'extractLogMessageFromGitCommit'
op|'('
name|'ref'
op|')'
newline|'\n'
name|'settings'
op|'='
name|'extractSettingsGitLog'
op|'('
name|'log'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
name|'depotPaths'
op|'='
name|'settings'
op|'['
string|"'depot-paths'"
op|']'
newline|'\n'
name|'change'
op|'='
name|'settings'
op|'['
string|"'change'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'changed'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"%s rewound to %s"'
op|'%'
op|'('
name|'ref'
op|','
name|'change'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|class|P4Submit
dedent|''
dedent|''
name|'class'
name|'P4Submit'
op|'('
name|'Command'
op|','
name|'P4UserMap'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Command'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'P4UserMap'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'options'
op|'='
op|'['
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--origin"'
op|','
name|'dest'
op|'='
string|'"origin"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"-M"'
op|','
name|'dest'
op|'='
string|'"detectRenames"'
op|','
name|'action'
op|'='
string|'"store_true"'
op|')'
op|','
nl|'\n'
comment|'# preserve the user, requires relevant p4 permissions'
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--preserve-user"'
op|','
name|'dest'
op|'='
string|'"preserveUser"'
op|','
name|'action'
op|'='
string|'"store_true"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--export-labels"'
op|','
name|'dest'
op|'='
string|'"exportLabels"'
op|','
name|'action'
op|'='
string|'"store_true"'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
string|'"Submit changes from git to the perforce depot."'
newline|'\n'
name|'self'
op|'.'
name|'usage'
op|'+='
string|'" [name of git branch to submit into perforce depot]"'
newline|'\n'
name|'self'
op|'.'
name|'origin'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'detectRenames'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'preserveUser'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.preserveUser"'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|'"true"'
newline|'\n'
name|'self'
op|'.'
name|'isWindows'
op|'='
op|'('
name|'platform'
op|'.'
name|'system'
op|'('
op|')'
op|'=='
string|'"Windows"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'exportLabels'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'p4HasMoveCommand'
op|'='
name|'p4_has_command'
op|'('
string|'"move"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check
dedent|''
name|'def'
name|'check'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'p4CmdList'
op|'('
string|'"opened ..."'
op|')'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"You have files opened with perforce! Close them before starting the sync."'
op|')'
newline|'\n'
nl|'\n'
DECL|member|separate_jobs_from_description
dedent|''
dedent|''
name|'def'
name|'separate_jobs_from_description'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Extract and return a possible Jobs field in the commit\n           message.  It goes into a separate section in the p4 change\n           specification.\n\n           A jobs line starts with "Jobs:" and looks like a new field\n           in a form.  Values are white-space separated on the same\n           line or on following lines that start with a tab.\n\n           This does not parse and extract the full git commit message\n           like a p4 form.  It just sees the Jobs: line as a marker\n           to pass everything from then on directly into the p4 form,\n           but outside the description section.\n\n           Return a tuple (stripped log message, jobs string)."""'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'re'
op|'.'
name|'search'
op|'('
string|"r'^Jobs:'"
op|','
name|'message'
op|','
name|'re'
op|'.'
name|'MULTILINE'
op|')'
newline|'\n'
name|'if'
name|'m'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
name|'message'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'jobtext'
op|'='
name|'message'
op|'['
name|'m'
op|'.'
name|'start'
op|'('
op|')'
op|':'
op|']'
newline|'\n'
name|'stripped_message'
op|'='
name|'message'
op|'['
op|':'
name|'m'
op|'.'
name|'start'
op|'('
op|')'
op|']'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'return'
op|'('
name|'stripped_message'
op|','
name|'jobtext'
op|')'
newline|'\n'
nl|'\n'
DECL|member|prepareLogMessage
dedent|''
name|'def'
name|'prepareLogMessage'
op|'('
name|'self'
op|','
name|'template'
op|','
name|'message'
op|','
name|'jobs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Edits the template returned from "p4 change -o" to insert\n           the message in the Description field, and the jobs text in\n           the Jobs field."""'
newline|'\n'
name|'result'
op|'='
string|'""'
newline|'\n'
nl|'\n'
name|'inDescriptionSection'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'for'
name|'line'
name|'in'
name|'template'
op|'.'
name|'split'
op|'('
string|'"\\n"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|'"#"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'+='
name|'line'
op|'+'
string|'"\\n"'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'inDescriptionSection'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|'"Files:"'
op|')'
name|'or'
name|'line'
op|'.'
name|'startswith'
op|'('
string|'"Jobs:"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'inDescriptionSection'
op|'='
name|'False'
newline|'\n'
comment|'# insert Jobs section'
nl|'\n'
name|'if'
name|'jobs'
op|':'
newline|'\n'
indent|'                        '
name|'result'
op|'+='
name|'jobs'
op|'+'
string|'"\\n"'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|'"Description:"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'inDescriptionSection'
op|'='
name|'True'
newline|'\n'
name|'line'
op|'+='
string|'"\\n"'
newline|'\n'
name|'for'
name|'messageLine'
name|'in'
name|'message'
op|'.'
name|'split'
op|'('
string|'"\\n"'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'line'
op|'+='
string|'"\\t"'
op|'+'
name|'messageLine'
op|'+'
string|'"\\n"'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'result'
op|'+='
name|'line'
op|'+'
string|'"\\n"'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|patchRCSKeywords
dedent|''
name|'def'
name|'patchRCSKeywords'
op|'('
name|'self'
op|','
name|'file'
op|','
name|'pattern'
op|')'
op|':'
newline|'\n'
comment|'# Attempt to zap the RCS keywords in a p4 controlled file matching the given pattern'
nl|'\n'
indent|'        '
op|'('
name|'handle'
op|','
name|'outFileName'
op|')'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
name|'dir'
op|'='
string|"'.'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'outFile'
op|'='
name|'os'
op|'.'
name|'fdopen'
op|'('
name|'handle'
op|','
string|'"w+"'
op|')'
newline|'\n'
name|'inFile'
op|'='
name|'open'
op|'('
name|'file'
op|','
string|'"r"'
op|')'
newline|'\n'
name|'regexp'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
name|'pattern'
op|','
name|'re'
op|'.'
name|'VERBOSE'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'inFile'
op|'.'
name|'readlines'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
name|'regexp'
op|'.'
name|'sub'
op|'('
string|"r'$\\1$'"
op|','
name|'line'
op|')'
newline|'\n'
name|'outFile'
op|'.'
name|'write'
op|'('
name|'line'
op|')'
newline|'\n'
dedent|''
name|'inFile'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'outFile'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
comment|'# Forcibly overwrite the original file'
nl|'\n'
name|'os'
op|'.'
name|'unlink'
op|'('
name|'file'
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'move'
op|'('
name|'outFileName'
op|','
name|'file'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
comment|'# cleanup our temporary file'
nl|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'outFileName'
op|')'
newline|'\n'
name|'print'
string|'"Failed to strip RCS keywords in %s"'
op|'%'
name|'file'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|'"Patched up RCS keywords in %s"'
op|'%'
name|'file'
newline|'\n'
nl|'\n'
DECL|member|p4UserForCommit
dedent|''
name|'def'
name|'p4UserForCommit'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
comment|'# Return the tuple (perforce user,git email) for a given git commit id'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'getUserMapFromPerforceServer'
op|'('
op|')'
newline|'\n'
name|'gitEmail'
op|'='
name|'read_pipe'
op|'('
string|'"git log --max-count=1 --format=\'%%ae\' %s"'
op|'%'
name|'id'
op|')'
newline|'\n'
name|'gitEmail'
op|'='
name|'gitEmail'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'emails'
op|'.'
name|'has_key'
op|'('
name|'gitEmail'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
name|'None'
op|','
name|'gitEmail'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
name|'self'
op|'.'
name|'emails'
op|'['
name|'gitEmail'
op|']'
op|','
name|'gitEmail'
op|')'
newline|'\n'
nl|'\n'
DECL|member|checkValidP4Users
dedent|''
dedent|''
name|'def'
name|'checkValidP4Users'
op|'('
name|'self'
op|','
name|'commits'
op|')'
op|':'
newline|'\n'
comment|'# check if any git authors cannot be mapped to p4 users'
nl|'\n'
indent|'        '
name|'for'
name|'id'
name|'in'
name|'commits'
op|':'
newline|'\n'
indent|'            '
op|'('
name|'user'
op|','
name|'email'
op|')'
op|'='
name|'self'
op|'.'
name|'p4UserForCommit'
op|'('
name|'id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'user'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
string|'"Cannot find p4 user for email %s in commit %s."'
op|'%'
op|'('
name|'email'
op|','
name|'id'
op|')'
newline|'\n'
name|'if'
name|'gitConfig'
op|'('
string|"'git-p4.allowMissingP4Users'"
op|')'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|'"true"'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"%s"'
op|'%'
name|'msg'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'die'
op|'('
string|'"Error: %s\\nSet git-p4.allowMissingP4Users to true to allow this."'
op|'%'
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|lastP4Changelist
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'lastP4Changelist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get back the last changelist number submitted in this client spec. This'
nl|'\n'
comment|'# then gets used to patch up the username in the change. If the same'
nl|'\n'
comment|'# client spec is being used by multiple processes then this might go'
nl|'\n'
comment|'# wrong.'
nl|'\n'
indent|'        '
name|'results'
op|'='
name|'p4CmdList'
op|'('
string|'"client -o"'
op|')'
comment|'# find the current client'
newline|'\n'
name|'client'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'r'
name|'in'
name|'results'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'r'
op|'.'
name|'has_key'
op|'('
string|"'Client'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'client'
op|'='
name|'r'
op|'['
string|"'Client'"
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'client'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"could not get client spec"'
op|')'
newline|'\n'
dedent|''
name|'results'
op|'='
name|'p4CmdList'
op|'('
op|'['
string|'"changes"'
op|','
string|'"-c"'
op|','
name|'client'
op|','
string|'"-m"'
op|','
string|'"1"'
op|']'
op|')'
newline|'\n'
name|'for'
name|'r'
name|'in'
name|'results'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'r'
op|'.'
name|'has_key'
op|'('
string|"'change'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'r'
op|'['
string|"'change'"
op|']'
newline|'\n'
dedent|''
dedent|''
name|'die'
op|'('
string|'"Could not get changelist number for last submit - cannot patch up user details"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|modifyChangelistUser
dedent|''
name|'def'
name|'modifyChangelistUser'
op|'('
name|'self'
op|','
name|'changelist'
op|','
name|'newUser'
op|')'
op|':'
newline|'\n'
comment|'# fixup the user field of a changelist after it has been submitted.'
nl|'\n'
indent|'        '
name|'changes'
op|'='
name|'p4CmdList'
op|'('
string|'"change -o %s"'
op|'%'
name|'changelist'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'changes'
op|')'
op|'!='
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"Bad output from p4 change modifying %s to user %s"'
op|'%'
nl|'\n'
op|'('
name|'changelist'
op|','
name|'newUser'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'c'
op|'='
name|'changes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'c'
op|'['
string|"'User'"
op|']'
op|'=='
name|'newUser'
op|':'
name|'return'
comment|'# nothing to do'
newline|'\n'
name|'c'
op|'['
string|"'User'"
op|']'
op|'='
name|'newUser'
newline|'\n'
name|'input'
op|'='
name|'marshal'
op|'.'
name|'dumps'
op|'('
name|'c'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'p4CmdList'
op|'('
string|'"change -f -i"'
op|','
name|'stdin'
op|'='
name|'input'
op|')'
newline|'\n'
name|'for'
name|'r'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'r'
op|'.'
name|'has_key'
op|'('
string|"'code'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'r'
op|'['
string|"'code'"
op|']'
op|'=='
string|"'error'"
op|':'
newline|'\n'
indent|'                    '
name|'die'
op|'('
string|'"Could not modify user field of changelist %s to %s:%s"'
op|'%'
op|'('
name|'changelist'
op|','
name|'newUser'
op|','
name|'r'
op|'['
string|"'data'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'r'
op|'.'
name|'has_key'
op|'('
string|"'data'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
string|'"Updated user field for changelist %s to %s"'
op|'%'
op|'('
name|'changelist'
op|','
name|'newUser'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
dedent|''
name|'die'
op|'('
string|'"Could not modify user field of changelist %s to %s"'
op|'%'
op|'('
name|'changelist'
op|','
name|'newUser'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|canChangeChangelists
dedent|''
name|'def'
name|'canChangeChangelists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# check to see if we have p4 admin or super-user permissions, either of'
nl|'\n'
comment|'# which are required to modify changelists.'
nl|'\n'
indent|'        '
name|'results'
op|'='
name|'p4CmdList'
op|'('
op|'['
string|'"protects"'
op|','
name|'self'
op|'.'
name|'depotPath'
op|']'
op|')'
newline|'\n'
name|'for'
name|'r'
name|'in'
name|'results'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'r'
op|'.'
name|'has_key'
op|'('
string|"'perm'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'r'
op|'['
string|"'perm'"
op|']'
op|'=='
string|"'admin'"
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'if'
name|'r'
op|'['
string|"'perm'"
op|']'
op|'=='
string|"'super'"
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'1'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|prepareSubmitTemplate
dedent|''
name|'def'
name|'prepareSubmitTemplate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Run "p4 change -o" to grab a change specification template.\n           This does not use "p4 -G", as it is nice to keep the submission\n           template in original order, since a human might edit it.\n\n           Remove lines in the Files section that show changes to files\n           outside the depot path we\'re committing into."""'
newline|'\n'
nl|'\n'
name|'template'
op|'='
string|'""'
newline|'\n'
name|'inFilesSection'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'p4_read_pipe_lines'
op|'('
op|'['
string|"'change'"
op|','
string|"'-o'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'line'
op|'.'
name|'endswith'
op|'('
string|'"\\r\\n"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
name|'line'
op|'['
op|':'
op|'-'
number|'2'
op|']'
op|'+'
string|'"\\n"'
newline|'\n'
dedent|''
name|'if'
name|'inFilesSection'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|'"\\t"'
op|')'
op|':'
newline|'\n'
comment|'# path starts and ends with a tab'
nl|'\n'
indent|'                    '
name|'path'
op|'='
name|'line'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'lastTab'
op|'='
name|'path'
op|'.'
name|'rfind'
op|'('
string|'"\\t"'
op|')'
newline|'\n'
name|'if'
name|'lastTab'
op|'!='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                        '
name|'path'
op|'='
name|'path'
op|'['
op|':'
name|'lastTab'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'p4PathStartsWith'
op|'('
name|'path'
op|','
name|'self'
op|'.'
name|'depotPath'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'continue'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'inFilesSection'
op|'='
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|'"Files:"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'inFilesSection'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'template'
op|'+='
name|'line'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'template'
newline|'\n'
nl|'\n'
DECL|member|edit_template
dedent|''
name|'def'
name|'edit_template'
op|'('
name|'self'
op|','
name|'template_file'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Invoke the editor to let the user change the submission\n           message.  Return true if okay to continue with the submit."""'
newline|'\n'
nl|'\n'
comment|'# if configured to skip the editing part, just submit'
nl|'\n'
name|'if'
name|'gitConfig'
op|'('
string|'"git-p4.skipSubmitEdit"'
op|')'
op|'=='
string|'"true"'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
comment|'# look at the modification time, to check later if the user saved'
nl|'\n'
comment|'# the file'
nl|'\n'
dedent|''
name|'mtime'
op|'='
name|'os'
op|'.'
name|'stat'
op|'('
name|'template_file'
op|')'
op|'.'
name|'st_mtime'
newline|'\n'
nl|'\n'
comment|'# invoke the editor'
nl|'\n'
name|'if'
name|'os'
op|'.'
name|'environ'
op|'.'
name|'has_key'
op|'('
string|'"P4EDITOR"'
op|')'
name|'and'
op|'('
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|'"P4EDITOR"'
op|')'
op|'!='
string|'""'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'editor'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|'"P4EDITOR"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'editor'
op|'='
name|'read_pipe'
op|'('
string|'"git var GIT_EDITOR"'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
dedent|''
name|'system'
op|'('
name|'editor'
op|'+'
string|'" "'
op|'+'
name|'template_file'
op|')'
newline|'\n'
nl|'\n'
comment|'# If the file was not saved, prompt to see if this patch should'
nl|'\n'
comment|'# be skipped.  But skip this verification step if configured so.'
nl|'\n'
name|'if'
name|'gitConfig'
op|'('
string|'"git-p4.skipSubmitEditCheck"'
op|')'
op|'=='
string|'"true"'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
comment|'# modification time updated means user saved the file'
nl|'\n'
dedent|''
name|'if'
name|'os'
op|'.'
name|'stat'
op|'('
name|'template_file'
op|')'
op|'.'
name|'st_mtime'
op|'>'
name|'mtime'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'='
name|'raw_input'
op|'('
string|'"Submit template unchanged. Submit anyway? [y]es, [n]o (skip this patch) "'
op|')'
newline|'\n'
name|'if'
name|'response'
op|'=='
string|"'y'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'response'
op|'=='
string|"'n'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|applyCommit
dedent|''
dedent|''
dedent|''
name|'def'
name|'applyCommit'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Apply one commit, return True if it succeeded."""'
newline|'\n'
nl|'\n'
name|'print'
string|'"Applying"'
op|','
name|'read_pipe'
op|'('
op|'['
string|'"git"'
op|','
string|'"show"'
op|','
string|'"-s"'
op|','
nl|'\n'
string|'"--format=format:%h %s"'
op|','
name|'id'
op|']'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'p4User'
op|','
name|'gitEmail'
op|')'
op|'='
name|'self'
op|'.'
name|'p4UserForCommit'
op|'('
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'diff'
op|'='
name|'read_pipe_lines'
op|'('
string|'"git diff-tree -r %s \\"%s^\\" \\"%s\\""'
op|'%'
op|'('
name|'self'
op|'.'
name|'diffOpts'
op|','
name|'id'
op|','
name|'id'
op|')'
op|')'
newline|'\n'
name|'filesToAdd'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'filesToDelete'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'editedFiles'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'pureRenameCopy'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'filesToChangeExecBit'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'line'
name|'in'
name|'diff'
op|':'
newline|'\n'
indent|'            '
name|'diff'
op|'='
name|'parseDiffTreeEntry'
op|'('
name|'line'
op|')'
newline|'\n'
name|'modifier'
op|'='
name|'diff'
op|'['
string|"'status'"
op|']'
newline|'\n'
name|'path'
op|'='
name|'diff'
op|'['
string|"'src'"
op|']'
newline|'\n'
name|'if'
name|'modifier'
op|'=='
string|'"M"'
op|':'
newline|'\n'
indent|'                '
name|'p4_edit'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'isModeExecChanged'
op|'('
name|'diff'
op|'['
string|"'src_mode'"
op|']'
op|','
name|'diff'
op|'['
string|"'dst_mode'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'filesToChangeExecBit'
op|'['
name|'path'
op|']'
op|'='
name|'diff'
op|'['
string|"'dst_mode'"
op|']'
newline|'\n'
dedent|''
name|'editedFiles'
op|'.'
name|'add'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'modifier'
op|'=='
string|'"A"'
op|':'
newline|'\n'
indent|'                '
name|'filesToAdd'
op|'.'
name|'add'
op|'('
name|'path'
op|')'
newline|'\n'
name|'filesToChangeExecBit'
op|'['
name|'path'
op|']'
op|'='
name|'diff'
op|'['
string|"'dst_mode'"
op|']'
newline|'\n'
name|'if'
name|'path'
name|'in'
name|'filesToDelete'
op|':'
newline|'\n'
indent|'                    '
name|'filesToDelete'
op|'.'
name|'remove'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'modifier'
op|'=='
string|'"D"'
op|':'
newline|'\n'
indent|'                '
name|'filesToDelete'
op|'.'
name|'add'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'path'
name|'in'
name|'filesToAdd'
op|':'
newline|'\n'
indent|'                    '
name|'filesToAdd'
op|'.'
name|'remove'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'modifier'
op|'=='
string|'"C"'
op|':'
newline|'\n'
indent|'                '
name|'src'
op|','
name|'dest'
op|'='
name|'diff'
op|'['
string|"'src'"
op|']'
op|','
name|'diff'
op|'['
string|"'dst'"
op|']'
newline|'\n'
name|'p4_integrate'
op|'('
name|'src'
op|','
name|'dest'
op|')'
newline|'\n'
name|'pureRenameCopy'
op|'.'
name|'add'
op|'('
name|'dest'
op|')'
newline|'\n'
name|'if'
name|'diff'
op|'['
string|"'src_sha1'"
op|']'
op|'!='
name|'diff'
op|'['
string|"'dst_sha1'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'p4_edit'
op|'('
name|'dest'
op|')'
newline|'\n'
name|'pureRenameCopy'
op|'.'
name|'discard'
op|'('
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'isModeExecChanged'
op|'('
name|'diff'
op|'['
string|"'src_mode'"
op|']'
op|','
name|'diff'
op|'['
string|"'dst_mode'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'p4_edit'
op|'('
name|'dest'
op|')'
newline|'\n'
name|'pureRenameCopy'
op|'.'
name|'discard'
op|'('
name|'dest'
op|')'
newline|'\n'
name|'filesToChangeExecBit'
op|'['
name|'dest'
op|']'
op|'='
name|'diff'
op|'['
string|"'dst_mode'"
op|']'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dest'
op|')'
newline|'\n'
name|'editedFiles'
op|'.'
name|'add'
op|'('
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'modifier'
op|'=='
string|'"R"'
op|':'
newline|'\n'
indent|'                '
name|'src'
op|','
name|'dest'
op|'='
name|'diff'
op|'['
string|"'src'"
op|']'
op|','
name|'diff'
op|'['
string|"'dst'"
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'p4HasMoveCommand'
op|':'
newline|'\n'
indent|'                    '
name|'p4_edit'
op|'('
name|'src'
op|')'
comment|'# src must be open before move'
newline|'\n'
name|'p4_move'
op|'('
name|'src'
op|','
name|'dest'
op|')'
comment|'# opens for (move/delete, move/add)'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'p4_integrate'
op|'('
name|'src'
op|','
name|'dest'
op|')'
newline|'\n'
name|'if'
name|'diff'
op|'['
string|"'src_sha1'"
op|']'
op|'!='
name|'diff'
op|'['
string|"'dst_sha1'"
op|']'
op|':'
newline|'\n'
indent|'                        '
name|'p4_edit'
op|'('
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'pureRenameCopy'
op|'.'
name|'add'
op|'('
name|'dest'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'isModeExecChanged'
op|'('
name|'diff'
op|'['
string|"'src_mode'"
op|']'
op|','
name|'diff'
op|'['
string|"'dst_mode'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'not'
name|'self'
op|'.'
name|'p4HasMoveCommand'
op|':'
newline|'\n'
indent|'                        '
name|'p4_edit'
op|'('
name|'dest'
op|')'
comment|'# with move: already open, writable'
newline|'\n'
dedent|''
name|'filesToChangeExecBit'
op|'['
name|'dest'
op|']'
op|'='
name|'diff'
op|'['
string|"'dst_mode'"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'p4HasMoveCommand'
op|':'
newline|'\n'
indent|'                    '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dest'
op|')'
newline|'\n'
name|'filesToDelete'
op|'.'
name|'add'
op|'('
name|'src'
op|')'
newline|'\n'
dedent|''
name|'editedFiles'
op|'.'
name|'add'
op|'('
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|'"unknown modifier %s for %s"'
op|'%'
op|'('
name|'modifier'
op|','
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'diffcmd'
op|'='
string|'"git format-patch -k --stdout \\"%s^\\"..\\"%s\\""'
op|'%'
op|'('
name|'id'
op|','
name|'id'
op|')'
newline|'\n'
name|'patchcmd'
op|'='
name|'diffcmd'
op|'+'
string|'" | git apply "'
newline|'\n'
name|'tryPatchCmd'
op|'='
name|'patchcmd'
op|'+'
string|'"--check -"'
newline|'\n'
name|'applyPatchCmd'
op|'='
name|'patchcmd'
op|'+'
string|'"--check --apply -"'
newline|'\n'
name|'patch_succeeded'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'if'
name|'os'
op|'.'
name|'system'
op|'('
name|'tryPatchCmd'
op|')'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'fixed_rcs_keywords'
op|'='
name|'False'
newline|'\n'
name|'patch_succeeded'
op|'='
name|'False'
newline|'\n'
name|'print'
string|'"Unfortunately applying the change failed!"'
newline|'\n'
nl|'\n'
comment|"# Patch failed, maybe it's just RCS keyword woes. Look through"
nl|'\n'
comment|"# the patch to see if that's possible."
nl|'\n'
name|'if'
name|'gitConfig'
op|'('
string|'"git-p4.attemptRCSCleanup"'
op|','
string|'"--bool"'
op|')'
op|'=='
string|'"true"'
op|':'
newline|'\n'
indent|'                '
name|'file'
op|'='
name|'None'
newline|'\n'
name|'pattern'
op|'='
name|'None'
newline|'\n'
name|'kwfiles'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'file'
name|'in'
name|'editedFiles'
op|'|'
name|'filesToDelete'
op|':'
newline|'\n'
comment|"# did this file's delta contain RCS keywords?"
nl|'\n'
indent|'                    '
name|'pattern'
op|'='
name|'p4_keywords_regexp_for_file'
op|'('
name|'file'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'pattern'
op|':'
newline|'\n'
comment|'# this file is a possibility...look for RCS keywords.'
nl|'\n'
indent|'                        '
name|'regexp'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
name|'pattern'
op|','
name|'re'
op|'.'
name|'VERBOSE'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'read_pipe_lines'
op|'('
op|'['
string|'"git"'
op|','
string|'"diff"'
op|','
string|'"%s^..%s"'
op|'%'
op|'('
name|'id'
op|','
name|'id'
op|')'
op|','
name|'file'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'if'
name|'regexp'
op|'.'
name|'search'
op|'('
name|'line'
op|')'
op|':'
newline|'\n'
indent|'                                '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'                                    '
name|'print'
string|'"got keyword match on %s in %s in %s"'
op|'%'
op|'('
name|'pattern'
op|','
name|'line'
op|','
name|'file'
op|')'
newline|'\n'
dedent|''
name|'kwfiles'
op|'['
name|'file'
op|']'
op|'='
name|'pattern'
newline|'\n'
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'for'
name|'file'
name|'in'
name|'kwfiles'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'                        '
name|'print'
string|'"zapping %s with %s"'
op|'%'
op|'('
name|'line'
op|','
name|'pattern'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'patchRCSKeywords'
op|'('
name|'file'
op|','
name|'kwfiles'
op|'['
name|'file'
op|']'
op|')'
newline|'\n'
name|'fixed_rcs_keywords'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'fixed_rcs_keywords'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"Retrying the patch with RCS keywords cleaned up"'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'system'
op|'('
name|'tryPatchCmd'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'patch_succeeded'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'patch_succeeded'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"What do you want to do?"'
newline|'\n'
name|'response'
op|'='
string|'"x"'
newline|'\n'
name|'while'
name|'response'
op|'!='
string|'"s"'
name|'and'
name|'response'
op|'!='
string|'"a"'
name|'and'
name|'response'
op|'!='
string|'"w"'
op|':'
newline|'\n'
indent|'                '
name|'response'
op|'='
name|'raw_input'
op|'('
string|'"[s]kip this patch / [a]pply the patch forcibly "'
nl|'\n'
string|'"and with .rej files / [w]rite the patch to a file (patch.txt) "'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'response'
op|'=='
string|'"s"'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"Skipping! Good luck with the next patches..."'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'editedFiles'
op|':'
newline|'\n'
indent|'                    '
name|'p4_revert'
op|'('
name|'f'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'f'
name|'in'
name|'filesToAdd'
op|':'
newline|'\n'
indent|'                    '
name|'os'
op|'.'
name|'remove'
op|'('
name|'f'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'=='
string|'"a"'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'system'
op|'('
name|'applyPatchCmd'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'filesToAdd'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"You may also want to call p4 add on the following files:"'
newline|'\n'
name|'print'
string|'" "'
op|'.'
name|'join'
op|'('
name|'filesToAdd'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'filesToDelete'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"The following files should be scheduled for deletion with p4 delete:"'
newline|'\n'
name|'print'
string|'" "'
op|'.'
name|'join'
op|'('
name|'filesToDelete'
op|')'
newline|'\n'
dedent|''
name|'die'
op|'('
string|'"Please resolve and submit the conflict manually and "'
nl|'\n'
op|'+'
string|'"continue afterwards with git p4 submit --continue"'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'=='
string|'"w"'
op|':'
newline|'\n'
indent|'                '
name|'system'
op|'('
name|'diffcmd'
op|'+'
string|'" > patch.txt"'
op|')'
newline|'\n'
name|'print'
string|'"Patch saved to patch.txt in %s !"'
op|'%'
name|'self'
op|'.'
name|'clientPath'
newline|'\n'
name|'die'
op|'('
string|'"Please resolve and submit the conflict manually and "'
nl|'\n'
string|'"continue afterwards with git p4 submit --continue"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'system'
op|'('
name|'applyPatchCmd'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'f'
name|'in'
name|'filesToAdd'
op|':'
newline|'\n'
indent|'            '
name|'p4_add'
op|'('
name|'f'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'f'
name|'in'
name|'filesToDelete'
op|':'
newline|'\n'
indent|'            '
name|'p4_revert'
op|'('
name|'f'
op|')'
newline|'\n'
name|'p4_delete'
op|'('
name|'f'
op|')'
newline|'\n'
nl|'\n'
comment|'# Set/clear executable bits'
nl|'\n'
dedent|''
name|'for'
name|'f'
name|'in'
name|'filesToChangeExecBit'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mode'
op|'='
name|'filesToChangeExecBit'
op|'['
name|'f'
op|']'
newline|'\n'
name|'setP4ExecBit'
op|'('
name|'f'
op|','
name|'mode'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'logMessage'
op|'='
name|'extractLogMessageFromGitCommit'
op|'('
name|'id'
op|')'
newline|'\n'
name|'logMessage'
op|'='
name|'logMessage'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
op|'('
name|'logMessage'
op|','
name|'jobs'
op|')'
op|'='
name|'self'
op|'.'
name|'separate_jobs_from_description'
op|'('
name|'logMessage'
op|')'
newline|'\n'
nl|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'prepareSubmitTemplate'
op|'('
op|')'
newline|'\n'
name|'submitTemplate'
op|'='
name|'self'
op|'.'
name|'prepareLogMessage'
op|'('
name|'template'
op|','
name|'logMessage'
op|','
name|'jobs'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'preserveUser'
op|':'
newline|'\n'
indent|'           '
name|'submitTemplate'
op|'='
name|'submitTemplate'
op|'+'
op|'('
string|'"\\n######## Actual user %s, modified after commit\\n"'
op|'%'
name|'p4User'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'os'
op|'.'
name|'environ'
op|'.'
name|'has_key'
op|'('
string|'"P4DIFF"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'del'
op|'('
name|'os'
op|'.'
name|'environ'
op|'['
string|'"P4DIFF"'
op|']'
op|')'
newline|'\n'
dedent|''
name|'diff'
op|'='
string|'""'
newline|'\n'
name|'for'
name|'editedFile'
name|'in'
name|'editedFiles'
op|':'
newline|'\n'
indent|'            '
name|'diff'
op|'+='
name|'p4_read_pipe'
op|'('
op|'['
string|"'diff'"
op|','
string|"'-du'"
op|','
nl|'\n'
name|'wildcard_encode'
op|'('
name|'editedFile'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'newdiff'
op|'='
string|'""'
newline|'\n'
name|'for'
name|'newFile'
name|'in'
name|'filesToAdd'
op|':'
newline|'\n'
indent|'            '
name|'newdiff'
op|'+='
string|'"==== new file ====\\n"'
newline|'\n'
name|'newdiff'
op|'+='
string|'"--- /dev/null\\n"'
newline|'\n'
name|'newdiff'
op|'+='
string|'"+++ %s\\n"'
op|'%'
name|'newFile'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'newFile'
op|','
string|'"r"'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'f'
op|'.'
name|'readlines'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'newdiff'
op|'+='
string|'"+"'
op|'+'
name|'line'
newline|'\n'
dedent|''
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'checkAuthorship'
name|'and'
name|'not'
name|'self'
op|'.'
name|'p4UserIsMe'
op|'('
name|'p4User'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'submitTemplate'
op|'+='
string|'"######## git author %s does not match your p4 account.\\n"'
op|'%'
name|'gitEmail'
newline|'\n'
name|'submitTemplate'
op|'+='
string|'"######## Use option --preserve-user to modify authorship.\\n"'
newline|'\n'
name|'submitTemplate'
op|'+='
string|'"######## Variable git-p4.skipUserNameCheck hides this message.\\n"'
newline|'\n'
nl|'\n'
dedent|''
name|'separatorLine'
op|'='
string|'"######## everything below this line is just the diff #######\\n"'
newline|'\n'
nl|'\n'
op|'('
name|'handle'
op|','
name|'fileName'
op|')'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'tmpFile'
op|'='
name|'os'
op|'.'
name|'fdopen'
op|'('
name|'handle'
op|','
string|'"w+"'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'isWindows'
op|':'
newline|'\n'
indent|'            '
name|'submitTemplate'
op|'='
name|'submitTemplate'
op|'.'
name|'replace'
op|'('
string|'"\\n"'
op|','
string|'"\\r\\n"'
op|')'
newline|'\n'
name|'separatorLine'
op|'='
name|'separatorLine'
op|'.'
name|'replace'
op|'('
string|'"\\n"'
op|','
string|'"\\r\\n"'
op|')'
newline|'\n'
name|'newdiff'
op|'='
name|'newdiff'
op|'.'
name|'replace'
op|'('
string|'"\\n"'
op|','
string|'"\\r\\n"'
op|')'
newline|'\n'
dedent|''
name|'tmpFile'
op|'.'
name|'write'
op|'('
name|'submitTemplate'
op|'+'
name|'separatorLine'
op|'+'
name|'diff'
op|'+'
name|'newdiff'
op|')'
newline|'\n'
name|'tmpFile'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'edit_template'
op|'('
name|'fileName'
op|')'
op|':'
newline|'\n'
comment|'# read the edited message and submit'
nl|'\n'
indent|'            '
name|'tmpFile'
op|'='
name|'open'
op|'('
name|'fileName'
op|','
string|'"rb"'
op|')'
newline|'\n'
name|'message'
op|'='
name|'tmpFile'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'tmpFile'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'submitTemplate'
op|'='
name|'message'
op|'['
op|':'
name|'message'
op|'.'
name|'index'
op|'('
name|'separatorLine'
op|')'
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'isWindows'
op|':'
newline|'\n'
indent|'                '
name|'submitTemplate'
op|'='
name|'submitTemplate'
op|'.'
name|'replace'
op|'('
string|'"\\r\\n"'
op|','
string|'"\\n"'
op|')'
newline|'\n'
dedent|''
name|'p4_write_pipe'
op|'('
op|'['
string|"'submit'"
op|','
string|"'-i'"
op|']'
op|','
name|'submitTemplate'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'preserveUser'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'p4User'
op|':'
newline|'\n'
comment|'# Get last changelist number. Cannot easily get it from'
nl|'\n'
comment|'# the submit command output as the output is'
nl|'\n'
comment|'# unmarshalled.'
nl|'\n'
indent|'                    '
name|'changelist'
op|'='
name|'self'
op|'.'
name|'lastP4Changelist'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'modifyChangelistUser'
op|'('
name|'changelist'
op|','
name|'p4User'
op|')'
newline|'\n'
nl|'\n'
comment|'# The rename/copy happened by applying a patch that created a'
nl|'\n'
comment|'# new file.  This leaves it writable, which confuses p4.'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'f'
name|'in'
name|'pureRenameCopy'
op|':'
newline|'\n'
indent|'                '
name|'p4_sync'
op|'('
name|'f'
op|','
string|'"-f"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# skip this patch'
nl|'\n'
indent|'            '
name|'print'
string|'"Submission cancelled, undoing p4 changes."'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'editedFiles'
op|':'
newline|'\n'
indent|'                '
name|'p4_revert'
op|'('
name|'f'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'f'
name|'in'
name|'filesToAdd'
op|':'
newline|'\n'
indent|'                '
name|'p4_revert'
op|'('
name|'f'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'remove'
op|'('
name|'f'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'os'
op|'.'
name|'remove'
op|'('
name|'fileName'
op|')'
newline|'\n'
name|'return'
name|'True'
comment|'# success'
newline|'\n'
nl|'\n'
comment|'# Export git tags as p4 labels. Create a p4 label and then tag'
nl|'\n'
comment|'# with that.'
nl|'\n'
DECL|member|exportGitTags
dedent|''
name|'def'
name|'exportGitTags'
op|'('
name|'self'
op|','
name|'gitTags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'validLabelRegexp'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.labelExportRegexp"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'validLabelRegexp'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'validLabelRegexp'
op|'='
name|'defaultLabelRegexp'
newline|'\n'
dedent|''
name|'m'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
name|'validLabelRegexp'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
name|'in'
name|'gitTags'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'if'
name|'not'
name|'m'
op|'.'
name|'match'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"tag %s does not match regexp %s"'
op|'%'
op|'('
name|'name'
op|','
name|'validLabelRegexp'
op|')'
newline|'\n'
dedent|''
name|'continue'
newline|'\n'
nl|'\n'
comment|'# Get the p4 commit this corresponds to'
nl|'\n'
dedent|''
name|'logMessage'
op|'='
name|'extractLogMessageFromGitCommit'
op|'('
name|'name'
op|')'
newline|'\n'
name|'values'
op|'='
name|'extractSettingsGitLog'
op|'('
name|'logMessage'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'values'
op|'.'
name|'has_key'
op|'('
string|"'change'"
op|')'
op|':'
newline|'\n'
comment|'# a tag pointing to something not sent to p4; ignore'
nl|'\n'
indent|'                '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"git tag %s does not give a p4 commit"'
op|'%'
name|'name'
newline|'\n'
dedent|''
name|'continue'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'changelist'
op|'='
name|'values'
op|'['
string|"'change'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Get the tag details.'
nl|'\n'
dedent|''
name|'inHeader'
op|'='
name|'True'
newline|'\n'
name|'isAnnotated'
op|'='
name|'False'
newline|'\n'
name|'body'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'l'
name|'in'
name|'read_pipe_lines'
op|'('
op|'['
string|'"git"'
op|','
string|'"cat-file"'
op|','
string|'"-p"'
op|','
name|'name'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'l'
op|'='
name|'l'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'inHeader'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'re'
op|'.'
name|'match'
op|'('
string|"r'tag\\s+'"
op|','
name|'l'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'isAnnotated'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'re'
op|'.'
name|'match'
op|'('
string|"r'\\s*$'"
op|','
name|'l'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'inHeader'
op|'='
name|'False'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'body'
op|'.'
name|'append'
op|'('
name|'l'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'isAnnotated'
op|':'
newline|'\n'
indent|'                '
name|'body'
op|'='
op|'['
string|'"lightweight tag imported by git p4\\n"'
op|']'
newline|'\n'
nl|'\n'
comment|'# Create the label - use the same view as the client spec we are using'
nl|'\n'
dedent|''
name|'clientSpec'
op|'='
name|'getClientSpec'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'labelTemplate'
op|'='
string|'"Label: %s\\n"'
op|'%'
name|'name'
newline|'\n'
name|'labelTemplate'
op|'+='
string|'"Description:\\n"'
newline|'\n'
name|'for'
name|'b'
name|'in'
name|'body'
op|':'
newline|'\n'
indent|'                '
name|'labelTemplate'
op|'+='
string|'"\\t"'
op|'+'
name|'b'
op|'+'
string|'"\\n"'
newline|'\n'
dedent|''
name|'labelTemplate'
op|'+='
string|'"View:\\n"'
newline|'\n'
name|'for'
name|'mapping'
name|'in'
name|'clientSpec'
op|'.'
name|'mappings'
op|':'
newline|'\n'
indent|'                '
name|'labelTemplate'
op|'+='
string|'"\\t%s\\n"'
op|'%'
name|'mapping'
op|'.'
name|'depot_side'
op|'.'
name|'path'
newline|'\n'
nl|'\n'
dedent|''
name|'p4_write_pipe'
op|'('
op|'['
string|'"label"'
op|','
string|'"-i"'
op|']'
op|','
name|'labelTemplate'
op|')'
newline|'\n'
nl|'\n'
comment|'# Use the label'
nl|'\n'
name|'p4_system'
op|'('
op|'['
string|'"tag"'
op|','
string|'"-l"'
op|','
name|'name'
op|']'
op|'+'
nl|'\n'
op|'['
string|'"%s@%s"'
op|'%'
op|'('
name|'mapping'
op|'.'
name|'depot_side'
op|'.'
name|'path'
op|','
name|'changelist'
op|')'
name|'for'
name|'mapping'
name|'in'
name|'clientSpec'
op|'.'
name|'mappings'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"created p4 label for tag %s"'
op|'%'
name|'name'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
dedent|''
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'master'
op|'='
name|'currentGitBranch'
op|'('
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'master'
op|')'
op|'=='
number|'0'
name|'or'
name|'not'
name|'gitBranchExists'
op|'('
string|'"refs/heads/%s"'
op|'%'
name|'self'
op|'.'
name|'master'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|'"Detecting current git branch failed!"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'len'
op|'('
name|'args'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'master'
op|'='
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'branchExists'
op|'('
name|'self'
op|'.'
name|'master'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|'"Branch %s does not exist"'
op|'%'
name|'self'
op|'.'
name|'master'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'allowSubmit'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.allowSubmit"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'allowSubmit'
op|')'
op|'>'
number|'0'
name|'and'
name|'not'
name|'self'
op|'.'
name|'master'
name|'in'
name|'allowSubmit'
op|'.'
name|'split'
op|'('
string|'","'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"%s is not in git-p4.allowSubmit"'
op|'%'
name|'self'
op|'.'
name|'master'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'['
name|'upstream'
op|','
name|'settings'
op|']'
op|'='
name|'findUpstreamBranchPoint'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'depotPath'
op|'='
name|'settings'
op|'['
string|"'depot-paths'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'origin'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'origin'
op|'='
name|'upstream'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'preserveUser'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'canChangeChangelists'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|'"Cannot preserve user names without p4 super-user or admin permissions"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"Origin branch is "'
op|'+'
name|'self'
op|'.'
name|'origin'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'depotPath'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"Internal error: cannot locate perforce depot path from existing branches"'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'128'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'useClientSpec'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'gitConfig'
op|'('
string|'"git-p4.useclientspec"'
op|','
string|'"--bool"'
op|')'
op|'=='
string|'"true"'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'useClientSpec'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'useClientSpec'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'clientSpecDirs'
op|'='
name|'getClientSpec'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'useClientSpec'
op|':'
newline|'\n'
comment|'# all files are relative to the client spec'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'clientPath'
op|'='
name|'getClientRoot'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'clientPath'
op|'='
name|'p4Where'
op|'('
name|'self'
op|'.'
name|'depotPath'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'clientPath'
op|'=='
string|'""'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"Error: Cannot locate perforce checkout of %s in client view"'
op|'%'
name|'self'
op|'.'
name|'depotPath'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|'"Perforce checkout for depot path %s located at %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'depotPath'
op|','
name|'self'
op|'.'
name|'clientPath'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'oldWorkingDirectory'
op|'='
name|'os'
op|'.'
name|'getcwd'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# ensure the clientPath exists'
nl|'\n'
name|'new_client_dir'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'clientPath'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'new_client_dir'
op|'='
name|'True'
newline|'\n'
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'self'
op|'.'
name|'clientPath'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'chdir'
op|'('
name|'self'
op|'.'
name|'clientPath'
op|')'
newline|'\n'
name|'print'
string|'"Synchronizing p4 checkout..."'
newline|'\n'
name|'if'
name|'new_client_dir'
op|':'
newline|'\n'
comment|'# old one was destroyed, and maybe nobody told p4'
nl|'\n'
indent|'            '
name|'p4_sync'
op|'('
string|'"..."'
op|','
string|'"-f"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'p4_sync'
op|'('
string|'"..."'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'check'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'commits'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'read_pipe_lines'
op|'('
string|'"git rev-list --no-merges %s..%s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'origin'
op|','
name|'self'
op|'.'
name|'master'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'commits'
op|'.'
name|'append'
op|'('
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'commits'
op|'.'
name|'reverse'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'preserveUser'
name|'or'
op|'('
name|'gitConfig'
op|'('
string|'"git-p4.skipUserNameCheck"'
op|')'
op|'=='
string|'"true"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'checkAuthorship'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'checkAuthorship'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'preserveUser'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'checkValidP4Users'
op|'('
name|'commits'
op|')'
newline|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Build up a set of options to be passed to diff when'
nl|'\n'
comment|'# submitting each commit to p4.'
nl|'\n'
comment|'#'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'detectRenames'
op|':'
newline|'\n'
comment|'# command-line -M arg'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'diffOpts'
op|'='
string|'"-M"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# If not explicitly set check the config variable'
nl|'\n'
indent|'            '
name|'detectRenames'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.detectRenames"'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'detectRenames'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|'"false"'
name|'or'
name|'detectRenames'
op|'=='
string|'""'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'diffOpts'
op|'='
string|'""'
newline|'\n'
dedent|''
name|'elif'
name|'detectRenames'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|'"true"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'diffOpts'
op|'='
string|'"-M"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'diffOpts'
op|'='
string|'"-M%s"'
op|'%'
name|'detectRenames'
newline|'\n'
nl|'\n'
comment|'# no command-line arg for -C or --find-copies-harder, just'
nl|'\n'
comment|'# config variables'
nl|'\n'
dedent|''
dedent|''
name|'detectCopies'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.detectCopies"'
op|')'
newline|'\n'
name|'if'
name|'detectCopies'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|'"false"'
name|'or'
name|'detectCopies'
op|'=='
string|'""'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'elif'
name|'detectCopies'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|'"true"'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'diffOpts'
op|'+='
string|'" -C"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'diffOpts'
op|'+='
string|'" -C%s"'
op|'%'
name|'detectCopies'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'gitConfig'
op|'('
string|'"git-p4.detectCopiesHarder"'
op|','
string|'"--bool"'
op|')'
op|'=='
string|'"true"'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'diffOpts'
op|'+='
string|'" --find-copies-harder"'
newline|'\n'
nl|'\n'
dedent|''
name|'applied'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'commit'
name|'in'
name|'commits'
op|':'
newline|'\n'
indent|'            '
name|'ok'
op|'='
name|'self'
op|'.'
name|'applyCommit'
op|'('
name|'commit'
op|')'
newline|'\n'
name|'if'
name|'ok'
op|':'
newline|'\n'
indent|'                '
name|'applied'
op|'.'
name|'append'
op|'('
name|'commit'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'chdir'
op|'('
name|'self'
op|'.'
name|'oldWorkingDirectory'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'commits'
op|')'
op|'=='
name|'len'
op|'('
name|'applied'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"All commits applied!"'
newline|'\n'
nl|'\n'
name|'sync'
op|'='
name|'P4Sync'
op|'('
op|')'
newline|'\n'
name|'sync'
op|'.'
name|'run'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'rebase'
op|'='
name|'P4Rebase'
op|'('
op|')'
newline|'\n'
name|'rebase'
op|'.'
name|'rebase'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'applied'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"No commits applied."'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"Applied only the commits marked with \'*\':"'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'commits'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'c'
name|'in'
name|'applied'
op|':'
newline|'\n'
indent|'                        '
name|'star'
op|'='
string|'"*"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'star'
op|'='
string|'" "'
newline|'\n'
dedent|''
name|'print'
name|'star'
op|','
name|'read_pipe'
op|'('
op|'['
string|'"git"'
op|','
string|'"show"'
op|','
string|'"-s"'
op|','
nl|'\n'
string|'"--format=format:%h %s"'
op|','
name|'c'
op|']'
op|')'
newline|'\n'
dedent|''
name|'print'
string|'"You will have to do \'git p4 sync\' and rebase."'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'gitConfig'
op|'('
string|'"git-p4.exportLabels"'
op|','
string|'"--bool"'
op|')'
op|'=='
string|'"true"'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'exportLabels'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'exportLabels'
op|':'
newline|'\n'
indent|'            '
name|'p4Labels'
op|'='
name|'getP4Labels'
op|'('
name|'self'
op|'.'
name|'depotPath'
op|')'
newline|'\n'
name|'gitTags'
op|'='
name|'getGitTags'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'missingGitTags'
op|'='
name|'gitTags'
op|'-'
name|'p4Labels'
newline|'\n'
name|'self'
op|'.'
name|'exportGitTags'
op|'('
name|'missingGitTags'
op|')'
newline|'\n'
nl|'\n'
comment|'# exit with error unless everything applied perfecly'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'commits'
op|')'
op|'!='
name|'len'
op|'('
name|'applied'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|class|View
dedent|''
dedent|''
name|'class'
name|'View'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represent a p4 view ("p4 help views"), and map files in a\n       repo according to the view."""'
newline|'\n'
nl|'\n'
DECL|class|Path
name|'class'
name|'Path'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""A depot or client path, possibly containing wildcards.\n           The only one supported is ... at the end, currently.\n           Initialize with the full path, with //depot or //client."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'is_depot'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'path'
op|'='
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'is_depot'
op|'='
name|'is_depot'
newline|'\n'
name|'self'
op|'.'
name|'find_wildcards'
op|'('
op|')'
newline|'\n'
comment|'# remember the prefix bit, useful for relative mappings'
nl|'\n'
name|'m'
op|'='
name|'re'
op|'.'
name|'match'
op|'('
string|'"(//[^/]+/)"'
op|','
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'m'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|'"Path %s does not start with //prefix/"'
op|'%'
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'prefix'
op|'='
name|'m'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_depot'
op|':'
newline|'\n'
comment|'# strip //client/ on client paths'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'path'
op|'='
name|'self'
op|'.'
name|'path'
op|'['
name|'len'
op|'('
name|'prefix'
op|')'
op|':'
op|']'
newline|'\n'
nl|'\n'
DECL|member|find_wildcards
dedent|''
dedent|''
name|'def'
name|'find_wildcards'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Make sure wildcards are valid, and set up internal\n               variables."""'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ends_triple_dot'
op|'='
name|'False'
newline|'\n'
comment|'# There are three wildcards allowed in p4 views'
nl|'\n'
comment|'# (see "p4 help views").  This code knows how to'
nl|'\n'
comment|'# handle "..." (only at the end), but cannot deal with'
nl|'\n'
comment|'# "%%n" or "*".  Only check the depot_side, as p4 should'
nl|'\n'
comment|'# validate that the client_side matches too.'
nl|'\n'
name|'if'
name|'re'
op|'.'
name|'search'
op|'('
string|"r'%%[1-9]'"
op|','
name|'self'
op|'.'
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|'"Can\'t handle %%n wildcards in view: %s"'
op|'%'
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'path'
op|'.'
name|'find'
op|'('
string|'"*"'
op|')'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|'"Can\'t handle * wildcards in view: %s"'
op|'%'
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'triple_dot_index'
op|'='
name|'self'
op|'.'
name|'path'
op|'.'
name|'find'
op|'('
string|'"..."'
op|')'
newline|'\n'
name|'if'
name|'triple_dot_index'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'triple_dot_index'
op|'!='
name|'len'
op|'('
name|'self'
op|'.'
name|'path'
op|')'
op|'-'
number|'3'
op|':'
newline|'\n'
indent|'                    '
name|'die'
op|'('
string|'"Can handle only single ... wildcard, at end: %s"'
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'ends_triple_dot'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|ensure_compatible
dedent|''
dedent|''
name|'def'
name|'ensure_compatible'
op|'('
name|'self'
op|','
name|'other_path'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Make sure the wildcards agree."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ends_triple_dot'
op|'!='
name|'other_path'
op|'.'
name|'ends_triple_dot'
op|':'
newline|'\n'
indent|'                 '
name|'die'
op|'('
string|'"Both paths must end with ... if either does;\\n"'
op|'+'
nl|'\n'
string|'"paths: %s %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'path'
op|','
name|'other_path'
op|'.'
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|match_wildcards
dedent|''
dedent|''
name|'def'
name|'match_wildcards'
op|'('
name|'self'
op|','
name|'test_path'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""See if this test_path matches us, and fill in the value\n               of the wildcards if so.  Returns a tuple of\n               (True|False, wildcards[]).  For now, only the ... at end\n               is supported, so at most one wildcard."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ends_triple_dot'
op|':'
newline|'\n'
indent|'                '
name|'dotless'
op|'='
name|'self'
op|'.'
name|'path'
op|'['
op|':'
op|'-'
number|'3'
op|']'
newline|'\n'
name|'if'
name|'test_path'
op|'.'
name|'startswith'
op|'('
name|'dotless'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'wildcard'
op|'='
name|'test_path'
op|'['
name|'len'
op|'('
name|'dotless'
op|')'
op|':'
op|']'
newline|'\n'
name|'return'
op|'('
name|'True'
op|','
op|'['
name|'wildcard'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'test_path'
op|'=='
name|'self'
op|'.'
name|'path'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'('
name|'True'
op|','
op|'['
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'('
name|'False'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|match
dedent|''
name|'def'
name|'match'
op|'('
name|'self'
op|','
name|'test_path'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Just return if it matches; don\'t bother with the wildcards."""'
newline|'\n'
name|'b'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'match_wildcards'
op|'('
name|'test_path'
op|')'
newline|'\n'
name|'return'
name|'b'
newline|'\n'
nl|'\n'
DECL|member|fill_in_wildcards
dedent|''
name|'def'
name|'fill_in_wildcards'
op|'('
name|'self'
op|','
name|'wildcards'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Return the relative path, with the wildcards filled in\n               if there are any."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ends_triple_dot'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'path'
op|'['
op|':'
op|'-'
number|'3'
op|']'
op|'+'
name|'wildcards'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'path'
newline|'\n'
nl|'\n'
DECL|class|Mapping
dedent|''
dedent|''
dedent|''
name|'class'
name|'Mapping'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'        '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'depot_side'
op|','
name|'client_side'
op|','
name|'overlay'
op|','
name|'exclude'
op|')'
op|':'
newline|'\n'
comment|'# depot_side is without the trailing /... if it had one'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'depot_side'
op|'='
name|'View'
op|'.'
name|'Path'
op|'('
name|'depot_side'
op|','
name|'is_depot'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client_side'
op|'='
name|'View'
op|'.'
name|'Path'
op|'('
name|'client_side'
op|','
name|'is_depot'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'overlay'
op|'='
name|'overlay'
comment|'# started with "+"'
newline|'\n'
name|'self'
op|'.'
name|'exclude'
op|'='
name|'exclude'
comment|'# started with "-"'
newline|'\n'
name|'assert'
name|'not'
op|'('
name|'self'
op|'.'
name|'overlay'
name|'and'
name|'self'
op|'.'
name|'exclude'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'depot_side'
op|'.'
name|'ensure_compatible'
op|'('
name|'self'
op|'.'
name|'client_side'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'='
string|'" "'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'overlay'
op|':'
newline|'\n'
indent|'                '
name|'c'
op|'='
string|'"+"'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'exclude'
op|':'
newline|'\n'
indent|'                '
name|'c'
op|'='
string|'"-"'
newline|'\n'
dedent|''
name|'return'
string|'"View.Mapping: %s%s -> %s"'
op|'%'
op|'('
name|'c'
op|','
name|'self'
op|'.'
name|'depot_side'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'client_side'
op|'.'
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|map_depot_to_client
dedent|''
name|'def'
name|'map_depot_to_client'
op|'('
name|'self'
op|','
name|'depot_path'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Calculate the client path if using this mapping on the\n               given depot path; does not consider the effect of other\n               mappings in a view.  Even excluded mappings are returned."""'
newline|'\n'
name|'matches'
op|','
name|'wildcards'
op|'='
name|'self'
op|'.'
name|'depot_side'
op|'.'
name|'match_wildcards'
op|'('
name|'depot_path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'matches'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'""'
newline|'\n'
dedent|''
name|'client_path'
op|'='
name|'self'
op|'.'
name|'client_side'
op|'.'
name|'fill_in_wildcards'
op|'('
name|'wildcards'
op|')'
newline|'\n'
name|'return'
name|'client_path'
newline|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# View methods'
nl|'\n'
comment|'#'
nl|'\n'
DECL|member|__init__
dedent|''
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mappings'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|append
dedent|''
name|'def'
name|'append'
op|'('
name|'self'
op|','
name|'view_line'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Parse a view line, splitting it into depot and client\n           sides.  Append to self.mappings, preserving order."""'
newline|'\n'
nl|'\n'
comment|'# Split the view line into exactly two words.  P4 enforces'
nl|'\n'
comment|'# structure on these lines that simplifies this quite a bit.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Either or both words may be double-quoted.'
nl|'\n'
comment|'# Single quotes do not matter.'
nl|'\n'
comment|'# Double-quote marks cannot occur inside the words.'
nl|'\n'
comment|'# A + or - prefix is also inside the quotes.'
nl|'\n'
comment|'# There are no quotes unless they contain a space.'
nl|'\n'
comment|'# The line is already white-space stripped.'
nl|'\n'
comment|'# The two words are separated by a single space.'
nl|'\n'
comment|'#'
nl|'\n'
name|'if'
name|'view_line'
op|'['
number|'0'
op|']'
op|'=='
string|'\'"\''
op|':'
newline|'\n'
comment|'# First word is double quoted.  Find its end.'
nl|'\n'
indent|'            '
name|'close_quote_index'
op|'='
name|'view_line'
op|'.'
name|'find'
op|'('
string|'\'"\''
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'close_quote_index'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|'"No first-word closing quote found: %s"'
op|'%'
name|'view_line'
op|')'
newline|'\n'
dedent|''
name|'depot_side'
op|'='
name|'view_line'
op|'['
number|'1'
op|':'
name|'close_quote_index'
op|']'
newline|'\n'
comment|'# skip closing quote and space'
nl|'\n'
name|'rhs_index'
op|'='
name|'close_quote_index'
op|'+'
number|'1'
op|'+'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'space_index'
op|'='
name|'view_line'
op|'.'
name|'find'
op|'('
string|'" "'
op|')'
newline|'\n'
name|'if'
name|'space_index'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|'"No word-splitting space found: %s"'
op|'%'
name|'view_line'
op|')'
newline|'\n'
dedent|''
name|'depot_side'
op|'='
name|'view_line'
op|'['
number|'0'
op|':'
name|'space_index'
op|']'
newline|'\n'
name|'rhs_index'
op|'='
name|'space_index'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'view_line'
op|'['
name|'rhs_index'
op|']'
op|'=='
string|'\'"\''
op|':'
newline|'\n'
comment|'# Second word is double quoted.  Make sure there is a'
nl|'\n'
comment|'# double quote at the end too.'
nl|'\n'
indent|'            '
name|'if'
name|'not'
name|'view_line'
op|'.'
name|'endswith'
op|'('
string|'\'"\''
op|')'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|'"View line with rhs quote should end with one: %s"'
op|'%'
nl|'\n'
name|'view_line'
op|')'
newline|'\n'
comment|'# skip the quotes'
nl|'\n'
dedent|''
name|'client_side'
op|'='
name|'view_line'
op|'['
name|'rhs_index'
op|'+'
number|'1'
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'client_side'
op|'='
name|'view_line'
op|'['
name|'rhs_index'
op|':'
op|']'
newline|'\n'
nl|'\n'
comment|'# prefix + means overlay on previous mapping'
nl|'\n'
dedent|''
name|'overlay'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'depot_side'
op|'.'
name|'startswith'
op|'('
string|'"+"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'overlay'
op|'='
name|'True'
newline|'\n'
name|'depot_side'
op|'='
name|'depot_side'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
nl|'\n'
comment|'# prefix - means exclude this path'
nl|'\n'
dedent|''
name|'exclude'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'depot_side'
op|'.'
name|'startswith'
op|'('
string|'"-"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'exclude'
op|'='
name|'True'
newline|'\n'
name|'depot_side'
op|'='
name|'depot_side'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'View'
op|'.'
name|'Mapping'
op|'('
name|'depot_side'
op|','
name|'client_side'
op|','
name|'overlay'
op|','
name|'exclude'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mappings'
op|'.'
name|'append'
op|'('
name|'m'
op|')'
newline|'\n'
nl|'\n'
DECL|member|map_in_client
dedent|''
name|'def'
name|'map_in_client'
op|'('
name|'self'
op|','
name|'depot_path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the relative location in the client where this\n           depot file should live.  Returns "" if the file should\n           not be mapped in the client."""'
newline|'\n'
nl|'\n'
name|'paths_filled'
op|'='
op|'['
op|']'
newline|'\n'
name|'client_path'
op|'='
string|'""'
newline|'\n'
nl|'\n'
comment|'# look at later entries first'
nl|'\n'
name|'for'
name|'m'
name|'in'
name|'self'
op|'.'
name|'mappings'
op|'['
op|':'
op|':'
op|'-'
number|'1'
op|']'
op|':'
newline|'\n'
nl|'\n'
comment|'# see where will this path end up in the client'
nl|'\n'
indent|'            '
name|'p'
op|'='
name|'m'
op|'.'
name|'map_depot_to_client'
op|'('
name|'depot_path'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'p'
op|'=='
string|'""'
op|':'
newline|'\n'
comment|'# Depot path does not belong in client.  Must remember'
nl|'\n'
comment|'# this, as previous items should not cause files to'
nl|'\n'
comment|'# exist in this path either.  Remember that the list is'
nl|'\n'
comment|'# being walked from the end, which has higher precedence.'
nl|'\n'
comment|'# Overlap mappings do not exclude previous mappings.'
nl|'\n'
indent|'                '
name|'if'
name|'not'
name|'m'
op|'.'
name|'overlay'
op|':'
newline|'\n'
indent|'                    '
name|'paths_filled'
op|'.'
name|'append'
op|'('
name|'m'
op|'.'
name|'client_side'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# This mapping matched; no need to search any further.'
nl|'\n'
comment|'# But, the mapping could be rejected if the client path'
nl|'\n'
comment|'# has already been claimed by an earlier mapping (i.e.'
nl|'\n'
comment|'# one later in the list, which we are walking backwards).'
nl|'\n'
indent|'                '
name|'already_mapped_in_client'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'paths_filled'
op|':'
newline|'\n'
comment|'# this is View.Path.match'
nl|'\n'
indent|'                    '
name|'if'
name|'f'
op|'.'
name|'match'
op|'('
name|'p'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'already_mapped_in_client'
op|'='
name|'True'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'already_mapped_in_client'
op|':'
newline|'\n'
comment|'# Include this file, unless it is from a line that'
nl|'\n'
comment|'# explicitly said to exclude it.'
nl|'\n'
indent|'                    '
name|'if'
name|'not'
name|'m'
op|'.'
name|'exclude'
op|':'
newline|'\n'
indent|'                        '
name|'client_path'
op|'='
name|'p'
newline|'\n'
nl|'\n'
comment|'# a match, even if rejected, always stops the search'
nl|'\n'
dedent|''
dedent|''
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'client_path'
newline|'\n'
nl|'\n'
DECL|class|P4Sync
dedent|''
dedent|''
name|'class'
name|'P4Sync'
op|'('
name|'Command'
op|','
name|'P4UserMap'
op|')'
op|':'
newline|'\n'
DECL|variable|delete_actions
indent|'    '
name|'delete_actions'
op|'='
op|'('
string|'"delete"'
op|','
string|'"move/delete"'
op|','
string|'"purge"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Command'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'P4UserMap'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'options'
op|'='
op|'['
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--branch"'
op|','
name|'dest'
op|'='
string|'"branch"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--detect-branches"'
op|','
name|'dest'
op|'='
string|'"detectBranches"'
op|','
name|'action'
op|'='
string|'"store_true"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--changesfile"'
op|','
name|'dest'
op|'='
string|'"changesFile"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--silent"'
op|','
name|'dest'
op|'='
string|'"silent"'
op|','
name|'action'
op|'='
string|'"store_true"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--detect-labels"'
op|','
name|'dest'
op|'='
string|'"detectLabels"'
op|','
name|'action'
op|'='
string|'"store_true"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--import-labels"'
op|','
name|'dest'
op|'='
string|'"importLabels"'
op|','
name|'action'
op|'='
string|'"store_true"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--import-local"'
op|','
name|'dest'
op|'='
string|'"importIntoRemotes"'
op|','
name|'action'
op|'='
string|'"store_false"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"Import into refs/heads/ , not refs/remotes"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--max-changes"'
op|','
name|'dest'
op|'='
string|'"maxChanges"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--keep-path"'
op|','
name|'dest'
op|'='
string|'"keepRepoPath"'
op|','
name|'action'
op|'='
string|"'store_true'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"Keep entire BRANCH/DIR/SUBDIR prefix during import"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--use-client-spec"'
op|','
name|'dest'
op|'='
string|'"useClientSpec"'
op|','
name|'action'
op|'='
string|"'store_true'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"Only sync files that are included in the Perforce Client Spec"'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
string|'"""Imports from Perforce into a git repository.\\n\n    example:\n    //depot/my/project/ -- to import the current head\n    //depot/my/project/@all -- to import everything\n    //depot/my/project/@1,6 -- to import only from revision 1 to 6\n\n    (a ... is not needed in the path p4 specification, it\'s added implicitly)"""'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'usage'
op|'+='
string|'" //depot/path[@revRange]"'
newline|'\n'
name|'self'
op|'.'
name|'silent'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'createdBranches'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'committedChanges'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'branch'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'detectBranches'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'detectLabels'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'importLabels'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'changesFile'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'syncWithOrigin'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'importIntoRemotes'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'maxChanges'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'isWindows'
op|'='
op|'('
name|'platform'
op|'.'
name|'system'
op|'('
op|')'
op|'=='
string|'"Windows"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'keepRepoPath'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'depotPaths'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'p4BranchesInGit'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'cloneExclude'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'useClientSpec'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'useClientSpec_from_options'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'clientSpecDirs'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'tempBranches'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'tempBranchLocation'
op|'='
string|'"git-p4-tmp"'
newline|'\n'
nl|'\n'
name|'if'
name|'gitConfig'
op|'('
string|'"git-p4.syncFromOrigin"'
op|')'
op|'=='
string|'"false"'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'syncWithOrigin'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# Force a checkpoint in fast-import and wait for it to finish'
nl|'\n'
DECL|member|checkpoint
dedent|''
dedent|''
name|'def'
name|'checkpoint'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"checkpoint\\n\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"progress checkpoint\\n\\n"'
op|')'
newline|'\n'
name|'out'
op|'='
name|'self'
op|'.'
name|'gitOutput'
op|'.'
name|'readline'
op|'('
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"checkpoint finished: "'
op|'+'
name|'out'
newline|'\n'
nl|'\n'
DECL|member|extractFilesFromCommit
dedent|''
dedent|''
name|'def'
name|'extractFilesFromCommit'
op|'('
name|'self'
op|','
name|'commit'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'cloneExclude'
op|'='
op|'['
name|'re'
op|'.'
name|'sub'
op|'('
string|'r"\\.\\.\\.$"'
op|','
string|'""'
op|','
name|'path'
op|')'
nl|'\n'
name|'for'
name|'path'
name|'in'
name|'self'
op|'.'
name|'cloneExclude'
op|']'
newline|'\n'
name|'files'
op|'='
op|'['
op|']'
newline|'\n'
name|'fnum'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'commit'
op|'.'
name|'has_key'
op|'('
string|'"depotFile%s"'
op|'%'
name|'fnum'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'commit'
op|'['
string|'"depotFile%s"'
op|'%'
name|'fnum'
op|']'
newline|'\n'
nl|'\n'
name|'if'
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'cloneExclude'
nl|'\n'
name|'if'
name|'p4PathStartsWith'
op|'('
name|'path'
op|','
name|'p'
op|')'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'found'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'found'
op|'='
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'depotPaths'
nl|'\n'
name|'if'
name|'p4PathStartsWith'
op|'('
name|'path'
op|','
name|'p'
op|')'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'found'
op|':'
newline|'\n'
indent|'                '
name|'fnum'
op|'='
name|'fnum'
op|'+'
number|'1'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'file'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'file'
op|'['
string|'"path"'
op|']'
op|'='
name|'path'
newline|'\n'
name|'file'
op|'['
string|'"rev"'
op|']'
op|'='
name|'commit'
op|'['
string|'"rev%s"'
op|'%'
name|'fnum'
op|']'
newline|'\n'
name|'file'
op|'['
string|'"action"'
op|']'
op|'='
name|'commit'
op|'['
string|'"action%s"'
op|'%'
name|'fnum'
op|']'
newline|'\n'
name|'file'
op|'['
string|'"type"'
op|']'
op|'='
name|'commit'
op|'['
string|'"type%s"'
op|'%'
name|'fnum'
op|']'
newline|'\n'
name|'files'
op|'.'
name|'append'
op|'('
name|'file'
op|')'
newline|'\n'
name|'fnum'
op|'='
name|'fnum'
op|'+'
number|'1'
newline|'\n'
dedent|''
name|'return'
name|'files'
newline|'\n'
nl|'\n'
DECL|member|stripRepoPath
dedent|''
name|'def'
name|'stripRepoPath'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'prefixes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'useClientSpec'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'clientSpecDirs'
op|'.'
name|'map_in_client'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'keepRepoPath'
op|':'
newline|'\n'
indent|'            '
name|'prefixes'
op|'='
op|'['
name|'re'
op|'.'
name|'sub'
op|'('
string|'"^(//[^/]+/).*"'
op|','
string|"r'\\1'"
op|','
name|'prefixes'
op|'['
number|'0'
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'p'
name|'in'
name|'prefixes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'p4PathStartsWith'
op|'('
name|'path'
op|','
name|'p'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'path'
op|'['
name|'len'
op|'('
name|'p'
op|')'
op|':'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'path'
newline|'\n'
nl|'\n'
DECL|member|splitFilesIntoBranches
dedent|''
name|'def'
name|'splitFilesIntoBranches'
op|'('
name|'self'
op|','
name|'commit'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'branches'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'fnum'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'commit'
op|'.'
name|'has_key'
op|'('
string|'"depotFile%s"'
op|'%'
name|'fnum'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'commit'
op|'['
string|'"depotFile%s"'
op|'%'
name|'fnum'
op|']'
newline|'\n'
name|'found'
op|'='
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'depotPaths'
nl|'\n'
name|'if'
name|'p4PathStartsWith'
op|'('
name|'path'
op|','
name|'p'
op|')'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'found'
op|':'
newline|'\n'
indent|'                '
name|'fnum'
op|'='
name|'fnum'
op|'+'
number|'1'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'file'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'file'
op|'['
string|'"path"'
op|']'
op|'='
name|'path'
newline|'\n'
name|'file'
op|'['
string|'"rev"'
op|']'
op|'='
name|'commit'
op|'['
string|'"rev%s"'
op|'%'
name|'fnum'
op|']'
newline|'\n'
name|'file'
op|'['
string|'"action"'
op|']'
op|'='
name|'commit'
op|'['
string|'"action%s"'
op|'%'
name|'fnum'
op|']'
newline|'\n'
name|'file'
op|'['
string|'"type"'
op|']'
op|'='
name|'commit'
op|'['
string|'"type%s"'
op|'%'
name|'fnum'
op|']'
newline|'\n'
name|'fnum'
op|'='
name|'fnum'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
name|'relPath'
op|'='
name|'self'
op|'.'
name|'stripRepoPath'
op|'('
name|'path'
op|','
name|'self'
op|'.'
name|'depotPaths'
op|')'
newline|'\n'
name|'relPath'
op|'='
name|'wildcard_decode'
op|'('
name|'relPath'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'branch'
name|'in'
name|'self'
op|'.'
name|'knownBranches'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|"# add a trailing slash so that a commit into qt/4.2foo doesn't end up in qt/4.2"
nl|'\n'
indent|'                '
name|'if'
name|'relPath'
op|'.'
name|'startswith'
op|'('
name|'branch'
op|'+'
string|'"/"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'branch'
name|'not'
name|'in'
name|'branches'
op|':'
newline|'\n'
indent|'                        '
name|'branches'
op|'['
name|'branch'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'branches'
op|'['
name|'branch'
op|']'
op|'.'
name|'append'
op|'('
name|'file'
op|')'
newline|'\n'
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'branches'
newline|'\n'
nl|'\n'
comment|'# output one file from the P4 stream'
nl|'\n'
comment|'# - helper for streamP4Files'
nl|'\n'
nl|'\n'
DECL|member|streamOneP4File
dedent|''
name|'def'
name|'streamOneP4File'
op|'('
name|'self'
op|','
name|'file'
op|','
name|'contents'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'relPath'
op|'='
name|'self'
op|'.'
name|'stripRepoPath'
op|'('
name|'file'
op|'['
string|"'depotFile'"
op|']'
op|','
name|'self'
op|'.'
name|'branchPrefixes'
op|')'
newline|'\n'
name|'relPath'
op|'='
name|'wildcard_decode'
op|'('
name|'relPath'
op|')'
newline|'\n'
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"%s\\n"'
op|'%'
name|'relPath'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'('
name|'type_base'
op|','
name|'type_mods'
op|')'
op|'='
name|'split_p4_type'
op|'('
name|'file'
op|'['
string|'"type"'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'git_mode'
op|'='
string|'"100644"'
newline|'\n'
name|'if'
string|'"x"'
name|'in'
name|'type_mods'
op|':'
newline|'\n'
indent|'            '
name|'git_mode'
op|'='
string|'"100755"'
newline|'\n'
dedent|''
name|'if'
name|'type_base'
op|'=='
string|'"symlink"'
op|':'
newline|'\n'
indent|'            '
name|'git_mode'
op|'='
string|'"120000"'
newline|'\n'
comment|'# p4 print on a symlink contains "target\\n"; remove the newline'
nl|'\n'
name|'data'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'contents'
op|')'
newline|'\n'
name|'contents'
op|'='
op|'['
name|'data'
op|'['
op|':'
op|'-'
number|'1'
op|']'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'type_base'
op|'=='
string|'"utf16"'
op|':'
newline|'\n'
comment|'# p4 delivers different text in the python output to -G'
nl|'\n'
comment|'# than it does when using "print -o", or normal p4 client'
nl|'\n'
comment|'# operations.  utf16 is converted to ascii or utf8, perhaps.'
nl|'\n'
comment|'# But ascii text saved as -t utf16 is completely mangled.'
nl|'\n'
comment|'# Invoke print -o to get the real contents.'
nl|'\n'
indent|'            '
name|'text'
op|'='
name|'p4_read_pipe'
op|'('
op|'['
string|"'print'"
op|','
string|"'-q'"
op|','
string|"'-o'"
op|','
string|"'-'"
op|','
name|'file'
op|'['
string|"'depotFile'"
op|']'
op|']'
op|')'
newline|'\n'
name|'contents'
op|'='
op|'['
name|'text'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'type_base'
op|'=='
string|'"apple"'
op|':'
newline|'\n'
comment|'# Apple filetype files will be streamed as a concatenation of'
nl|'\n'
comment|'# its appledouble header and the contents.  This is useless'
nl|'\n'
comment|'# on both macs and non-macs.  If using "print -q -o xx", it'
nl|'\n'
comment|'# will create "xx" with the data, and "%xx" with the header.'
nl|'\n'
comment|'# This is also not very useful.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Ideally, someday, this script can learn how to generate'
nl|'\n'
comment|'# appledouble files directly and import those to git, but'
nl|'\n'
comment|'# non-mac machines can never find a use for apple filetype.'
nl|'\n'
indent|'            '
name|'print'
string|'"\\nIgnoring apple filetype file %s"'
op|'%'
name|'file'
op|'['
string|"'depotFile'"
op|']'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
comment|'# Perhaps windows wants unicode, utf16 newlines translated too;'
nl|'\n'
comment|'# but this is not doing it.'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'isWindows'
name|'and'
name|'type_base'
op|'=='
string|'"text"'
op|':'
newline|'\n'
indent|'            '
name|'mangled'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'data'
name|'in'
name|'contents'
op|':'
newline|'\n'
indent|'                '
name|'data'
op|'='
name|'data'
op|'.'
name|'replace'
op|'('
string|'"\\r\\n"'
op|','
string|'"\\n"'
op|')'
newline|'\n'
name|'mangled'
op|'.'
name|'append'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
name|'contents'
op|'='
name|'mangled'
newline|'\n'
nl|'\n'
comment|'# Note that we do not try to de-mangle keywords on utf16 files,'
nl|'\n'
comment|'# even though in theory somebody may want that.'
nl|'\n'
dedent|''
name|'pattern'
op|'='
name|'p4_keywords_regexp_for_type'
op|'('
name|'type_base'
op|','
name|'type_mods'
op|')'
newline|'\n'
name|'if'
name|'pattern'
op|':'
newline|'\n'
indent|'            '
name|'regexp'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
name|'pattern'
op|','
name|'re'
op|'.'
name|'VERBOSE'
op|')'
newline|'\n'
name|'text'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'contents'
op|')'
newline|'\n'
name|'text'
op|'='
name|'regexp'
op|'.'
name|'sub'
op|'('
string|"r'$\\1$'"
op|','
name|'text'
op|')'
newline|'\n'
name|'contents'
op|'='
op|'['
name|'text'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"M %s inline %s\\n"'
op|'%'
op|'('
name|'git_mode'
op|','
name|'relPath'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# total length...'
nl|'\n'
name|'length'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'d'
name|'in'
name|'contents'
op|':'
newline|'\n'
indent|'            '
name|'length'
op|'='
name|'length'
op|'+'
name|'len'
op|'('
name|'d'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"data %d\\n"'
op|'%'
name|'length'
op|')'
newline|'\n'
name|'for'
name|'d'
name|'in'
name|'contents'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
name|'d'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"\\n"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|streamOneP4Deletion
dedent|''
name|'def'
name|'streamOneP4Deletion'
op|'('
name|'self'
op|','
name|'file'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'relPath'
op|'='
name|'self'
op|'.'
name|'stripRepoPath'
op|'('
name|'file'
op|'['
string|"'path'"
op|']'
op|','
name|'self'
op|'.'
name|'branchPrefixes'
op|')'
newline|'\n'
name|'relPath'
op|'='
name|'wildcard_decode'
op|'('
name|'relPath'
op|')'
newline|'\n'
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"delete %s\\n"'
op|'%'
name|'relPath'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"D %s\\n"'
op|'%'
name|'relPath'
op|')'
newline|'\n'
nl|'\n'
comment|'# handle another chunk of streaming data'
nl|'\n'
DECL|member|streamP4FilesCb
dedent|''
name|'def'
name|'streamP4FilesCb'
op|'('
name|'self'
op|','
name|'marshalled'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'if'
name|'marshalled'
op|'.'
name|'has_key'
op|'('
string|"'depotFile'"
op|')'
name|'and'
name|'self'
op|'.'
name|'stream_have_file_info'
op|':'
newline|'\n'
comment|'# start of a new file - output the old one first'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'streamOneP4File'
op|'('
name|'self'
op|'.'
name|'stream_file'
op|','
name|'self'
op|'.'
name|'stream_contents'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stream_file'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'stream_contents'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'stream_have_file_info'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# pick up the new file information... for the'
nl|'\n'
comment|"# 'data' field we need to append to our array"
nl|'\n'
dedent|''
name|'for'
name|'k'
name|'in'
name|'marshalled'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'k'
op|'=='
string|"'data'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'stream_contents'
op|'.'
name|'append'
op|'('
name|'marshalled'
op|'['
string|"'data'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'stream_file'
op|'['
name|'k'
op|']'
op|'='
name|'marshalled'
op|'['
name|'k'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stream_have_file_info'
op|'='
name|'True'
newline|'\n'
nl|'\n'
comment|'# Stream directly from "p4 files" into "git fast-import"'
nl|'\n'
DECL|member|streamP4Files
dedent|''
name|'def'
name|'streamP4Files'
op|'('
name|'self'
op|','
name|'files'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filesForCommit'
op|'='
op|'['
op|']'
newline|'\n'
name|'filesToRead'
op|'='
op|'['
op|']'
newline|'\n'
name|'filesToDelete'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'f'
name|'in'
name|'files'
op|':'
newline|'\n'
comment|'# if using a client spec, only add the files that have'
nl|'\n'
comment|'# a path in the client'
nl|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'clientSpecDirs'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'clientSpecDirs'
op|'.'
name|'map_in_client'
op|'('
name|'f'
op|'['
string|"'path'"
op|']'
op|')'
op|'=='
string|'""'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'filesForCommit'
op|'.'
name|'append'
op|'('
name|'f'
op|')'
newline|'\n'
name|'if'
name|'f'
op|'['
string|"'action'"
op|']'
name|'in'
name|'self'
op|'.'
name|'delete_actions'
op|':'
newline|'\n'
indent|'                '
name|'filesToDelete'
op|'.'
name|'append'
op|'('
name|'f'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'filesToRead'
op|'.'
name|'append'
op|'('
name|'f'
op|')'
newline|'\n'
nl|'\n'
comment|'# deleted files...'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'f'
name|'in'
name|'filesToDelete'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'streamOneP4Deletion'
op|'('
name|'f'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'filesToRead'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stream_file'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'stream_contents'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'stream_have_file_info'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# curry self argument'
nl|'\n'
DECL|function|streamP4FilesCbSelf
name|'def'
name|'streamP4FilesCbSelf'
op|'('
name|'entry'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'streamP4FilesCb'
op|'('
name|'entry'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fileArgs'
op|'='
op|'['
string|"'%s#%s'"
op|'%'
op|'('
name|'f'
op|'['
string|"'path'"
op|']'
op|','
name|'f'
op|'['
string|"'rev'"
op|']'
op|')'
name|'for'
name|'f'
name|'in'
name|'filesToRead'
op|']'
newline|'\n'
nl|'\n'
name|'p4CmdList'
op|'('
op|'['
string|'"-x"'
op|','
string|'"-"'
op|','
string|'"print"'
op|']'
op|','
nl|'\n'
name|'stdin'
op|'='
name|'fileArgs'
op|','
nl|'\n'
name|'cb'
op|'='
name|'streamP4FilesCbSelf'
op|')'
newline|'\n'
nl|'\n'
comment|'# do the last chunk'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'stream_file'
op|'.'
name|'has_key'
op|'('
string|"'depotFile'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'streamOneP4File'
op|'('
name|'self'
op|'.'
name|'stream_file'
op|','
name|'self'
op|'.'
name|'stream_contents'
op|')'
newline|'\n'
nl|'\n'
DECL|member|make_email
dedent|''
dedent|''
dedent|''
name|'def'
name|'make_email'
op|'('
name|'self'
op|','
name|'userid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'userid'
name|'in'
name|'self'
op|'.'
name|'users'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'users'
op|'['
name|'userid'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"%s <a@b>"'
op|'%'
name|'userid'
newline|'\n'
nl|'\n'
comment|'# Stream a p4 tag'
nl|'\n'
DECL|member|streamTag
dedent|''
dedent|''
name|'def'
name|'streamTag'
op|'('
name|'self'
op|','
name|'gitStream'
op|','
name|'labelName'
op|','
name|'labelDetails'
op|','
name|'commit'
op|','
name|'epoch'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"writing tag %s for commit %s"'
op|'%'
op|'('
name|'labelName'
op|','
name|'commit'
op|')'
newline|'\n'
dedent|''
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"tag %s\\n"'
op|'%'
name|'labelName'
op|')'
newline|'\n'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"from %s\\n"'
op|'%'
name|'commit'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'labelDetails'
op|'.'
name|'has_key'
op|'('
string|"'Owner'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'owner'
op|'='
name|'labelDetails'
op|'['
string|'"Owner"'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'owner'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# Try to use the owner of the p4 label, or failing that,'
nl|'\n'
comment|'# the current p4 user id.'
nl|'\n'
dedent|''
name|'if'
name|'owner'
op|':'
newline|'\n'
indent|'            '
name|'email'
op|'='
name|'self'
op|'.'
name|'make_email'
op|'('
name|'owner'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'email'
op|'='
name|'self'
op|'.'
name|'make_email'
op|'('
name|'self'
op|'.'
name|'p4UserId'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'tagger'
op|'='
string|'"%s %s %s"'
op|'%'
op|'('
name|'email'
op|','
name|'epoch'
op|','
name|'self'
op|'.'
name|'tz'
op|')'
newline|'\n'
nl|'\n'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"tagger %s\\n"'
op|'%'
name|'tagger'
op|')'
newline|'\n'
nl|'\n'
name|'print'
string|'"labelDetails="'
op|','
name|'labelDetails'
newline|'\n'
name|'if'
name|'labelDetails'
op|'.'
name|'has_key'
op|'('
string|"'Description'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'description'
op|'='
name|'labelDetails'
op|'['
string|"'Description'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'description'
op|'='
string|"'Label from git p4'"
newline|'\n'
nl|'\n'
dedent|''
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"data %d\\n"'
op|'%'
name|'len'
op|'('
name|'description'
op|')'
op|')'
newline|'\n'
name|'gitStream'
op|'.'
name|'write'
op|'('
name|'description'
op|')'
newline|'\n'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"\\n"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|commit
dedent|''
name|'def'
name|'commit'
op|'('
name|'self'
op|','
name|'details'
op|','
name|'files'
op|','
name|'branch'
op|','
name|'branchPrefixes'
op|','
name|'parent'
op|'='
string|'""'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'epoch'
op|'='
name|'details'
op|'['
string|'"time"'
op|']'
newline|'\n'
name|'author'
op|'='
name|'details'
op|'['
string|'"user"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'branchPrefixes'
op|'='
name|'branchPrefixes'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"commit into %s"'
op|'%'
name|'branch'
newline|'\n'
nl|'\n'
comment|'# start with reading files; if that fails, we should not'
nl|'\n'
comment|'# create a commit.'
nl|'\n'
dedent|''
name|'new_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'branchPrefixes'
name|'if'
name|'p4PathStartsWith'
op|'('
name|'f'
op|'['
string|"'path'"
op|']'
op|','
name|'p'
op|')'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'new_files'
op|'.'
name|'append'
op|'('
name|'f'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"Ignoring file outside of prefix: %s\\n"'
op|'%'
name|'f'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"commit %s\\n"'
op|'%'
name|'branch'
op|')'
newline|'\n'
comment|'#        gitStream.write("mark :%s\\n" % details["change"])'
nl|'\n'
name|'self'
op|'.'
name|'committedChanges'
op|'.'
name|'add'
op|'('
name|'int'
op|'('
name|'details'
op|'['
string|'"change"'
op|']'
op|')'
op|')'
newline|'\n'
name|'committer'
op|'='
string|'""'
newline|'\n'
name|'if'
name|'author'
name|'not'
name|'in'
name|'self'
op|'.'
name|'users'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'getUserMapFromPerforceServer'
op|'('
op|')'
newline|'\n'
dedent|''
name|'committer'
op|'='
string|'"%s %s %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'make_email'
op|'('
name|'author'
op|')'
op|','
name|'epoch'
op|','
name|'self'
op|'.'
name|'tz'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"committer %s\\n"'
op|'%'
name|'committer'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"data <<EOT\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
name|'details'
op|'['
string|'"desc"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"\\n[git-p4: depot-paths = \\"%s\\": change = %s"'
nl|'\n'
op|'%'
op|'('
string|"','"
op|'.'
name|'join'
op|'('
name|'branchPrefixes'
op|')'
op|','
name|'details'
op|'['
string|'"change"'
op|']'
op|')'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'details'
op|'['
string|"'options'"
op|']'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'": options = %s"'
op|'%'
name|'details'
op|'['
string|"'options'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"]\\nEOT\\n\\n"'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'parent'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"parent %s"'
op|'%'
name|'parent'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"from %s\\n"'
op|'%'
name|'parent'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'streamP4Files'
op|'('
name|'new_files'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"\\n"'
op|')'
newline|'\n'
nl|'\n'
name|'change'
op|'='
name|'int'
op|'('
name|'details'
op|'['
string|'"change"'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'labels'
op|'.'
name|'has_key'
op|'('
name|'change'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'label'
op|'='
name|'self'
op|'.'
name|'labels'
op|'['
name|'change'
op|']'
newline|'\n'
name|'labelDetails'
op|'='
name|'label'
op|'['
number|'0'
op|']'
newline|'\n'
name|'labelRevisions'
op|'='
name|'label'
op|'['
number|'1'
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"Change %s is labelled %s"'
op|'%'
op|'('
name|'change'
op|','
name|'labelDetails'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'files'
op|'='
name|'p4CmdList'
op|'('
op|'['
string|'"files"'
op|']'
op|'+'
op|'['
string|'"%s...@%s"'
op|'%'
op|'('
name|'p'
op|','
name|'change'
op|')'
nl|'\n'
name|'for'
name|'p'
name|'in'
name|'branchPrefixes'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'files'
op|')'
op|'=='
name|'len'
op|'('
name|'labelRevisions'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'                '
name|'cleanedFiles'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'info'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'info'
op|'['
string|'"action"'
op|']'
name|'in'
name|'self'
op|'.'
name|'delete_actions'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
dedent|''
name|'cleanedFiles'
op|'['
name|'info'
op|'['
string|'"depotFile"'
op|']'
op|']'
op|'='
name|'info'
op|'['
string|'"rev"'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'cleanedFiles'
op|'=='
name|'labelRevisions'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'streamTag'
op|'('
name|'self'
op|'.'
name|'gitStream'
op|','
string|"'tag_%s'"
op|'%'
name|'labelDetails'
op|'['
string|"'label'"
op|']'
op|','
name|'labelDetails'
op|','
name|'branch'
op|','
name|'epoch'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'                        '
name|'print'
op|'('
string|'"Tag %s does not match with change %s: files do not match."'
nl|'\n'
op|'%'
op|'('
name|'labelDetails'
op|'['
string|'"label"'
op|']'
op|','
name|'change'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'                    '
name|'print'
op|'('
string|'"Tag %s does not match with change %s: file count is different."'
nl|'\n'
op|'%'
op|'('
name|'labelDetails'
op|'['
string|'"label"'
op|']'
op|','
name|'change'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Build a dictionary of changelists and labels, for "detect-labels" option.'
nl|'\n'
DECL|member|getLabels
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'getLabels'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'labels'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'l'
op|'='
name|'p4CmdList'
op|'('
op|'['
string|'"labels"'
op|']'
op|'+'
op|'['
string|'"%s..."'
op|'%'
name|'p'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'depotPaths'
op|']'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'l'
op|')'
op|'>'
number|'0'
name|'and'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"Finding files belonging to labels in %s"'
op|'%'
op|'`'
name|'self'
op|'.'
name|'depotPaths'
op|'`'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'output'
name|'in'
name|'l'
op|':'
newline|'\n'
indent|'            '
name|'label'
op|'='
name|'output'
op|'['
string|'"label"'
op|']'
newline|'\n'
name|'revisions'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'newestChange'
op|'='
number|'0'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"Querying files for label %s"'
op|'%'
name|'label'
newline|'\n'
dedent|''
name|'for'
name|'file'
name|'in'
name|'p4CmdList'
op|'('
op|'['
string|'"files"'
op|']'
op|'+'
nl|'\n'
op|'['
string|'"%s...@%s"'
op|'%'
op|'('
name|'p'
op|','
name|'label'
op|')'
nl|'\n'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'depotPaths'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'revisions'
op|'['
name|'file'
op|'['
string|'"depotFile"'
op|']'
op|']'
op|'='
name|'file'
op|'['
string|'"rev"'
op|']'
newline|'\n'
name|'change'
op|'='
name|'int'
op|'('
name|'file'
op|'['
string|'"change"'
op|']'
op|')'
newline|'\n'
name|'if'
name|'change'
op|'>'
name|'newestChange'
op|':'
newline|'\n'
indent|'                    '
name|'newestChange'
op|'='
name|'change'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'labels'
op|'['
name|'newestChange'
op|']'
op|'='
op|'['
name|'output'
op|','
name|'revisions'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"Label changes: %s"'
op|'%'
name|'self'
op|'.'
name|'labels'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Import p4 labels as git tags. A direct mapping does not'
nl|'\n'
comment|'# exist, so assume that if all the files are at the same revision'
nl|'\n'
comment|"# then we can use that, or it's something more complicated we should"
nl|'\n'
comment|'# just ignore.'
nl|'\n'
DECL|member|importP4Labels
dedent|''
dedent|''
name|'def'
name|'importP4Labels'
op|'('
name|'self'
op|','
name|'stream'
op|','
name|'p4Labels'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"import p4 labels: "'
op|'+'
string|"' '"
op|'.'
name|'join'
op|'('
name|'p4Labels'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ignoredP4Labels'
op|'='
name|'gitConfigList'
op|'('
string|'"git-p4.ignoredP4Labels"'
op|')'
newline|'\n'
name|'validLabelRegexp'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.labelImportRegexp"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'validLabelRegexp'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'validLabelRegexp'
op|'='
name|'defaultLabelRegexp'
newline|'\n'
dedent|''
name|'m'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
name|'validLabelRegexp'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
name|'in'
name|'p4Labels'
op|':'
newline|'\n'
indent|'            '
name|'commitFound'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'m'
op|'.'
name|'match'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"label %s does not match regexp %s"'
op|'%'
op|'('
name|'name'
op|','
name|'validLabelRegexp'
op|')'
newline|'\n'
dedent|''
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'name'
name|'in'
name|'ignoredP4Labels'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'labelDetails'
op|'='
name|'p4CmdList'
op|'('
op|'['
string|"'label'"
op|','
string|'"-o"'
op|','
name|'name'
op|']'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
comment|'# get the most recent changelist for each file in this label'
nl|'\n'
name|'change'
op|'='
name|'p4Cmd'
op|'('
op|'['
string|'"changes"'
op|','
string|'"-m"'
op|','
string|'"1"'
op|']'
op|'+'
op|'['
string|'"%s...@%s"'
op|'%'
op|'('
name|'p'
op|','
name|'name'
op|')'
nl|'\n'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'depotPaths'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'change'
op|'.'
name|'has_key'
op|'('
string|"'change'"
op|')'
op|':'
newline|'\n'
comment|'# find the corresponding git commit; take the oldest commit'
nl|'\n'
indent|'                '
name|'changelist'
op|'='
name|'int'
op|'('
name|'change'
op|'['
string|"'change'"
op|']'
op|')'
newline|'\n'
name|'gitCommit'
op|'='
name|'read_pipe'
op|'('
op|'['
string|'"git"'
op|','
string|'"rev-list"'
op|','
string|'"--max-count=1"'
op|','
nl|'\n'
string|'"--reverse"'
op|','
string|'":/\\[git-p4:.*change = %d\\]"'
op|'%'
name|'changelist'
op|']'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'gitCommit'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"could not find git commit for changelist %d"'
op|'%'
name|'changelist'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'gitCommit'
op|'='
name|'gitCommit'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'commitFound'
op|'='
name|'True'
newline|'\n'
comment|'# Convert from p4 time format'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'tmwhen'
op|'='
name|'time'
op|'.'
name|'strptime'
op|'('
name|'labelDetails'
op|'['
string|"'Update'"
op|']'
op|','
string|'"%Y/%m/%d %H:%M:%S"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                        '
name|'print'
string|'"Could not convert label time %s"'
op|'%'
name|'labelDetail'
op|'['
string|"'Update'"
op|']'
newline|'\n'
name|'tmwhen'
op|'='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'when'
op|'='
name|'int'
op|'('
name|'time'
op|'.'
name|'mktime'
op|'('
name|'tmwhen'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'streamTag'
op|'('
name|'stream'
op|','
name|'name'
op|','
name|'labelDetails'
op|','
name|'gitCommit'
op|','
name|'when'
op|')'
newline|'\n'
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'                        '
name|'print'
string|'"p4 label %s mapped to git commit %s"'
op|'%'
op|'('
name|'name'
op|','
name|'gitCommit'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'verbose'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"Label %s has no changelists - possibly deleted?"'
op|'%'
name|'name'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'commitFound'
op|':'
newline|'\n'
comment|"# We can't import this label; don't try again as it will get very"
nl|'\n'
comment|'# expensive repeatedly fetching all the files for labels that will'
nl|'\n'
comment|'# never be imported. If the label is moved in the future, the'
nl|'\n'
comment|'# ignore will need to be removed manually.'
nl|'\n'
indent|'                '
name|'system'
op|'('
op|'['
string|'"git"'
op|','
string|'"config"'
op|','
string|'"--add"'
op|','
string|'"git-p4.ignoredP4Labels"'
op|','
name|'name'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|guessProjectName
dedent|''
dedent|''
dedent|''
name|'def'
name|'guessProjectName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'depotPaths'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'p'
op|'.'
name|'endswith'
op|'('
string|'"/"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'p'
op|'='
name|'p'
op|'['
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
name|'p'
op|'='
name|'p'
op|'['
name|'p'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'rfind'
op|'('
string|'"/"'
op|')'
op|'+'
number|'1'
op|':'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'p'
op|'.'
name|'endswith'
op|'('
string|'"/"'
op|')'
op|':'
newline|'\n'
indent|'               '
name|'p'
op|'+='
string|'"/"'
newline|'\n'
dedent|''
name|'return'
name|'p'
newline|'\n'
nl|'\n'
DECL|member|getBranchMapping
dedent|''
dedent|''
name|'def'
name|'getBranchMapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lostAndFoundBranches'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'user'
op|'='
name|'gitConfig'
op|'('
string|'"git-p4.branchUser"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'user'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'command'
op|'='
string|'"branches -u %s"'
op|'%'
name|'user'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'command'
op|'='
string|'"branches"'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'info'
name|'in'
name|'p4CmdList'
op|'('
name|'command'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'details'
op|'='
name|'p4Cmd'
op|'('
op|'['
string|'"branch"'
op|','
string|'"-o"'
op|','
name|'info'
op|'['
string|'"branch"'
op|']'
op|']'
op|')'
newline|'\n'
name|'viewIdx'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'details'
op|'.'
name|'has_key'
op|'('
string|'"View%s"'
op|'%'
name|'viewIdx'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'paths'
op|'='
name|'details'
op|'['
string|'"View%s"'
op|'%'
name|'viewIdx'
op|']'
op|'.'
name|'split'
op|'('
string|'" "'
op|')'
newline|'\n'
name|'viewIdx'
op|'='
name|'viewIdx'
op|'+'
number|'1'
newline|'\n'
comment|'# require standard //depot/foo/... //depot/bar/... mapping'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'paths'
op|')'
op|'!='
number|'2'
name|'or'
name|'not'
name|'paths'
op|'['
number|'0'
op|']'
op|'.'
name|'endswith'
op|'('
string|'"/..."'
op|')'
name|'or'
name|'not'
name|'paths'
op|'['
number|'1'
op|']'
op|'.'
name|'endswith'
op|'('
string|'"/..."'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'source'
op|'='
name|'paths'
op|'['
number|'0'
op|']'
newline|'\n'
name|'destination'
op|'='
name|'paths'
op|'['
number|'1'
op|']'
newline|'\n'
comment|'## HACK'
nl|'\n'
name|'if'
name|'p4PathStartsWith'
op|'('
name|'source'
op|','
name|'self'
op|'.'
name|'depotPaths'
op|'['
number|'0'
op|']'
op|')'
name|'and'
name|'p4PathStartsWith'
op|'('
name|'destination'
op|','
name|'self'
op|'.'
name|'depotPaths'
op|'['
number|'0'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'source'
op|'='
name|'source'
op|'['
name|'len'
op|'('
name|'self'
op|'.'
name|'depotPaths'
op|'['
number|'0'
op|']'
op|')'
op|':'
op|'-'
number|'4'
op|']'
newline|'\n'
name|'destination'
op|'='
name|'destination'
op|'['
name|'len'
op|'('
name|'self'
op|'.'
name|'depotPaths'
op|'['
number|'0'
op|']'
op|')'
op|':'
op|'-'
number|'4'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'destination'
name|'in'
name|'self'
op|'.'
name|'knownBranches'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'                            '
name|'print'
string|'"p4 branch %s defines a mapping from %s to %s"'
op|'%'
op|'('
name|'info'
op|'['
string|'"branch"'
op|']'
op|','
name|'source'
op|','
name|'destination'
op|')'
newline|'\n'
name|'print'
string|'"but there exists another mapping from %s to %s already!"'
op|'%'
op|'('
name|'self'
op|'.'
name|'knownBranches'
op|'['
name|'destination'
op|']'
op|','
name|'destination'
op|')'
newline|'\n'
dedent|''
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'knownBranches'
op|'['
name|'destination'
op|']'
op|'='
name|'source'
newline|'\n'
nl|'\n'
name|'lostAndFoundBranches'
op|'.'
name|'discard'
op|'('
name|'destination'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'source'
name|'not'
name|'in'
name|'self'
op|'.'
name|'knownBranches'
op|':'
newline|'\n'
indent|'                        '
name|'lostAndFoundBranches'
op|'.'
name|'add'
op|'('
name|'source'
op|')'
newline|'\n'
nl|'\n'
comment|'# Perforce does not strictly require branches to be defined, so we also'
nl|'\n'
comment|'# check git config for a branch list.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Example of branch definition in git config file:'
nl|'\n'
comment|'# [git-p4]'
nl|'\n'
comment|'#   branchList=main:branchA'
nl|'\n'
comment|'#   branchList=main:branchB'
nl|'\n'
comment|'#   branchList=branchA:branchC'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'configBranches'
op|'='
name|'gitConfigList'
op|'('
string|'"git-p4.branchList"'
op|')'
newline|'\n'
name|'for'
name|'branch'
name|'in'
name|'configBranches'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'branch'
op|':'
newline|'\n'
indent|'                '
op|'('
name|'source'
op|','
name|'destination'
op|')'
op|'='
name|'branch'
op|'.'
name|'split'
op|'('
string|'":"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'knownBranches'
op|'['
name|'destination'
op|']'
op|'='
name|'source'
newline|'\n'
nl|'\n'
name|'lostAndFoundBranches'
op|'.'
name|'discard'
op|'('
name|'destination'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'source'
name|'not'
name|'in'
name|'self'
op|'.'
name|'knownBranches'
op|':'
newline|'\n'
indent|'                    '
name|'lostAndFoundBranches'
op|'.'
name|'add'
op|'('
name|'source'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'for'
name|'branch'
name|'in'
name|'lostAndFoundBranches'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'knownBranches'
op|'['
name|'branch'
op|']'
op|'='
name|'branch'
newline|'\n'
nl|'\n'
DECL|member|getBranchMappingFromGitBranches
dedent|''
dedent|''
name|'def'
name|'getBranchMappingFromGitBranches'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'branches'
op|'='
name|'p4BranchesInGit'
op|'('
name|'self'
op|'.'
name|'importIntoRemotes'
op|')'
newline|'\n'
name|'for'
name|'branch'
name|'in'
name|'branches'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'branch'
op|'=='
string|'"master"'
op|':'
newline|'\n'
indent|'                '
name|'branch'
op|'='
string|'"main"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'branch'
op|'='
name|'branch'
op|'['
name|'len'
op|'('
name|'self'
op|'.'
name|'projectName'
op|')'
op|':'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'knownBranches'
op|'['
name|'branch'
op|']'
op|'='
name|'branch'
newline|'\n'
nl|'\n'
DECL|member|listExistingP4GitBranches
dedent|''
dedent|''
name|'def'
name|'listExistingP4GitBranches'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# branches holds mapping from name to commit'
nl|'\n'
indent|'        '
name|'branches'
op|'='
name|'p4BranchesInGit'
op|'('
name|'self'
op|'.'
name|'importIntoRemotes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'p4BranchesInGit'
op|'='
name|'branches'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'for'
name|'branch'
name|'in'
name|'branches'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'initialParents'
op|'['
name|'self'
op|'.'
name|'refPrefix'
op|'+'
name|'branch'
op|']'
op|'='
name|'branches'
op|'['
name|'branch'
op|']'
newline|'\n'
nl|'\n'
DECL|member|updateOptionDict
dedent|''
dedent|''
name|'def'
name|'updateOptionDict'
op|'('
name|'self'
op|','
name|'d'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'option_keys'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'keepRepoPath'
op|':'
newline|'\n'
indent|'            '
name|'option_keys'
op|'['
string|"'keepRepoPath'"
op|']'
op|'='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'['
string|'"options"'
op|']'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
name|'sorted'
op|'('
name|'option_keys'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|readOptions
dedent|''
name|'def'
name|'readOptions'
op|'('
name|'self'
op|','
name|'d'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'keepRepoPath'
op|'='
op|'('
name|'d'
op|'.'
name|'has_key'
op|'('
string|"'options'"
op|')'
nl|'\n'
name|'and'
op|'('
string|"'keepRepoPath'"
name|'in'
name|'d'
op|'['
string|"'options'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|gitRefForBranch
dedent|''
name|'def'
name|'gitRefForBranch'
op|'('
name|'self'
op|','
name|'branch'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'branch'
op|'=='
string|'"main"'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'refPrefix'
op|'+'
string|'"master"'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'branch'
op|')'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'branch'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'refPrefix'
op|'+'
name|'self'
op|'.'
name|'projectName'
op|'+'
name|'branch'
newline|'\n'
nl|'\n'
DECL|member|gitCommitByP4Change
dedent|''
name|'def'
name|'gitCommitByP4Change'
op|'('
name|'self'
op|','
name|'ref'
op|','
name|'change'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"looking in ref "'
op|'+'
name|'ref'
op|'+'
string|'" for change %s using bisect..."'
op|'%'
name|'change'
newline|'\n'
nl|'\n'
dedent|''
name|'earliestCommit'
op|'='
string|'""'
newline|'\n'
name|'latestCommit'
op|'='
name|'parseRevision'
op|'('
name|'ref'
op|')'
newline|'\n'
nl|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"trying: earliest %s latest %s"'
op|'%'
op|'('
name|'earliestCommit'
op|','
name|'latestCommit'
op|')'
newline|'\n'
dedent|''
name|'next'
op|'='
name|'read_pipe'
op|'('
string|'"git rev-list --bisect %s %s"'
op|'%'
op|'('
name|'latestCommit'
op|','
name|'earliestCommit'
op|')'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'next'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"argh"'
newline|'\n'
dedent|''
name|'return'
string|'""'
newline|'\n'
dedent|''
name|'log'
op|'='
name|'extractLogMessageFromGitCommit'
op|'('
name|'next'
op|')'
newline|'\n'
name|'settings'
op|'='
name|'extractSettingsGitLog'
op|'('
name|'log'
op|')'
newline|'\n'
name|'currentChange'
op|'='
name|'int'
op|'('
name|'settings'
op|'['
string|"'change'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"current change %s"'
op|'%'
name|'currentChange'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'currentChange'
op|'=='
name|'change'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"found %s"'
op|'%'
name|'next'
newline|'\n'
dedent|''
name|'return'
name|'next'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'currentChange'
op|'<'
name|'change'
op|':'
newline|'\n'
indent|'                '
name|'earliestCommit'
op|'='
string|'"^%s"'
op|'%'
name|'next'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'latestCommit'
op|'='
string|'"%s"'
op|'%'
name|'next'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
string|'""'
newline|'\n'
nl|'\n'
DECL|member|importNewBranch
dedent|''
name|'def'
name|'importNewBranch'
op|'('
name|'self'
op|','
name|'branch'
op|','
name|'maxChange'
op|')'
op|':'
newline|'\n'
comment|'# make fast-import flush all changes to disk and update the refs using the checkpoint'
nl|'\n'
comment|'# command so that we can try to find the branch parent in the git history'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'write'
op|'('
string|'"checkpoint\\n\\n"'
op|')'
op|';'
newline|'\n'
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'flush'
op|'('
op|')'
op|';'
newline|'\n'
name|'branchPrefix'
op|'='
name|'self'
op|'.'
name|'depotPaths'
op|'['
number|'0'
op|']'
op|'+'
name|'branch'
op|'+'
string|'"/"'
newline|'\n'
name|'range'
op|'='
string|'"@1,%s"'
op|'%'
name|'maxChange'
newline|'\n'
comment|'#print "prefix" + branchPrefix'
nl|'\n'
name|'changes'
op|'='
name|'p4ChangesForPaths'
op|'('
op|'['
name|'branchPrefix'
op|']'
op|','
name|'range'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'changes'
op|')'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'firstChange'
op|'='
name|'changes'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'#print "first change in branch: %s" % firstChange'
nl|'\n'
name|'sourceBranch'
op|'='
name|'self'
op|'.'
name|'knownBranches'
op|'['
name|'branch'
op|']'
newline|'\n'
name|'sourceDepotPath'
op|'='
name|'self'
op|'.'
name|'depotPaths'
op|'['
number|'0'
op|']'
op|'+'
name|'sourceBranch'
newline|'\n'
name|'sourceRef'
op|'='
name|'self'
op|'.'
name|'gitRefForBranch'
op|'('
name|'sourceBranch'
op|')'
newline|'\n'
comment|'#print "source " + sourceBranch'
nl|'\n'
nl|'\n'
name|'branchParentChange'
op|'='
name|'int'
op|'('
name|'p4Cmd'
op|'('
op|'['
string|'"changes"'
op|','
string|'"-m"'
op|','
string|'"1"'
op|','
string|'"%s...@1,%s"'
op|'%'
op|'('
name|'sourceDepotPath'
op|','
name|'firstChange'
op|')'
op|']'
op|')'
op|'['
string|'"change"'
op|']'
op|')'
newline|'\n'
comment|'#print "branch parent: %s" % branchParentChange'
nl|'\n'
name|'gitParent'
op|'='
name|'self'
op|'.'
name|'gitCommitByP4Change'
op|'('
name|'sourceRef'
op|','
name|'branchParentChange'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'gitParent'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'initialParents'
op|'['
name|'self'
op|'.'
name|'gitRefForBranch'
op|'('
name|'branch'
op|')'
op|']'
op|'='
name|'gitParent'
newline|'\n'
comment|'#print "parent git commit: %s" % gitParent'
nl|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'importChanges'
op|'('
name|'changes'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|searchParent
dedent|''
name|'def'
name|'searchParent'
op|'('
name|'self'
op|','
name|'parent'
op|','
name|'branch'
op|','
name|'target'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'parentFound'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'blob'
name|'in'
name|'read_pipe_lines'
op|'('
op|'['
string|'"git"'
op|','
string|'"rev-list"'
op|','
string|'"--reverse"'
op|','
string|'"--no-merges"'
op|','
name|'parent'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'blob'
op|'='
name|'blob'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'read_pipe'
op|'('
op|'['
string|'"git"'
op|','
string|'"diff-tree"'
op|','
name|'blob'
op|','
name|'target'
op|']'
op|')'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'parentFound'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"Found parent of %s in commit %s"'
op|'%'
op|'('
name|'branch'
op|','
name|'blob'
op|')'
newline|'\n'
dedent|''
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'parentFound'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'blob'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|importChanges
dedent|''
dedent|''
name|'def'
name|'importChanges'
op|'('
name|'self'
op|','
name|'changes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cnt'
op|'='
number|'1'
newline|'\n'
name|'for'
name|'change'
name|'in'
name|'changes'
op|':'
newline|'\n'
indent|'            '
name|'description'
op|'='
name|'p4Cmd'
op|'('
op|'['
string|'"describe"'
op|','
name|'str'
op|'('
name|'change'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'updateOptionDict'
op|'('
name|'description'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'write'
op|'('
string|'"\\rImporting revision %s (%s%%)"'
op|'%'
op|'('
name|'change'
op|','
name|'cnt'
op|'*'
number|'100'
op|'/'
name|'len'
op|'('
name|'changes'
op|')'
op|')'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
dedent|''
name|'cnt'
op|'='
name|'cnt'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'detectBranches'
op|':'
newline|'\n'
indent|'                    '
name|'branches'
op|'='
name|'self'
op|'.'
name|'splitFilesIntoBranches'
op|'('
name|'description'
op|')'
newline|'\n'
name|'for'
name|'branch'
name|'in'
name|'branches'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
comment|'## HACK  --hwn'
nl|'\n'
indent|'                        '
name|'branchPrefix'
op|'='
name|'self'
op|'.'
name|'depotPaths'
op|'['
number|'0'
op|']'
op|'+'
name|'branch'
op|'+'
string|'"/"'
newline|'\n'
nl|'\n'
name|'parent'
op|'='
string|'""'
newline|'\n'
nl|'\n'
name|'filesForCommit'
op|'='
name|'branches'
op|'['
name|'branch'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                            '
name|'print'
string|'"branch is %s"'
op|'%'
name|'branch'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'updatedBranches'
op|'.'
name|'add'
op|'('
name|'branch'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'branch'
name|'not'
name|'in'
name|'self'
op|'.'
name|'createdBranches'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'createdBranches'
op|'.'
name|'add'
op|'('
name|'branch'
op|')'
newline|'\n'
name|'parent'
op|'='
name|'self'
op|'.'
name|'knownBranches'
op|'['
name|'branch'
op|']'
newline|'\n'
name|'if'
name|'parent'
op|'=='
name|'branch'
op|':'
newline|'\n'
indent|'                                '
name|'parent'
op|'='
string|'""'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                                '
name|'fullBranch'
op|'='
name|'self'
op|'.'
name|'projectName'
op|'+'
name|'branch'
newline|'\n'
name|'if'
name|'fullBranch'
name|'not'
name|'in'
name|'self'
op|'.'
name|'p4BranchesInGit'
op|':'
newline|'\n'
indent|'                                    '
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'                                        '
name|'print'
op|'('
string|'"\\n    Importing new branch %s"'
op|'%'
name|'fullBranch'
op|')'
op|';'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'importNewBranch'
op|'('
name|'branch'
op|','
name|'change'
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                                        '
name|'parent'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'p4BranchesInGit'
op|'.'
name|'append'
op|'('
name|'fullBranch'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'                                        '
name|'print'
op|'('
string|'"\\n    Resuming with change %s"'
op|'%'
name|'change'
op|')'
op|';'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                                    '
name|'print'
string|'"parent determined through known branches: %s"'
op|'%'
name|'parent'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'branch'
op|'='
name|'self'
op|'.'
name|'gitRefForBranch'
op|'('
name|'branch'
op|')'
newline|'\n'
name|'parent'
op|'='
name|'self'
op|'.'
name|'gitRefForBranch'
op|'('
name|'parent'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                            '
name|'print'
string|'"looking for initial parent for %s; current parent is %s"'
op|'%'
op|'('
name|'branch'
op|','
name|'parent'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'parent'
op|')'
op|'=='
number|'0'
name|'and'
name|'branch'
name|'in'
name|'self'
op|'.'
name|'initialParents'
op|':'
newline|'\n'
indent|'                            '
name|'parent'
op|'='
name|'self'
op|'.'
name|'initialParents'
op|'['
name|'branch'
op|']'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'initialParents'
op|'['
name|'branch'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'blob'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'parent'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                            '
name|'tempBranch'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tempBranchLocation'
op|','
string|'"%d"'
op|'%'
op|'('
name|'change'
op|')'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                                '
name|'print'
string|'"Creating temporary branch: "'
op|'+'
name|'tempBranch'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'commit'
op|'('
name|'description'
op|','
name|'filesForCommit'
op|','
name|'tempBranch'
op|','
op|'['
name|'branchPrefix'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tempBranches'
op|'.'
name|'append'
op|'('
name|'tempBranch'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'checkpoint'
op|'('
op|')'
newline|'\n'
name|'blob'
op|'='
name|'self'
op|'.'
name|'searchParent'
op|'('
name|'parent'
op|','
name|'branch'
op|','
name|'tempBranch'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'blob'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'commit'
op|'('
name|'description'
op|','
name|'filesForCommit'
op|','
name|'branch'
op|','
op|'['
name|'branchPrefix'
op|']'
op|','
name|'blob'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                                '
name|'print'
string|'"Parent of %s not found. Committing into head of %s"'
op|'%'
op|'('
name|'branch'
op|','
name|'parent'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'commit'
op|'('
name|'description'
op|','
name|'filesForCommit'
op|','
name|'branch'
op|','
op|'['
name|'branchPrefix'
op|']'
op|','
name|'parent'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'files'
op|'='
name|'self'
op|'.'
name|'extractFilesFromCommit'
op|'('
name|'description'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commit'
op|'('
name|'description'
op|','
name|'files'
op|','
name|'self'
op|'.'
name|'branch'
op|','
name|'self'
op|'.'
name|'depotPaths'
op|','
nl|'\n'
name|'self'
op|'.'
name|'initialParent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'initialParent'
op|'='
string|'""'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'                '
name|'print'
name|'self'
op|'.'
name|'gitError'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|importHeadRevision
dedent|''
dedent|''
dedent|''
name|'def'
name|'importHeadRevision'
op|'('
name|'self'
op|','
name|'revision'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|'"Doing initial import of %s from revision %s into %s"'
op|'%'
op|'('
string|"' '"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'depotPaths'
op|')'
op|','
name|'revision'
op|','
name|'self'
op|'.'
name|'branch'
op|')'
newline|'\n'
nl|'\n'
name|'details'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'details'
op|'['
string|'"user"'
op|']'
op|'='
string|'"git perforce import user"'
newline|'\n'
name|'details'
op|'['
string|'"desc"'
op|']'
op|'='
op|'('
string|'"Initial import of %s from the state at revision %s\\n"'
nl|'\n'
op|'%'
op|'('
string|"' '"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'depotPaths'
op|')'
op|','
name|'revision'
op|')'
op|')'
newline|'\n'
name|'details'
op|'['
string|'"change"'
op|']'
op|'='
name|'revision'
newline|'\n'
name|'newestRevision'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'fileCnt'
op|'='
number|'0'
newline|'\n'
name|'fileArgs'
op|'='
op|'['
string|'"%s...%s"'
op|'%'
op|'('
name|'p'
op|','
name|'revision'
op|')'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'depotPaths'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'info'
name|'in'
name|'p4CmdList'
op|'('
op|'['
string|'"files"'
op|']'
op|'+'
name|'fileArgs'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'if'
string|"'code'"
name|'in'
name|'info'
name|'and'
name|'info'
op|'['
string|"'code'"
op|']'
op|'=='
string|"'error'"
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"p4 returned an error: %s\\n"'
nl|'\n'
op|'%'
name|'info'
op|'['
string|"'data'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'info'
op|'['
string|"'data'"
op|']'
op|'.'
name|'find'
op|'('
string|'"must refer to client"'
op|')'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"This particular p4 error is misleading.\\n"'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"Perhaps the depot path was misspelled.\\n"'
op|')'
op|';'
newline|'\n'
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"Depot path:  %s\\n"'
op|'%'
string|'" "'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'depotPaths'
op|')'
op|')'
newline|'\n'
dedent|''
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'p4ExitCode'"
name|'in'
name|'info'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"p4 exitcode: %s\\n"'
op|'%'
name|'info'
op|'['
string|"'p4ExitCode'"
op|']'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'change'
op|'='
name|'int'
op|'('
name|'info'
op|'['
string|'"change"'
op|']'
op|')'
newline|'\n'
name|'if'
name|'change'
op|'>'
name|'newestRevision'
op|':'
newline|'\n'
indent|'                '
name|'newestRevision'
op|'='
name|'change'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'info'
op|'['
string|'"action"'
op|']'
name|'in'
name|'self'
op|'.'
name|'delete_actions'
op|':'
newline|'\n'
comment|'# don\'t increase the file cnt, otherwise details["depotFile123"] will have gaps!'
nl|'\n'
comment|'#fileCnt = fileCnt + 1'
nl|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'prop'
name|'in'
op|'['
string|'"depotFile"'
op|','
string|'"rev"'
op|','
string|'"action"'
op|','
string|'"type"'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'details'
op|'['
string|'"%s%s"'
op|'%'
op|'('
name|'prop'
op|','
name|'fileCnt'
op|')'
op|']'
op|'='
name|'info'
op|'['
name|'prop'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'fileCnt'
op|'='
name|'fileCnt'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'details'
op|'['
string|'"change"'
op|']'
op|'='
name|'newestRevision'
newline|'\n'
nl|'\n'
comment|'# Use time from top-most change so that all git p4 clones of'
nl|'\n'
comment|'# the same p4 repo have the same commit SHA1s.'
nl|'\n'
name|'res'
op|'='
name|'p4CmdList'
op|'('
string|'"describe -s %d"'
op|'%'
name|'newestRevision'
op|')'
newline|'\n'
name|'newestTime'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'r'
name|'in'
name|'res'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'r'
op|'.'
name|'has_key'
op|'('
string|"'time'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'newestTime'
op|'='
name|'int'
op|'('
name|'r'
op|'['
string|"'time'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'newestTime'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"\\"describe -s\\" on newest change %d did not give a time"'
op|')'
newline|'\n'
dedent|''
name|'details'
op|'['
string|'"time"'
op|']'
op|'='
name|'newestTime'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'updateOptionDict'
op|'('
name|'details'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'commit'
op|'('
name|'details'
op|','
name|'self'
op|'.'
name|'extractFilesFromCommit'
op|'('
name|'details'
op|')'
op|','
name|'self'
op|'.'
name|'branch'
op|','
name|'self'
op|'.'
name|'depotPaths'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"IO error with git fast-import. Is your git version recent enough?"'
newline|'\n'
name|'print'
name|'self'
op|'.'
name|'gitError'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|run
dedent|''
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'depotPaths'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'changeRange'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'initialParent'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'previousDepotPaths'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|'# map from branch depot path to parent branch'
nl|'\n'
name|'self'
op|'.'
name|'knownBranches'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'initialParents'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'hasOrigin'
op|'='
name|'originP4BranchesExist'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'syncWithOrigin'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'hasOrigin'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'importIntoRemotes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'refPrefix'
op|'='
string|'"refs/remotes/p4/"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'refPrefix'
op|'='
string|'"refs/heads/p4/"'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'syncWithOrigin'
name|'and'
name|'self'
op|'.'
name|'hasOrigin'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"Syncing with origin first by calling git fetch origin"'
newline|'\n'
dedent|''
name|'system'
op|'('
string|'"git fetch origin"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'branch'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'branch'
op|'='
name|'self'
op|'.'
name|'refPrefix'
op|'+'
string|'"master"'
newline|'\n'
name|'if'
name|'gitBranchExists'
op|'('
string|'"refs/heads/p4"'
op|')'
name|'and'
name|'self'
op|'.'
name|'importIntoRemotes'
op|':'
newline|'\n'
indent|'                '
name|'system'
op|'('
string|'"git update-ref %s refs/heads/p4"'
op|'%'
name|'self'
op|'.'
name|'branch'
op|')'
newline|'\n'
name|'system'
op|'('
string|'"git branch -D p4"'
op|')'
op|';'
newline|'\n'
comment|'# create it /after/ importing, when master exists'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'gitBranchExists'
op|'('
name|'self'
op|'.'
name|'refPrefix'
op|'+'
string|'"HEAD"'
op|')'
name|'and'
name|'self'
op|'.'
name|'importIntoRemotes'
name|'and'
name|'gitBranchExists'
op|'('
name|'self'
op|'.'
name|'branch'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'system'
op|'('
string|'"git symbolic-ref %sHEAD %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'refPrefix'
op|','
name|'self'
op|'.'
name|'branch'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# accept either the command-line option, or the configuration variable'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'useClientSpec'
op|':'
newline|'\n'
comment|'# will use this after clone to set the variable'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'useClientSpec_from_options'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'gitConfig'
op|'('
string|'"git-p4.useclientspec"'
op|','
string|'"--bool"'
op|')'
op|'=='
string|'"true"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'useClientSpec'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'useClientSpec'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'clientSpecDirs'
op|'='
name|'getClientSpec'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO: should always look at previous commits,'
nl|'\n'
comment|'# merge with previous imports, if possible.'
nl|'\n'
dedent|''
name|'if'
name|'args'
op|'=='
op|'['
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'hasOrigin'
op|':'
newline|'\n'
indent|'                '
name|'createOrUpdateBranchesFromOrigin'
op|'('
name|'self'
op|'.'
name|'refPrefix'
op|','
name|'self'
op|'.'
name|'silent'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'listExistingP4GitBranches'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'p4BranchesInGit'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"Importing from/into multiple branches"'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'detectBranches'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"branches: %s"'
op|'%'
name|'self'
op|'.'
name|'p4BranchesInGit'
newline|'\n'
nl|'\n'
dedent|''
name|'p4Change'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'branch'
name|'in'
name|'self'
op|'.'
name|'p4BranchesInGit'
op|':'
newline|'\n'
indent|'                '
name|'logMsg'
op|'='
name|'extractLogMessageFromGitCommit'
op|'('
name|'self'
op|'.'
name|'refPrefix'
op|'+'
name|'branch'
op|')'
newline|'\n'
nl|'\n'
name|'settings'
op|'='
name|'extractSettingsGitLog'
op|'('
name|'logMsg'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'readOptions'
op|'('
name|'settings'
op|')'
newline|'\n'
name|'if'
op|'('
name|'settings'
op|'.'
name|'has_key'
op|'('
string|"'depot-paths'"
op|')'
nl|'\n'
name|'and'
name|'settings'
op|'.'
name|'has_key'
op|'('
string|"'change'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'change'
op|'='
name|'int'
op|'('
name|'settings'
op|'['
string|"'change'"
op|']'
op|')'
op|'+'
number|'1'
newline|'\n'
name|'p4Change'
op|'='
name|'max'
op|'('
name|'p4Change'
op|','
name|'change'
op|')'
newline|'\n'
nl|'\n'
name|'depotPaths'
op|'='
name|'sorted'
op|'('
name|'settings'
op|'['
string|"'depot-paths'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'previousDepotPaths'
op|'=='
op|'['
op|']'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'previousDepotPaths'
op|'='
name|'depotPaths'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'paths'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
op|'('
name|'prev'
op|','
name|'cur'
op|')'
name|'in'
name|'zip'
op|'('
name|'self'
op|'.'
name|'previousDepotPaths'
op|','
name|'depotPaths'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'prev_list'
op|'='
name|'prev'
op|'.'
name|'split'
op|'('
string|'"/"'
op|')'
newline|'\n'
name|'cur_list'
op|'='
name|'cur'
op|'.'
name|'split'
op|'('
string|'"/"'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'min'
op|'('
name|'len'
op|'('
name|'cur_list'
op|')'
op|','
name|'len'
op|'('
name|'prev_list'
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                                '
name|'if'
name|'cur_list'
op|'['
name|'i'
op|']'
op|'<>'
name|'prev_list'
op|'['
name|'i'
op|']'
op|':'
newline|'\n'
indent|'                                    '
name|'i'
op|'='
name|'i'
op|'-'
number|'1'
newline|'\n'
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'paths'
op|'.'
name|'append'
op|'('
string|'"/"'
op|'.'
name|'join'
op|'('
name|'cur_list'
op|'['
op|':'
name|'i'
op|'+'
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'previousDepotPaths'
op|'='
name|'paths'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'p4Change'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'depotPaths'
op|'='
name|'sorted'
op|'('
name|'self'
op|'.'
name|'previousDepotPaths'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'changeRange'
op|'='
string|'"@%s,#head"'
op|'%'
name|'p4Change'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'detectBranches'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'initialParent'
op|'='
name|'parseRevision'
op|'('
name|'self'
op|'.'
name|'branch'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
name|'and'
name|'not'
name|'self'
op|'.'
name|'detectBranches'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"Performing incremental import into %s git branch"'
op|'%'
name|'self'
op|'.'
name|'branch'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'branch'
op|'.'
name|'startswith'
op|'('
string|'"refs/"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'branch'
op|'='
string|'"refs/heads/"'
op|'+'
name|'self'
op|'.'
name|'branch'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'=='
number|'0'
name|'and'
name|'self'
op|'.'
name|'depotPaths'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"Depot paths: %s"'
op|'%'
string|"' '"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'depotPaths'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'depotPaths'
name|'and'
name|'self'
op|'.'
name|'depotPaths'
op|'!='
name|'args'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
string|'"previous import used depot path %s and now %s was specified. "'
nl|'\n'
string|'"This doesn\'t work!"'
op|'%'
op|'('
string|"' '"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'depotPaths'
op|')'
op|','
nl|'\n'
string|"' '"
op|'.'
name|'join'
op|'('
name|'args'
op|')'
op|')'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'depotPaths'
op|'='
name|'sorted'
op|'('
name|'args'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'revision'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'users'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Make sure no revision specifiers are used when --changesfile'
nl|'\n'
comment|'# is specified.'
nl|'\n'
name|'bad_changesfile'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'changesFile'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'depotPaths'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'p'
op|'.'
name|'find'
op|'('
string|'"@"'
op|')'
op|'>='
number|'0'
name|'or'
name|'p'
op|'.'
name|'find'
op|'('
string|'"#"'
op|')'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'bad_changesfile'
op|'='
name|'True'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'bad_changesfile'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"Option --changesfile is incompatible with revision specifiers"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'newPaths'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'depotPaths'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'p'
op|'.'
name|'find'
op|'('
string|'"@"'
op|')'
op|'!='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'atIdx'
op|'='
name|'p'
op|'.'
name|'index'
op|'('
string|'"@"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'changeRange'
op|'='
name|'p'
op|'['
name|'atIdx'
op|':'
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'changeRange'
op|'=='
string|'"@all"'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'changeRange'
op|'='
string|'""'
newline|'\n'
dedent|''
name|'elif'
string|"','"
name|'not'
name|'in'
name|'self'
op|'.'
name|'changeRange'
op|':'
newline|'\n'
indent|'                    '
name|'revision'
op|'='
name|'self'
op|'.'
name|'changeRange'
newline|'\n'
name|'self'
op|'.'
name|'changeRange'
op|'='
string|'""'
newline|'\n'
dedent|''
name|'p'
op|'='
name|'p'
op|'['
op|':'
name|'atIdx'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'p'
op|'.'
name|'find'
op|'('
string|'"#"'
op|')'
op|'!='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'hashIdx'
op|'='
name|'p'
op|'.'
name|'index'
op|'('
string|'"#"'
op|')'
newline|'\n'
name|'revision'
op|'='
name|'p'
op|'['
name|'hashIdx'
op|':'
op|']'
newline|'\n'
name|'p'
op|'='
name|'p'
op|'['
op|':'
name|'hashIdx'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'previousDepotPaths'
op|'=='
op|'['
op|']'
op|':'
newline|'\n'
comment|'# pay attention to changesfile, if given, else import'
nl|'\n'
comment|'# the entire p4 tree at the head revision'
nl|'\n'
indent|'                '
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'changesFile'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'revision'
op|'='
string|'"#head"'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'p'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|'"\\.\\.\\.$"'
op|','
string|'""'
op|','
name|'p'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'p'
op|'.'
name|'endswith'
op|'('
string|'"/"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'p'
op|'+='
string|'"/"'
newline|'\n'
nl|'\n'
dedent|''
name|'newPaths'
op|'.'
name|'append'
op|'('
name|'p'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'depotPaths'
op|'='
name|'newPaths'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'loadUserMapFromCache'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'labels'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'detectLabels'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'getLabels'
op|'('
op|')'
op|';'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'detectBranches'
op|':'
newline|'\n'
comment|"## FIXME - what's a P4 projectName ?"
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'projectName'
op|'='
name|'self'
op|'.'
name|'guessProjectName'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'hasOrigin'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'getBranchMappingFromGitBranches'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'getBranchMapping'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"p4-git branches: %s"'
op|'%'
name|'self'
op|'.'
name|'p4BranchesInGit'
newline|'\n'
name|'print'
string|'"initial parents: %s"'
op|'%'
name|'self'
op|'.'
name|'initialParents'
newline|'\n'
dedent|''
name|'for'
name|'b'
name|'in'
name|'self'
op|'.'
name|'p4BranchesInGit'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'b'
op|'!='
string|'"master"'
op|':'
newline|'\n'
nl|'\n'
comment|'## FIXME'
nl|'\n'
indent|'                    '
name|'b'
op|'='
name|'b'
op|'['
name|'len'
op|'('
name|'self'
op|'.'
name|'projectName'
op|')'
op|':'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'createdBranches'
op|'.'
name|'add'
op|'('
name|'b'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'tz'
op|'='
string|'"%+03d%02d"'
op|'%'
op|'('
op|'-'
name|'time'
op|'.'
name|'timezone'
op|'/'
number|'3600'
op|','
op|'('
op|'('
op|'-'
name|'time'
op|'.'
name|'timezone'
op|'%'
number|'3600'
op|')'
op|'/'
number|'60'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'importProcess'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
op|'['
string|'"git"'
op|','
string|'"fast-import"'
op|']'
op|','
nl|'\n'
name|'stdin'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
nl|'\n'
name|'stderr'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|')'
op|';'
newline|'\n'
name|'self'
op|'.'
name|'gitOutput'
op|'='
name|'importProcess'
op|'.'
name|'stdout'
newline|'\n'
name|'self'
op|'.'
name|'gitStream'
op|'='
name|'importProcess'
op|'.'
name|'stdin'
newline|'\n'
name|'self'
op|'.'
name|'gitError'
op|'='
name|'importProcess'
op|'.'
name|'stderr'
newline|'\n'
nl|'\n'
name|'if'
name|'revision'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'importHeadRevision'
op|'('
name|'revision'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'changes'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'changesFile'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'output'
op|'='
name|'open'
op|'('
name|'self'
op|'.'
name|'changesFile'
op|')'
op|'.'
name|'readlines'
op|'('
op|')'
newline|'\n'
name|'changeSet'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'output'
op|':'
newline|'\n'
indent|'                    '
name|'changeSet'
op|'.'
name|'add'
op|'('
name|'int'
op|'('
name|'line'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'change'
name|'in'
name|'changeSet'
op|':'
newline|'\n'
indent|'                    '
name|'changes'
op|'.'
name|'append'
op|'('
name|'change'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'changes'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# catch "git p4 sync" with no new branches, in a repo that'
nl|'\n'
comment|'# does not have any existing p4 branches'
nl|'\n'
indent|'                '
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'=='
number|'0'
name|'and'
name|'not'
name|'self'
op|'.'
name|'p4BranchesInGit'
op|':'
newline|'\n'
indent|'                    '
name|'die'
op|'('
string|'"No remote p4 branches.  Perhaps you never did \\"git p4 clone\\" in here."'
op|')'
op|';'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"Getting p4 changes for %s...%s"'
op|'%'
op|'('
string|"', '"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'depotPaths'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'changeRange'
op|')'
newline|'\n'
dedent|''
name|'changes'
op|'='
name|'p4ChangesForPaths'
op|'('
name|'self'
op|'.'
name|'depotPaths'
op|','
name|'self'
op|'.'
name|'changeRange'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'maxChanges'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'changes'
op|'='
name|'changes'
op|'['
op|':'
name|'min'
op|'('
name|'int'
op|'('
name|'self'
op|'.'
name|'maxChanges'
op|')'
op|','
name|'len'
op|'('
name|'changes'
op|')'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'changes'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"No changes to import!"'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
name|'and'
name|'not'
name|'self'
op|'.'
name|'detectBranches'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'"Import destination: %s"'
op|'%'
name|'self'
op|'.'
name|'branch'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'updatedBranches'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'importChanges'
op|'('
name|'changes'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'silent'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|'""'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'updatedBranches'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                        '
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'write'
op|'('
string|'"Updated branches: "'
op|')'
newline|'\n'
name|'for'
name|'b'
name|'in'
name|'self'
op|'.'
name|'updatedBranches'
op|':'
newline|'\n'
indent|'                            '
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'write'
op|'('
string|'"%s "'
op|'%'
name|'b'
op|')'
newline|'\n'
dedent|''
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'write'
op|'('
string|'"\\n"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'if'
name|'gitConfig'
op|'('
string|'"git-p4.importLabels"'
op|','
string|'"--bool"'
op|')'
op|'=='
string|'"true"'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'importLabels'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'importLabels'
op|':'
newline|'\n'
indent|'            '
name|'p4Labels'
op|'='
name|'getP4Labels'
op|'('
name|'self'
op|'.'
name|'depotPaths'
op|')'
newline|'\n'
name|'gitTags'
op|'='
name|'getGitTags'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'missingP4Labels'
op|'='
name|'p4Labels'
op|'-'
name|'gitTags'
newline|'\n'
name|'self'
op|'.'
name|'importP4Labels'
op|'('
name|'self'
op|'.'
name|'gitStream'
op|','
name|'missingP4Labels'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'gitStream'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'if'
name|'importProcess'
op|'.'
name|'wait'
op|'('
op|')'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"fast-import failed: %s"'
op|'%'
name|'self'
op|'.'
name|'gitError'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'gitOutput'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'gitError'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Cleanup temporary branches created during import'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'tempBranches'
op|'!='
op|'['
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'branch'
name|'in'
name|'self'
op|'.'
name|'tempBranches'
op|':'
newline|'\n'
indent|'                '
name|'read_pipe'
op|'('
string|'"git update-ref -d %s"'
op|'%'
name|'branch'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'rmdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|'"GIT_DIR"'
op|','
string|'".git"'
op|')'
op|','
name|'self'
op|'.'
name|'tempBranchLocation'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|class|P4Rebase
dedent|''
dedent|''
name|'class'
name|'P4Rebase'
op|'('
name|'Command'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Command'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'options'
op|'='
op|'['
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--import-labels"'
op|','
name|'dest'
op|'='
string|'"importLabels"'
op|','
name|'action'
op|'='
string|'"store_true"'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'importLabels'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
op|'('
string|'"Fetches the latest revision from perforce and "'
nl|'\n'
op|'+'
string|'"rebases the current work (branch) against it"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sync'
op|'='
name|'P4Sync'
op|'('
op|')'
newline|'\n'
name|'sync'
op|'.'
name|'importLabels'
op|'='
name|'self'
op|'.'
name|'importLabels'
newline|'\n'
name|'sync'
op|'.'
name|'run'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'rebase'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|rebase
dedent|''
name|'def'
name|'rebase'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'os'
op|'.'
name|'system'
op|'('
string|'"git update-index --refresh"'
op|')'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"Some files in your working directory are modified and different than what is in your index. You can use git update-index <filename> to bring the index up-to-date or stash away all your changes with git stash."'
op|')'
op|';'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'read_pipe'
op|'('
string|'"git diff-index HEAD --"'
op|')'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"You have uncommited changes. Please commit them before rebasing or stash them away with git stash."'
op|')'
op|';'
newline|'\n'
nl|'\n'
dedent|''
op|'['
name|'upstream'
op|','
name|'settings'
op|']'
op|'='
name|'findUpstreamBranchPoint'
op|'('
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'upstream'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'die'
op|'('
string|'"Cannot find upstream branchpoint for rebase"'
op|')'
newline|'\n'
nl|'\n'
comment|'# the branchpoint may be p4/foo~3, so strip off the parent'
nl|'\n'
dedent|''
name|'upstream'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|'"~[0-9]+$"'
op|','
string|'""'
op|','
name|'upstream'
op|')'
newline|'\n'
nl|'\n'
name|'print'
string|'"Rebasing the current branch onto %s"'
op|'%'
name|'upstream'
newline|'\n'
name|'oldHead'
op|'='
name|'read_pipe'
op|'('
string|'"git rev-parse HEAD"'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'system'
op|'('
string|'"git rebase %s"'
op|'%'
name|'upstream'
op|')'
newline|'\n'
name|'system'
op|'('
string|'"git diff-tree --stat --summary -M %s HEAD"'
op|'%'
name|'oldHead'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|class|P4Clone
dedent|''
dedent|''
name|'class'
name|'P4Clone'
op|'('
name|'P4Sync'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'P4Sync'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
string|'"Creates a new git repository and imports from Perforce into it"'
newline|'\n'
name|'self'
op|'.'
name|'usage'
op|'='
string|'"usage: %prog [options] //depot/path[@revRange]"'
newline|'\n'
name|'self'
op|'.'
name|'options'
op|'+='
op|'['
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--destination"'
op|','
name|'dest'
op|'='
string|'"cloneDestination"'
op|','
nl|'\n'
name|'action'
op|'='
string|"'store'"
op|','
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
name|'help'
op|'='
string|'"where to leave result of the clone"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"-/"'
op|','
name|'dest'
op|'='
string|'"cloneExclude"'
op|','
nl|'\n'
name|'action'
op|'='
string|'"append"'
op|','
name|'type'
op|'='
string|'"string"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"exclude depot path"'
op|')'
op|','
nl|'\n'
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--bare"'
op|','
name|'dest'
op|'='
string|'"cloneBare"'
op|','
nl|'\n'
name|'action'
op|'='
string|'"store_true"'
op|','
name|'default'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'cloneDestination'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'needsGit'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'cloneBare'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# This is required for the "append" cloneExclude action'
nl|'\n'
DECL|member|ensure_value
dedent|''
name|'def'
name|'ensure_value'
op|'('
name|'self'
op|','
name|'attr'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'self'
op|','
name|'attr'
op|')'
name|'or'
name|'getattr'
op|'('
name|'self'
op|','
name|'attr'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'attr'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'getattr'
op|'('
name|'self'
op|','
name|'attr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|defaultDestination
dedent|''
name|'def'
name|'defaultDestination'
op|'('
name|'self'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
comment|'## TODO: use common prefix of args?'
nl|'\n'
indent|'        '
name|'depotPath'
op|'='
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'depotDir'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|'"(@[^@]*)$"'
op|','
string|'""'
op|','
name|'depotPath'
op|')'
newline|'\n'
name|'depotDir'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|'"(#[^#]*)$"'
op|','
string|'""'
op|','
name|'depotDir'
op|')'
newline|'\n'
name|'depotDir'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|'r"\\.\\.\\.$"'
op|','
string|'""'
op|','
name|'depotDir'
op|')'
newline|'\n'
name|'depotDir'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|'r"/$"'
op|','
string|'""'
op|','
name|'depotDir'
op|')'
newline|'\n'
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'split'
op|'('
name|'depotDir'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'<'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'keepRepoPath'
name|'and'
name|'not'
name|'self'
op|'.'
name|'cloneDestination'
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"Must specify destination for --keep-path\\n"'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'depotPaths'
op|'='
name|'args'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'cloneDestination'
name|'and'
name|'len'
op|'('
name|'depotPaths'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cloneDestination'
op|'='
name|'depotPaths'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'depotPaths'
op|'='
name|'depotPaths'
op|'['
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'cloneExclude'
op|'='
op|'['
string|'"/"'
op|'+'
name|'p'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'cloneExclude'
op|']'
newline|'\n'
name|'for'
name|'p'
name|'in'
name|'depotPaths'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'p'
op|'.'
name|'startswith'
op|'('
string|'"//"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'cloneDestination'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cloneDestination'
op|'='
name|'self'
op|'.'
name|'defaultDestination'
op|'('
name|'args'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|'"Importing from %s into %s"'
op|'%'
op|'('
string|"', '"
op|'.'
name|'join'
op|'('
name|'depotPaths'
op|')'
op|','
name|'self'
op|'.'
name|'cloneDestination'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'cloneDestination'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'self'
op|'.'
name|'cloneDestination'
op|')'
newline|'\n'
dedent|''
name|'chdir'
op|'('
name|'self'
op|'.'
name|'cloneDestination'
op|')'
newline|'\n'
nl|'\n'
name|'init_cmd'
op|'='
op|'['
string|'"git"'
op|','
string|'"init"'
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'cloneBare'
op|':'
newline|'\n'
indent|'            '
name|'init_cmd'
op|'.'
name|'append'
op|'('
string|'"--bare"'
op|')'
newline|'\n'
dedent|''
name|'subprocess'
op|'.'
name|'check_call'
op|'('
name|'init_cmd'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'P4Sync'
op|'.'
name|'run'
op|'('
name|'self'
op|','
name|'depotPaths'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'branch'
op|'!='
string|'"master"'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'importIntoRemotes'
op|':'
newline|'\n'
indent|'                '
name|'masterbranch'
op|'='
string|'"refs/remotes/p4/master"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'masterbranch'
op|'='
string|'"refs/heads/p4/master"'
newline|'\n'
dedent|''
name|'if'
name|'gitBranchExists'
op|'('
name|'masterbranch'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'system'
op|'('
string|'"git branch master %s"'
op|'%'
name|'masterbranch'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'cloneBare'
op|':'
newline|'\n'
indent|'                    '
name|'system'
op|'('
string|'"git checkout -f"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|'"Could not detect main branch. No checkout/master branch created."'
newline|'\n'
nl|'\n'
comment|'# auto-set this variable if invoked with --use-client-spec'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'useClientSpec_from_options'
op|':'
newline|'\n'
indent|'            '
name|'system'
op|'('
string|'"git config --bool git-p4.useclientspec true"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|class|P4Branches
dedent|''
dedent|''
name|'class'
name|'P4Branches'
op|'('
name|'Command'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Command'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'options'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
op|'('
string|'"Shows the git branches that hold imports and their "'
nl|'\n'
op|'+'
string|'"corresponding perforce depot paths"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'verbose'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'originP4BranchesExist'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'createOrUpdateBranchesFromOrigin'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cmdline'
op|'='
string|'"git rev-parse --symbolic "'
newline|'\n'
name|'cmdline'
op|'+='
string|'" --remotes"'
newline|'\n'
nl|'\n'
name|'for'
name|'line'
name|'in'
name|'read_pipe_lines'
op|'('
name|'cmdline'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'line'
op|'='
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'line'
op|'.'
name|'startswith'
op|'('
string|"'p4/'"
op|')'
name|'or'
name|'line'
op|'=='
string|'"p4/HEAD"'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'branch'
op|'='
name|'line'
newline|'\n'
nl|'\n'
name|'log'
op|'='
name|'extractLogMessageFromGitCommit'
op|'('
string|'"refs/remotes/%s"'
op|'%'
name|'branch'
op|')'
newline|'\n'
name|'settings'
op|'='
name|'extractSettingsGitLog'
op|'('
name|'log'
op|')'
newline|'\n'
nl|'\n'
name|'print'
string|'"%s <= %s (%s)"'
op|'%'
op|'('
name|'branch'
op|','
string|'","'
op|'.'
name|'join'
op|'('
name|'settings'
op|'['
string|'"depot-paths"'
op|']'
op|')'
op|','
name|'settings'
op|'['
string|'"change"'
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|class|HelpFormatter
dedent|''
dedent|''
name|'class'
name|'HelpFormatter'
op|'('
name|'optparse'
op|'.'
name|'IndentedHelpFormatter'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'optparse'
op|'.'
name|'IndentedHelpFormatter'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|format_description
dedent|''
name|'def'
name|'format_description'
op|'('
name|'self'
op|','
name|'description'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'description'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'description'
op|'+'
string|'"\\n"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'""'
newline|'\n'
nl|'\n'
DECL|function|printUsage
dedent|''
dedent|''
dedent|''
name|'def'
name|'printUsage'
op|'('
name|'commands'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'print'
string|'"usage: %s <command> [options]"'
op|'%'
name|'sys'
op|'.'
name|'argv'
op|'['
number|'0'
op|']'
newline|'\n'
name|'print'
string|'""'
newline|'\n'
name|'print'
string|'"valid commands: %s"'
op|'%'
string|'", "'
op|'.'
name|'join'
op|'('
name|'commands'
op|')'
newline|'\n'
name|'print'
string|'""'
newline|'\n'
name|'print'
string|'"Try %s <command> --help for command specific help."'
op|'%'
name|'sys'
op|'.'
name|'argv'
op|'['
number|'0'
op|']'
newline|'\n'
name|'print'
string|'""'
newline|'\n'
nl|'\n'
DECL|variable|commands
dedent|''
name|'commands'
op|'='
op|'{'
nl|'\n'
string|'"debug"'
op|':'
name|'P4Debug'
op|','
nl|'\n'
string|'"submit"'
op|':'
name|'P4Submit'
op|','
nl|'\n'
string|'"commit"'
op|':'
name|'P4Submit'
op|','
nl|'\n'
string|'"sync"'
op|':'
name|'P4Sync'
op|','
nl|'\n'
string|'"rebase"'
op|':'
name|'P4Rebase'
op|','
nl|'\n'
string|'"clone"'
op|':'
name|'P4Clone'
op|','
nl|'\n'
string|'"rollback"'
op|':'
name|'P4RollBack'
op|','
nl|'\n'
string|'"branches"'
op|':'
name|'P4Branches'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
name|'def'
name|'main'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'len'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'printUsage'
op|'('
name|'commands'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cmd'
op|'='
string|'""'
newline|'\n'
name|'cmdName'
op|'='
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'klass'
op|'='
name|'commands'
op|'['
name|'cmdName'
op|']'
newline|'\n'
name|'cmd'
op|'='
name|'klass'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|'"unknown command %s"'
op|'%'
name|'cmdName'
newline|'\n'
name|'print'
string|'""'
newline|'\n'
name|'printUsage'
op|'('
name|'commands'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'options'
op|'='
name|'cmd'
op|'.'
name|'options'
newline|'\n'
name|'cmd'
op|'.'
name|'gitdir'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|'"GIT_DIR"'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|'='
name|'sys'
op|'.'
name|'argv'
op|'['
number|'2'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'options'
op|'.'
name|'append'
op|'('
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--verbose"'
op|','
name|'dest'
op|'='
string|'"verbose"'
op|','
name|'action'
op|'='
string|'"store_true"'
op|')'
op|')'
newline|'\n'
name|'if'
name|'cmd'
op|'.'
name|'needsGit'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'.'
name|'append'
op|'('
name|'optparse'
op|'.'
name|'make_option'
op|'('
string|'"--git-dir"'
op|','
name|'dest'
op|'='
string|'"gitdir"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'parser'
op|'='
name|'optparse'
op|'.'
name|'OptionParser'
op|'('
name|'cmd'
op|'.'
name|'usage'
op|'.'
name|'replace'
op|'('
string|'"%prog"'
op|','
string|'"%prog "'
op|'+'
name|'cmdName'
op|')'
op|','
nl|'\n'
name|'options'
op|','
nl|'\n'
name|'description'
op|'='
name|'cmd'
op|'.'
name|'description'
op|','
nl|'\n'
name|'formatter'
op|'='
name|'HelpFormatter'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'cmd'
op|','
name|'args'
op|')'
op|'='
name|'parser'
op|'.'
name|'parse_args'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'2'
op|':'
op|']'
op|','
name|'cmd'
op|')'
op|';'
newline|'\n'
name|'global'
name|'verbose'
newline|'\n'
name|'verbose'
op|'='
name|'cmd'
op|'.'
name|'verbose'
newline|'\n'
name|'if'
name|'cmd'
op|'.'
name|'needsGit'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'cmd'
op|'.'
name|'gitdir'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'cmd'
op|'.'
name|'gitdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
string|'".git"'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'isValidGitDir'
op|'('
name|'cmd'
op|'.'
name|'gitdir'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'cmd'
op|'.'
name|'gitdir'
op|'='
name|'read_pipe'
op|'('
string|'"git rev-parse --git-dir"'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'cmd'
op|'.'
name|'gitdir'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'cdup'
op|'='
name|'read_pipe'
op|'('
string|'"git rev-parse --show-cdup"'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'cdup'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                        '
name|'chdir'
op|'('
name|'cdup'
op|')'
op|';'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'isValidGitDir'
op|'('
name|'cmd'
op|'.'
name|'gitdir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'isValidGitDir'
op|'('
name|'cmd'
op|'.'
name|'gitdir'
op|'+'
string|'"/.git"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'cmd'
op|'.'
name|'gitdir'
op|'+='
string|'"/.git"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'die'
op|'('
string|'"fatal: cannot locate git repository at %s"'
op|'%'
name|'cmd'
op|'.'
name|'gitdir'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'os'
op|'.'
name|'environ'
op|'['
string|'"GIT_DIR"'
op|']'
op|'='
name|'cmd'
op|'.'
name|'gitdir'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'cmd'
op|'.'
name|'run'
op|'('
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'parser'
op|'.'
name|'print_help'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
