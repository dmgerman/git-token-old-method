#!/bin/sh
#
. git-sh-setup-script || die "Not a git archive"
. git-parse-remote "$@"
merge_repo="$_remote_repo"
merge_head="$_remote_head"
merge_store="$_remote_store"

TMP_HEAD="$GIT_DIR/TMP_HEAD"

case "$merge_repo" in
http://* | https://*)
        if [ -n "$GIT_SSL_NO_VERIFY" ]; then
            curl_extra_args="-k"
        fi
	_x40='[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]' &&
	_x40="$_x40$_x40$_x40$_x40$_x40$_x40$_x40$_x40" &&
	head=$(curl -ns $curl_extra_args "$merge_repo/$merge_head") &&
	expr "$head" : "$_x40\$" >/dev/null || {
		echo >&2 "Failed to fetch $merge_head from $merge_repo"
	        exit 1
	}
	git-fetch-dumb-http "$head" "$@"
	case "$?" in
	0) ;;
	2) no_dumb_http_support=1 ;;
	*) exit;;
	esac
	echo Fetching "$merge_head" using http
	git-http-pull -v -a "$head" "$merge_repo/" || {
	    case "$no_dumb_http_support" in
	    1)
		echo >&2 "* This could be because the $merge_repo is packed without"
		echo >&2 "  preparing dumb server support files."
		;;
	    esac
	    exit 1
	}
	;;
rsync://*)
	rsync -L "$merge_repo/$merge_head" "$TMP_HEAD" || exit 1
	head=$(git-rev-parse TMP_HEAD)
	rm -f "$TMP_HEAD"
	rsync -avz --ignore-existing "$merge_repo/objects/" "$GIT_OBJECT_DIRECTORY/"
	;;
*)
	head=$(git-fetch-pack "$merge_repo" "$merge_head")
	;;
esac || exit 1

git-rev-parse --verify "$head" > /dev/null || exit 1

case "$merge_store" in
'')
	;;
*)
	echo "$head" > "$GIT_DIR/$merge_store"
esac &&

# FETCH_HEAD is fed to git-resolve-script which will eventually be
# passed to git-commit-tree as one of the parents.  Make sure we do
# not give a tag object ID.

git-rev-parse "$head^0" >"$GIT_DIR/FETCH_HEAD"
